[
  {
    id: 34,
    token: '"%%"',
    yytext: '%%',
    yylloc: {
      first_line: 1,
      first_column: 0,
      last_line: 1,
      last_column: 2,
      range: [
        0,
        2,
      ],
    },
  },
  {
    id: 51,
    token: '"STRING_LIT"',
    yytext: '"["',
    yylloc: {
      first_line: 2,
      first_column: 0,
      last_line: 2,
      last_column: 3,
      range: [
        3,
        6,
      ],
    },
  },
  {
    id: 46,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 2,
      first_column: 3,
      last_line: 2,
      last_column: 4,
      range: [
        6,
        7,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET"',
    yytext: '^\\]',
    yylloc: {
      first_line: 2,
      first_column: 4,
      last_line: 2,
      last_column: 7,
      range: [
        7,
        10,
      ],
    },
  },
  {
    id: 47,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 2,
      first_column: 7,
      last_line: 2,
      last_column: 8,
      range: [
        10,
        11,
      ],
    },
  },
  {
    id: 51,
    token: '"STRING_LIT"',
    yytext: '"]"',
    yylloc: {
      first_line: 2,
      first_column: 8,
      last_line: 2,
      last_column: 11,
      range: [
        11,
        14,
      ],
    },
  },
  {
    id: 26,
    token: '"ACTION_START"',
    yytext: '%{{{{{',
    yylloc: {
      first_line: 2,
      first_column: 12,
      last_line: 2,
      last_column: 12,
      range: [
        15,
        15,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: `
return "%{..%}";
`,
    yylloc: {
      first_line: 2,
      first_column: 12,
      last_line: 4,
      last_column: 6,
      range: [
        15,
        45,
      ],
    },
  },
  {
    id: 24,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 4,
      first_column: 6,
      last_line: 4,
      last_column: 6,
      range: [
        45,
        45,
      ],
    },
  },
  {
    id: 52,
    token: '"CHARACTER_LIT"',
    yytext: 'a',
    yylloc: {
      first_line: 5,
      first_column: 0,
      last_line: 5,
      last_column: 1,
      range: [
        46,
        47,
      ],
    },
  },
  {
    id: 26,
    token: '"ACTION_START"',
    yytext: '%{',
    yylloc: {
      first_line: 5,
      first_column: 2,
      last_line: 5,
      last_column: 2,
      range: [
        48,
        48,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: ` return "A"; %}}}}}
b %{{{ return "A" + '`,
    yylloc: {
      first_line: 5,
      first_column: 2,
      last_line: 6,
      last_column: 23,
      range: [
        48,
        93,
      ],
    },
  },
  {
    id: 40,
    token: '"UNTERMINATED_STRING_ERROR"',
    yytext: {
      errStr: `Lexical error on line 6: 
unterminated string constant in lexer rule action block.

  Erroneous area:
3: return "%{..%}";
4: %}}}}}
5: a %{ return "A"; %}}}}}
6: b %{{{ return "A" + '%}'; %}}}
^.........................^
7: 
8: 
`,
      recoverable: false,
      text: "'",
      token: null,
      line: 5,
      loc: {
        first_line: 6,
        first_column: 23,
        last_line: 6,
        last_column: 24,
        range: [
          93,
          94,
        ],
      },
      yy: {
        depth: 0,
        include_command_allowed: false,
      },
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: [
          {
            errStr: `Lexical error on line 6: 
unterminated string constant in lexer rule action block.

  Erroneous area:
3: return "%{..%}";
4: %}}}}}
5: a %{ return "A"; %}}}}}
6: b %{{{ return "A" + '%}'; %}}}
^.........................^
7: 
8: 
`,
            recoverable: false,
            text: "'",
            token: null,
            line: 5,
            loc: {
              first_line: 6,
              first_column: 23,
              last_line: 6,
              last_column: 24,
              range: [
                93,
                94,
              ],
            },
            yy: {
              depth: 0,
              include_command_allowed: false,
            },
            lexer: '[lexer]',
          },
          {
            errStr: `Lexical error on line 6: 
too many closing curly braces in lexer rule action block.

Note: the action code chunk may be too complex for jison to parse
easily; we suggest you wrap the action code chunk in '%{...%}'
to help jison grok more or less complex action code chunks.

  Erroneous area:
3: return "%{..%}";
4: %}}}}}
5: a %{ return "A"; %}}}}}
6: b %{{{ return "A" + '%}'; %}}}
^.............................^
7: 
8: 
`,
            recoverable: false,
            text: '}',
            token: null,
            line: 5,
            loc: {
              first_line: 6,
              first_column: 27,
              last_line: 6,
              last_column: 28,
              range: [
                97,
                98,
              ],
            },
            yy: '[reference to sibling --> *.[12].yytext.lexer.__error_infos.[0].yy]',
            lexer: '[lexer]',
          },
          {
            errStr: `Lexical error on line 6: 
too many closing curly braces in lexer rule action block.

Note: the action code chunk may be too complex for jison to parse
easily; we suggest you wrap the action code chunk in '%{...%}'
to help jison grok more or less complex action code chunks.

  Erroneous area:
3: return "%{..%}";
4: %}}}}}
5: a %{ return "A"; %}}}}}
6: b %{{{ return "A" + '%}'; %}}}
^..............................^
7: 
8: 
`,
            recoverable: false,
            text: '}',
            token: null,
            line: 5,
            loc: {
              first_line: 6,
              first_column: 28,
              last_line: 6,
              last_column: 29,
              range: [
                98,
                99,
              ],
            },
            yy: '[reference to sibling --> *.[12].yytext.lexer.__error_infos.[0].yy]',
            lexer: '[lexer]',
          },
          {
            errStr: `Lexical error on line 6: 
too many closing curly braces in lexer rule action block.

Note: the action code chunk may be too complex for jison to parse
easily; we suggest you wrap the action code chunk in '%{...%}'
to help jison grok more or less complex action code chunks.

  Erroneous area:
3: return "%{..%}";
4: %}}}}}
5: a %{ return "A"; %}}}}}
6: b %{{{ return "A" + '%}'; %}}}
^...............................^
7: 
8: 
`,
            recoverable: false,
            text: '}',
            token: null,
            line: 5,
            loc: {
              first_line: 6,
              first_column: 29,
              last_line: 6,
              last_column: 30,
              range: [
                99,
                100,
              ],
            },
            yy: '[reference to sibling --> *.[12].yytext.lexer.__error_infos.[0].yy]',
            lexer: '[lexer]',
          },
        ],
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `%%
"["[^\\]]"]" %{{{{{
return "%{..%}";
%}}}}}
a %{ return "A"; %}}}}}
b %{{{ return "A" + '%}'; %}}}

`,
        matches: false,
        yytext: '',
        offset: 102,
        base_position: 0,
        yyleng: 0,
        yylineno: 7,
        yylloc: {
          first_line: 8,
          first_column: 0,
          last_line: 8,
          last_column: 0,
          range: [
            102,
            102,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
      },
      errorDiag: {
        inputPos: 8,
        yytext: "'",
        yyleng: 1,
        matches: [
          "'",
        ],
        activeCondition: 'action',
        conditionStackDepth: 3,
      },
    },
    yylloc: '[reference to sibling --> *.[12].yytext.lexer.__error_infos.[0].loc]',
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: '; ',
    yylloc: {
      first_line: 6,
      first_column: 24,
      last_line: 6,
      last_column: 26,
      range: [
        94,
        96,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: '%',
    yylloc: {
      first_line: 6,
      first_column: 26,
      last_line: 6,
      last_column: 27,
      range: [
        96,
        97,
      ],
    },
  },
  {
    id: 39,
    token: '"BRACKET_SURPLUS"',
    yytext: {
      errStr: `Lexical error on line 6: 
too many closing curly braces in lexer rule action block.

Note: the action code chunk may be too complex for jison to parse
easily; we suggest you wrap the action code chunk in '%{...%}'
to help jison grok more or less complex action code chunks.

  Erroneous area:
3: return "%{..%}";
4: %}}}}}
5: a %{ return "A"; %}}}}}
6: b %{{{ return "A" + '%}'; %}}}
^.............................^
7: 
8: 
`,
      recoverable: false,
      text: '}',
      token: null,
      line: 5,
      loc: {
        first_line: 6,
        first_column: 27,
        last_line: 6,
        last_column: 28,
        range: [
          97,
          98,
        ],
      },
      yy: {
        depth: 0,
        include_command_allowed: false,
      },
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: '[reference to sibling array --> *.[12].yytext.lexer.__error_infos, length = 4]',
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `%%
"["[^\\]]"]" %{{{{{
return "%{..%}";
%}}}}}
a %{ return "A"; %}}}}}
b %{{{ return "A" + '%}'; %}}}

`,
        matches: false,
        yytext: '',
        offset: 102,
        base_position: 0,
        yyleng: 0,
        yylineno: 7,
        yylloc: {
          first_line: 8,
          first_column: 0,
          last_line: 8,
          last_column: 0,
          range: [
            102,
            102,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
      },
      errorDiag: {
        inputPos: 4,
        yytext: '}',
        yyleng: 1,
        matches: [
          '}',
        ],
        activeCondition: 'action',
        conditionStackDepth: 3,
      },
    },
    yylloc: '[reference to sibling --> *.[12].yytext.lexer.__error_infos.[1].loc]',
  },
  {
    id: 39,
    token: '"BRACKET_SURPLUS"',
    yytext: {
      errStr: `Lexical error on line 6: 
too many closing curly braces in lexer rule action block.

Note: the action code chunk may be too complex for jison to parse
easily; we suggest you wrap the action code chunk in '%{...%}'
to help jison grok more or less complex action code chunks.

  Erroneous area:
3: return "%{..%}";
4: %}}}}}
5: a %{ return "A"; %}}}}}
6: b %{{{ return "A" + '%}'; %}}}
^..............................^
7: 
8: 
`,
      recoverable: false,
      text: '}',
      token: null,
      line: 5,
      loc: {
        first_line: 6,
        first_column: 28,
        last_line: 6,
        last_column: 29,
        range: [
          98,
          99,
        ],
      },
      yy: {
        depth: 0,
        include_command_allowed: false,
      },
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: '[reference to sibling array --> *.[12].yytext.lexer.__error_infos, length = 4]',
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `%%
"["[^\\]]"]" %{{{{{
return "%{..%}";
%}}}}}
a %{ return "A"; %}}}}}
b %{{{ return "A" + '%}'; %}}}

`,
        matches: false,
        yytext: '',
        offset: 102,
        base_position: 0,
        yyleng: 0,
        yylineno: 7,
        yylloc: {
          first_line: 8,
          first_column: 0,
          last_line: 8,
          last_column: 0,
          range: [
            102,
            102,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
      },
      errorDiag: {
        inputPos: 3,
        yytext: '}',
        yyleng: 1,
        matches: [
          '}',
        ],
        activeCondition: 'action',
        conditionStackDepth: 3,
      },
    },
    yylloc: '[reference to sibling --> *.[12].yytext.lexer.__error_infos.[2].loc]',
  },
  {
    id: 39,
    token: '"BRACKET_SURPLUS"',
    yytext: {
      errStr: `Lexical error on line 6: 
too many closing curly braces in lexer rule action block.

Note: the action code chunk may be too complex for jison to parse
easily; we suggest you wrap the action code chunk in '%{...%}'
to help jison grok more or less complex action code chunks.

  Erroneous area:
3: return "%{..%}";
4: %}}}}}
5: a %{ return "A"; %}}}}}
6: b %{{{ return "A" + '%}'; %}}}
^...............................^
7: 
8: 
`,
      recoverable: false,
      text: '}',
      token: null,
      line: 5,
      loc: {
        first_line: 6,
        first_column: 29,
        last_line: 6,
        last_column: 30,
        range: [
          99,
          100,
        ],
      },
      yy: {
        depth: 0,
        include_command_allowed: false,
      },
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: '[reference to sibling array --> *.[12].yytext.lexer.__error_infos, length = 4]',
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `%%
"["[^\\]]"]" %{{{{{
return "%{..%}";
%}}}}}
a %{ return "A"; %}}}}}
b %{{{ return "A" + '%}'; %}}}

`,
        matches: false,
        yytext: '',
        offset: 102,
        base_position: 0,
        yyleng: 0,
        yylineno: 7,
        yylloc: {
          first_line: 8,
          first_column: 0,
          last_line: 8,
          last_column: 0,
          range: [
            102,
            102,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
      },
      errorDiag: {
        inputPos: 2,
        yytext: '}',
        yyleng: 1,
        matches: [
          '}',
        ],
        activeCondition: 'action',
        conditionStackDepth: 3,
      },
    },
    yylloc: '[reference to sibling --> *.[12].yytext.lexer.__error_infos.[3].loc]',
  },
  {
    id: 24,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 6,
      first_column: 30,
      last_line: 6,
      last_column: 30,
      range: [
        100,
        100,
      ],
    },
  },
  {
    id: 34,
    token: '"%%"',
    yytext: '',
    yylloc: {
      first_line: 8,
      first_column: 0,
      last_line: 8,
      last_column: 0,
      range: [
        102,
        102,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 8,
      first_column: 0,
      last_line: 8,
      last_column: 0,
      range: [
        102,
        102,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 8,
      first_column: 0,
      last_line: 8,
      last_column: 0,
      range: [
        102,
        102,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 8,
      first_column: 0,
      last_line: 8,
      last_column: 0,
      range: [
        102,
        102,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 8,
      first_column: 0,
      last_line: 8,
      last_column: 0,
      range: [
        102,
        102,
      ],
    },
  },
  {
    id: -2,
    token: null,
    summary: {
      totalTokenCount: 24,
      EOFTokenCount: 4,
      ERRORTokenCount: 0,
      ParseErrorCallCount: 4,
      DetectedParseErrorCallCount: 0,
      fatalExceptionCount: 0,
    },
  },
]