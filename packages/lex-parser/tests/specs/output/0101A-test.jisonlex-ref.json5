{
  rules: [
    {
      ast: {
        source: "this.begin('FUNCTION_STATE');\n    return yytext.charCodeAt(0)",
        augmentedSource: `


















 this.begin('FUNCTION_STATE');
    return yytext.charCodeAt(0)`,
        ast: {
          program: {
            type: 'Program',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'MemberExpression',
                    computed: false,
                    object: {
                      type: 'ThisExpression',
                      loc: {
                        start: {
                          line: 20,
                          column: 1,
                          token: 0,
                        },
                        end: {
                          line: 20,
                          column: 5,
                          token: 1,
                        },
                        lines: {
                          infos: [
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: '',
                              indent: 0,
                              locked: false,
                              sliceStart: 0,
                              sliceEnd: 0,
                            },
                            {
                              line: " this.begin('FUNCTION_STATE');",
                              indent: 1,
                              locked: false,
                              sliceStart: 1,
                              sliceEnd: 30,
                            },
                            {
                              line: '    return yytext.charCodeAt(0)',
                              indent: 4,
                              locked: false,
                              sliceStart: 4,
                              sliceEnd: 31,
                            },
                          ],
                          mappings: [],
                          cachedSourceMap: null,
                          length: 21,
                          name: null,
                        },
                        tokens: [
                          {
                            type: 'Keyword',
                            value: 'this',
                          },
                          {
                            type: 'Punctuator',
                            value: '.',
                          },
                          {
                            type: 'Identifier',
                            value: 'begin',
                          },
                          {
                            type: 'Punctuator',
                            value: '(',
                          },
                          {
                            type: 'String',
                            value: "'FUNCTION_STATE'",
                          },
                          {
                            type: 'Punctuator',
                            value: ')',
                          },
                          {
                            type: 'Punctuator',
                            value: ';',
                          },
                          {
                            type: 'Keyword',
                            value: 'return',
                          },
                          {
                            type: 'Identifier',
                            value: 'yytext',
                          },
                          {
                            type: 'Punctuator',
                            value: '.',
                          },
                          {
                            type: 'Identifier',
                            value: 'charCodeAt',
                          },
                          {
                            type: 'Punctuator',
                            value: '(',
                          },
                          {
                            type: 'Numeric',
                            value: '0',
                          },
                          {
                            type: 'Punctuator',
                            value: ')',
                          },
                        ],
                        indent: 1,
                      },
                    },
                    property: {
                      type: 'Identifier',
                      name: 'begin',
                      loc: {
                        start: {
                          line: 20,
                          column: 6,
                          token: 2,
                        },
                        end: {
                          line: 20,
                          column: 11,
                          token: 3,
                        },
                        lines: '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.lines]',
                        tokens: [
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[0]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[1]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[2]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[3]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[4]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[5]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[6]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[7]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[8]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[9]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[10]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[11]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[12]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[13]]',
                        ],
                        indent: 1,
                      },
                    },
                    loc: {
                      start: {
                        line: 20,
                        column: 1,
                        token: 0,
                      },
                      end: {
                        line: 20,
                        column: 11,
                        token: 3,
                      },
                      lines: '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.lines]',
                      tokens: [
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[0]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[1]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[2]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[3]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[4]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[5]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[6]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[7]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[8]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[9]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[10]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[11]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[12]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[13]]',
                      ],
                      indent: 1,
                    },
                  },
                  arguments: [
                    {
                      type: 'Literal',
                      value: 'FUNCTION_STATE',
                      raw: "'FUNCTION_STATE'",
                      loc: {
                        start: {
                          line: 20,
                          column: 12,
                          token: 4,
                        },
                        end: {
                          line: 20,
                          column: 28,
                          token: 5,
                        },
                        lines: '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.lines]',
                        tokens: [
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[0]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[1]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[2]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[3]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[4]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[5]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[6]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[7]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[8]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[9]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[10]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[11]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[12]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[13]]',
                        ],
                        indent: 1,
                      },
                    },
                  ],
                  loc: {
                    start: {
                      line: 20,
                      column: 1,
                      token: 0,
                    },
                    end: {
                      line: 20,
                      column: 29,
                      token: 6,
                    },
                    lines: '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.lines]',
                    tokens: [
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[0]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[1]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[2]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[3]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[4]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[5]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[6]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[7]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[8]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[9]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[10]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[11]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[12]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[13]]',
                    ],
                    indent: 1,
                  },
                },
                loc: {
                  start: {
                    line: 20,
                    column: 1,
                    token: 0,
                  },
                  end: {
                    line: 20,
                    column: 30,
                    token: 7,
                  },
                  lines: '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.lines]',
                  tokens: [
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[0]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[1]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[2]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[3]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[4]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[5]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[6]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[7]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[8]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[9]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[10]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[11]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[12]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[13]]',
                  ],
                  indent: 1,
                },
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'CallExpression',
                  callee: {
                    type: 'MemberExpression',
                    computed: false,
                    object: {
                      type: 'Identifier',
                      name: 'yytext',
                      loc: {
                        start: {
                          line: 21,
                          column: 11,
                          token: 8,
                        },
                        end: {
                          line: 21,
                          column: 17,
                          token: 9,
                        },
                        lines: '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.lines]',
                        tokens: [
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[0]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[1]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[2]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[3]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[4]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[5]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[6]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[7]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[8]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[9]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[10]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[11]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[12]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[13]]',
                        ],
                        indent: 4,
                      },
                    },
                    property: {
                      type: 'Identifier',
                      name: 'charCodeAt',
                      loc: {
                        start: {
                          line: 21,
                          column: 18,
                          token: 10,
                        },
                        end: {
                          line: 21,
                          column: 28,
                          token: 11,
                        },
                        lines: '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.lines]',
                        tokens: [
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[0]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[1]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[2]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[3]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[4]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[5]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[6]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[7]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[8]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[9]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[10]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[11]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[12]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[13]]',
                        ],
                        indent: 4,
                      },
                    },
                    loc: {
                      start: {
                        line: 21,
                        column: 11,
                        token: 8,
                      },
                      end: {
                        line: 21,
                        column: 28,
                        token: 11,
                      },
                      lines: '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.lines]',
                      tokens: [
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[0]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[1]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[2]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[3]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[4]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[5]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[6]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[7]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[8]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[9]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[10]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[11]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[12]]',
                        '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[13]]',
                      ],
                      indent: 4,
                    },
                  },
                  arguments: [
                    {
                      type: 'Literal',
                      value: 0,
                      raw: '0',
                      loc: {
                        start: {
                          line: 21,
                          column: 29,
                          token: 12,
                        },
                        end: {
                          line: 21,
                          column: 30,
                          token: 13,
                        },
                        lines: '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.lines]',
                        tokens: [
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[0]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[1]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[2]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[3]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[4]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[5]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[6]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[7]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[8]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[9]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[10]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[11]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[12]]',
                          '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[13]]',
                        ],
                        indent: 4,
                      },
                    },
                  ],
                  loc: {
                    start: {
                      line: 21,
                      column: 11,
                      token: 8,
                    },
                    end: {
                      line: 21,
                      column: 31,
                      token: 14,
                    },
                    lines: '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.lines]',
                    tokens: [
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[0]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[1]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[2]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[3]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[4]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[5]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[6]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[7]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[8]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[9]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[10]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[11]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[12]]',
                      '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[13]]',
                    ],
                    indent: 4,
                  },
                },
                loc: {
                  start: {
                    line: 21,
                    column: 4,
                    token: 7,
                  },
                  end: {
                    line: 21,
                    column: 31,
                    token: 14,
                  },
                  lines: '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.lines]',
                  tokens: [
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[0]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[1]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[2]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[3]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[4]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[5]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[6]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[7]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[8]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[9]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[10]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[11]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[12]]',
                    '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[13]]',
                  ],
                  indent: 4,
                },
              },
            ],
            sourceType: 'script',
            loc: {
              start: {
                line: 20,
                column: 1,
                token: 0,
              },
              end: {
                line: 21,
                column: 31,
                token: 14,
              },
              lines: '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.lines]',
              indent: 1,
              tokens: [
                '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[0]]',
                '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[1]]',
                '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[2]]',
                '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[3]]',
                '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[4]]',
                '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[5]]',
                '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[6]]',
                '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[7]]',
                '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[8]]',
                '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[9]]',
                '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[10]]',
                '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[11]]',
                '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[12]]',
                '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[13]]',
              ],
            },
            errors: [
              {
                index: 68,
                lineNumber: 21,
                description: 'Illegal return statement',
                message: 'Line 21: Illegal return statement',
                name: 'Error',
                stack: `Error: Line 21: Illegal return statement
    at ErrorHandler.constructError (/esprima.js:5012:22)
    at ErrorHandler.createError (/esprima.js:5028:27)
    at ErrorHandler.tolerateError (/esprima.js:5038:27)
    at JSXParser.Parser.tolerateError (/esprima.js:1951:28)
    at JSXParser.Parser.parseReturnStatement (/esprima.js:3911:19)
    at JSXParser.Parser.parseStatement (/esprima.js:4148:43)
    at JSXParser.Parser.parseStatementListItem (/esprima.js:3388:39)
    at JSXParser.Parser.parseScript (/esprima.js:4723:29)
    at Object.parse (/esprima.js:122:61)
    at Object.parse (/esprima.js:14:34)
    at Object.parse (/parser.js:23:30)
    at parseCodeChunkToAST (/lex-parser-cjs.js:1160:44)
    at checkActionBlock (/lex-parser-cjs.js:1286:18)
    at Object.parser__PerformAction (/lex-parser-cjs.js:4535:15)
    at Object.parse (/lex-parser-cjs.js:8934:24)
    at Object.yyparse [as parse] (/lex-parser-cjs.js:12777:25)
    at Context.testEachParserExample (/all-tests.js:483:27)
    at callFn (/runnable.js:364:21)
    at Test.Runnable.run (/runnable.js:352:5)
    at Runner.runTest (/runner.js:677:10)
    at /runner.js:801:12
    at next (/runner.js:594:14)
    at /runner.js:604:7
    at next (/runner.js:486:14)
    at cbHookRun (/runner.js:551:7)
    at done (/runnable.js:308:5)
    at callFn (/runnable.js:387:7)
    at Hook.Runnable.run (/runnable.js:352:5)
    at next (/runner.js:510:10)
    at Immediate._onImmediate (/runner.js:572:5)
    at processImmediate (/timers.js:456:21)`,
              },
            ],
          },
          name: null,
          loc: {
            start: {
              line: 1,
              column: 0,
              token: 0,
            },
            end: {
              line: 21,
              column: 31,
              token: 14,
            },
            lines: '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.lines]',
            indent: 0,
            tokens: [
              '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[0]]',
              '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[1]]',
              '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[2]]',
              '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[3]]',
              '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[4]]',
              '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[5]]',
              '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[6]]',
              '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[7]]',
              '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[8]]',
              '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[9]]',
              '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[10]]',
              '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[11]]',
              '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[12]]',
              '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[13]]',
            ],
          },
          type: 'File',
          comments: null,
          tokens: [
            '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[0]]',
            '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[1]]',
            '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[2]]',
            '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[3]]',
            '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[4]]',
            '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[5]]',
            '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[6]]',
            '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[7]]',
            '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[8]]',
            '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[9]]',
            '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[10]]',
            '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[11]]',
            '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[12]]',
            '[reference to sibling --> *.rules.[0].ast.ast.program.body.[0].expression.callee.object.loc.tokens.[13]]',
          ],
        },
        fault: false,
      },
      fault: false,
      srcCode: "this.begin('FUNCTION_STATE');\n    return yytext.charCodeAt(0)",
      rule: '.',
    },
    {
      ast: {
        source: `yytext = {
                                    conditionStack: this.conditionStack,
                                    conditionsSet: Object.keys(this.conditions),
                                };
                                return 'EOF'`,
        augmentedSource: `























                               yytext = {
                                    conditionStack: this.conditionStack,
                                    conditionsSet: Object.keys(this.conditions),
                                };
                                return 'EOF'`,
        ast: {
          program: {
            type: 'Program',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  operator: '=',
                  left: {
                    type: 'Identifier',
                    name: 'yytext',
                    loc: {
                      start: {
                        line: 25,
                        column: 31,
                        token: 0,
                      },
                      end: {
                        line: 25,
                        column: 37,
                        token: 1,
                      },
                      lines: {
                        infos: [
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '',
                            indent: 0,
                            locked: false,
                            sliceStart: 0,
                            sliceEnd: 0,
                          },
                          {
                            line: '                               yytext = {',
                            indent: 31,
                            locked: false,
                            sliceStart: 31,
                            sliceEnd: 41,
                          },
                          {
                            line: '                                    conditionStack: this.conditionStack,',
                            indent: 36,
                            locked: false,
                            sliceStart: 36,
                            sliceEnd: 72,
                          },
                          {
                            line: '                                    conditionsSet: Object.keys(this.conditions),',
                            indent: 36,
                            locked: false,
                            sliceStart: 36,
                            sliceEnd: 80,
                          },
                          {
                            line: '                                };',
                            indent: 32,
                            locked: false,
                            sliceStart: 32,
                            sliceEnd: 34,
                          },
                          {
                            line: "                                return 'EOF'",
                            indent: 32,
                            locked: false,
                            sliceStart: 32,
                            sliceEnd: 44,
                          },
                        ],
                        mappings: [],
                        cachedSourceMap: null,
                        length: 29,
                        name: null,
                      },
                      tokens: [
                        {
                          type: 'Identifier',
                          value: 'yytext',
                        },
                        {
                          type: 'Punctuator',
                          value: '=',
                        },
                        {
                          type: 'Punctuator',
                          value: '{',
                        },
                        {
                          type: 'Identifier',
                          value: 'conditionStack',
                        },
                        {
                          type: 'Punctuator',
                          value: ':',
                        },
                        {
                          type: 'Keyword',
                          value: 'this',
                        },
                        {
                          type: 'Punctuator',
                          value: '.',
                        },
                        {
                          type: 'Identifier',
                          value: 'conditionStack',
                        },
                        {
                          type: 'Punctuator',
                          value: ',',
                        },
                        {
                          type: 'Identifier',
                          value: 'conditionsSet',
                        },
                        {
                          type: 'Punctuator',
                          value: ':',
                        },
                        {
                          type: 'Identifier',
                          value: 'Object',
                        },
                        {
                          type: 'Punctuator',
                          value: '.',
                        },
                        {
                          type: 'Identifier',
                          value: 'keys',
                        },
                        {
                          type: 'Punctuator',
                          value: '(',
                        },
                        {
                          type: 'Keyword',
                          value: 'this',
                        },
                        {
                          type: 'Punctuator',
                          value: '.',
                        },
                        {
                          type: 'Identifier',
                          value: 'conditions',
                        },
                        {
                          type: 'Punctuator',
                          value: ')',
                        },
                        {
                          type: 'Punctuator',
                          value: ',',
                        },
                        {
                          type: 'Punctuator',
                          value: '}',
                        },
                        {
                          type: 'Punctuator',
                          value: ';',
                        },
                        {
                          type: 'Keyword',
                          value: 'return',
                        },
                        {
                          type: 'String',
                          value: "'EOF'",
                        },
                      ],
                      indent: 31,
                    },
                  },
                  right: {
                    type: 'ObjectExpression',
                    properties: [
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'conditionStack',
                          loc: {
                            start: {
                              line: 26,
                              column: 36,
                              token: 3,
                            },
                            end: {
                              line: 26,
                              column: 50,
                              token: 4,
                            },
                            lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                            tokens: [
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                            ],
                            indent: 36,
                          },
                        },
                        computed: false,
                        value: {
                          type: 'MemberExpression',
                          computed: false,
                          object: {
                            type: 'ThisExpression',
                            loc: {
                              start: {
                                line: 26,
                                column: 52,
                                token: 5,
                              },
                              end: {
                                line: 26,
                                column: 56,
                                token: 6,
                              },
                              lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                              tokens: [
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                              ],
                              indent: 36,
                            },
                          },
                          property: {
                            type: 'Identifier',
                            name: 'conditionStack',
                            loc: {
                              start: {
                                line: 26,
                                column: 57,
                                token: 7,
                              },
                              end: {
                                line: 26,
                                column: 71,
                                token: 8,
                              },
                              lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                              tokens: [
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                              ],
                              indent: 36,
                            },
                          },
                          loc: {
                            start: {
                              line: 26,
                              column: 52,
                              token: 5,
                            },
                            end: {
                              line: 26,
                              column: 71,
                              token: 8,
                            },
                            lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                            tokens: [
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                            ],
                            indent: 36,
                          },
                        },
                        kind: 'init',
                        method: false,
                        shorthand: false,
                        loc: {
                          start: {
                            line: 26,
                            column: 36,
                            token: 3,
                          },
                          end: {
                            line: 26,
                            column: 71,
                            token: 8,
                          },
                          lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                          tokens: [
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                          ],
                          indent: 36,
                        },
                      },
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'conditionsSet',
                          loc: {
                            start: {
                              line: 27,
                              column: 36,
                              token: 9,
                            },
                            end: {
                              line: 27,
                              column: 49,
                              token: 10,
                            },
                            lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                            tokens: [
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                            ],
                            indent: 36,
                          },
                        },
                        computed: false,
                        value: {
                          type: 'CallExpression',
                          callee: {
                            type: 'MemberExpression',
                            computed: false,
                            object: {
                              type: 'Identifier',
                              name: 'Object',
                              loc: {
                                start: {
                                  line: 27,
                                  column: 51,
                                  token: 11,
                                },
                                end: {
                                  line: 27,
                                  column: 57,
                                  token: 12,
                                },
                                lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                                tokens: [
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                                ],
                                indent: 36,
                              },
                            },
                            property: {
                              type: 'Identifier',
                              name: 'keys',
                              loc: {
                                start: {
                                  line: 27,
                                  column: 58,
                                  token: 13,
                                },
                                end: {
                                  line: 27,
                                  column: 62,
                                  token: 14,
                                },
                                lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                                tokens: [
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                                ],
                                indent: 36,
                              },
                            },
                            loc: {
                              start: {
                                line: 27,
                                column: 51,
                                token: 11,
                              },
                              end: {
                                line: 27,
                                column: 62,
                                token: 14,
                              },
                              lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                              tokens: [
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                              ],
                              indent: 36,
                            },
                          },
                          arguments: [
                            {
                              type: 'MemberExpression',
                              computed: false,
                              object: {
                                type: 'ThisExpression',
                                loc: {
                                  start: {
                                    line: 27,
                                    column: 63,
                                    token: 15,
                                  },
                                  end: {
                                    line: 27,
                                    column: 67,
                                    token: 16,
                                  },
                                  lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                                  tokens: [
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                                  ],
                                  indent: 36,
                                },
                              },
                              property: {
                                type: 'Identifier',
                                name: 'conditions',
                                loc: {
                                  start: {
                                    line: 27,
                                    column: 68,
                                    token: 17,
                                  },
                                  end: {
                                    line: 27,
                                    column: 78,
                                    token: 18,
                                  },
                                  lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                                  tokens: [
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                                  ],
                                  indent: 36,
                                },
                              },
                              loc: {
                                start: {
                                  line: 27,
                                  column: 63,
                                  token: 15,
                                },
                                end: {
                                  line: 27,
                                  column: 78,
                                  token: 18,
                                },
                                lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                                tokens: [
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                                  '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                                ],
                                indent: 36,
                              },
                            },
                          ],
                          loc: {
                            start: {
                              line: 27,
                              column: 51,
                              token: 11,
                            },
                            end: {
                              line: 27,
                              column: 79,
                              token: 19,
                            },
                            lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                            tokens: [
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                            ],
                            indent: 36,
                          },
                        },
                        kind: 'init',
                        method: false,
                        shorthand: false,
                        loc: {
                          start: {
                            line: 27,
                            column: 36,
                            token: 9,
                          },
                          end: {
                            line: 27,
                            column: 79,
                            token: 19,
                          },
                          lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                          tokens: [
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                          ],
                          indent: 36,
                        },
                      },
                    ],
                    loc: {
                      start: {
                        line: 25,
                        column: 40,
                        token: 2,
                      },
                      end: {
                        line: 28,
                        column: 33,
                        token: 21,
                      },
                      lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                      tokens: [
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                        '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                      ],
                      indent: 31,
                    },
                  },
                  loc: {
                    start: {
                      line: 25,
                      column: 31,
                      token: 0,
                    },
                    end: {
                      line: 28,
                      column: 33,
                      token: 21,
                    },
                    lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                    tokens: [
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                    ],
                    indent: 31,
                  },
                },
                loc: {
                  start: {
                    line: 25,
                    column: 31,
                    token: 0,
                  },
                  end: {
                    line: 28,
                    column: 34,
                    token: 22,
                  },
                  lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                  tokens: [
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                  ],
                  indent: 31,
                },
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'Literal',
                  value: 'EOF',
                  raw: "'EOF'",
                  loc: {
                    start: {
                      line: 29,
                      column: 39,
                      token: 23,
                    },
                    end: {
                      line: 29,
                      column: 44,
                      token: 24,
                    },
                    lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                    tokens: [
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                      '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                    ],
                    indent: 32,
                  },
                },
                loc: {
                  start: {
                    line: 29,
                    column: 32,
                    token: 22,
                  },
                  end: {
                    line: 29,
                    column: 44,
                    token: 24,
                  },
                  lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
                  tokens: [
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                    '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
                  ],
                  indent: 32,
                },
              },
            ],
            sourceType: 'script',
            loc: {
              start: {
                line: 25,
                column: 31,
                token: 0,
              },
              end: {
                line: 29,
                column: 44,
                token: 24,
              },
              lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
              indent: 31,
              tokens: [
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
                '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
              ],
            },
            errors: [
              {
                index: 281,
                lineNumber: 29,
                description: 'Illegal return statement',
                message: 'Line 29: Illegal return statement',
                name: 'Error',
                stack: `Error: Line 29: Illegal return statement
    at ErrorHandler.constructError (/esprima.js:5012:22)
    at ErrorHandler.createError (/esprima.js:5028:27)
    at ErrorHandler.tolerateError (/esprima.js:5038:27)
    at JSXParser.Parser.tolerateError (/esprima.js:1951:28)
    at JSXParser.Parser.parseReturnStatement (/esprima.js:3911:19)
    at JSXParser.Parser.parseStatement (/esprima.js:4148:43)
    at JSXParser.Parser.parseStatementListItem (/esprima.js:3388:39)
    at JSXParser.Parser.parseScript (/esprima.js:4723:29)
    at Object.parse (/esprima.js:122:61)
    at Object.parse (/esprima.js:14:34)
    at Object.parse (/parser.js:23:30)
    at parseCodeChunkToAST (/lex-parser-cjs.js:1160:44)
    at checkActionBlock (/lex-parser-cjs.js:1286:18)
    at Object.parser__PerformAction (/lex-parser-cjs.js:4535:15)
    at Object.parse (/lex-parser-cjs.js:8934:24)
    at Object.yyparse [as parse] (/lex-parser-cjs.js:12777:25)
    at Context.testEachParserExample (/all-tests.js:483:27)
    at callFn (/runnable.js:364:21)
    at Test.Runnable.run (/runnable.js:352:5)
    at Runner.runTest (/runner.js:677:10)
    at /runner.js:801:12
    at next (/runner.js:594:14)
    at /runner.js:604:7
    at next (/runner.js:486:14)
    at cbHookRun (/runner.js:551:7)
    at done (/runnable.js:308:5)
    at callFn (/runnable.js:387:7)
    at Hook.Runnable.run (/runnable.js:352:5)
    at next (/runner.js:510:10)
    at Immediate._onImmediate (/runner.js:572:5)
    at processImmediate (/timers.js:456:21)`,
              },
            ],
          },
          name: null,
          loc: {
            start: {
              line: 1,
              column: 0,
              token: 0,
            },
            end: {
              line: 29,
              column: 44,
              token: 24,
            },
            lines: '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.lines]',
            indent: 0,
            tokens: [
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
              '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
            ],
          },
          type: 'File',
          comments: null,
          tokens: [
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[0]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[1]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[2]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[3]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[4]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[5]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[6]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[7]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[8]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[9]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[10]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[11]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[12]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[13]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[14]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[15]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[16]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[17]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[18]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[19]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[20]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[21]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[22]]',
            '[reference to sibling --> *.rules.[1].ast.ast.program.body.[0].expression.left.loc.tokens.[23]]',
          ],
        },
        fault: false,
      },
      fault: false,
      srcCode: `yytext = {
                                    conditionStack: this.conditionStack,
                                    conditionsSet: Object.keys(this.conditions),
                                };
                                return 'EOF'`,
      rule: '$',
    },
  ],
  macros: {},
  startConditions: {
    PICTURE_STATE: 0,
    FUNCTION_STATE: 0,
    A: 0,
    B: 0,
    C: 0,
    D: 1,
    E: 1,
    FOOBAR: 1,
    G7: 1,
    _8bit: 1,
  },
  codeSections: [],
  importDecls: [],
  unknownDecls: [],
  __extra_diag_info__: {
    pre_parse_callback_callCount: 1,
    post_parse_callback_callCount: 1,
    post_parse_diaginfo: {
      sharedState_yy: {
        startConditions: '[reference to sibling --> *.startConditions]',
        __options_flags__: 0,
        __options_category_description__: '???',
        __inside_scoped_ruleset__: false,
        __context_cfg_stack__: [],
        depth: 0,
        include_command_allowed: false,
      },
      hash: {
        errStr: null,
        exception: null,
        text: '',
        value: '',
        token: '"$accept"',
        token_id: 0,
        line: 28,
        expected: null,
        recoverable: false,
        state: 26,
        action: 2,
        new_state: 1,
        stack_pointer: 5,
      },
      reentrant_call_depth: 1,
      error_infos_stack: [
        {
          errStr: null,
          exception: null,
          text: '',
          value: '',
          token: '"$accept"',
          token_id: 0,
          line: 28,
          expected: null,
          recoverable: false,
          state: 26,
          action: 2,
          new_state: 1,
          stack_pointer: 5,
        },
      ],
      error_recovery_stack: [],
      error_infos_stack_size: 1,
      error_recovery_stack_size: 0,
    },
    reentrant_call_depth: 0,
    error_infos_stack_size: 0,
    error_recovery_stack_size: 0,
  },
  __original_input__: `// %s is 'active' as long as the lines following are indented *and* non-empty
// (i.e. cannot have an empty, whitespace-only line in there)
%s    
    PICTURE_STATE    
    FUNCTION_STATE
    A
    B
    C

%x    
    D
    E
    FOOBAR
    G7
    _8bit

%%


. {
    this.begin('FUNCTION_STATE');
    return yytext.charCodeAt(0);
}

<<EOF>>                         yytext = {
                                    conditionStack: this.conditionStack,
                                    conditionsSet: Object.keys(this.conditions),
                                };
                                return 'EOF';`,
}