/* 
 * grammar spec generated by @gerhobbelt/lex-parser for input file:
 *     :/0023-test.jisonlex
 */

[
  {
    id: 33,
    token: '"%%"',
    yytext: '%%',
    yylloc: {
      first_line: 7,
      first_column: 0,
      last_line: 7,
      last_column: 2,
      range: [
        76,
        78,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"["',
    yylloc: {
      first_line: 8,
      first_column: 0,
      last_line: 8,
      last_column: 3,
      range: [
        79,
        82,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 8,
      first_column: 3,
      last_line: 8,
      last_column: 4,
      range: [
        82,
        83,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^\\\\',
    yylloc: {
      first_line: 8,
      first_column: 4,
      last_line: 8,
      last_column: 7,
      range: [
        83,
        86,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 8,
      first_column: 7,
      last_line: 8,
      last_column: 8,
      range: [
        86,
        87,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"]"',
    yylloc: {
      first_line: 8,
      first_column: 8,
      last_line: 8,
      last_column: 11,
      range: [
        87,
        90,
      ],
    },
  },
  {
    id: 23,
    token: '"UNTERMINATED_ACTION_BLOCK"',
    yytext: {
      errStr: `Lexical error on line 8: 
                                                
Incorrectly terminated action code block. We're expecting the
'%}}}}}' end marker to go with the given start marker.
Regrettably, it does not exist in the remainder of the input.


Erroneous area:
                                                5: //
6: 
7: %%
8: "["[^\\\\]"]" %{{{{{
^..............^
9: return "%{..%}";
0: }}}}}%
`,
      recoverable: false,
      text: '%{{{{{',
      token: null,
      line: 7,
      loc: {
        first_line: 8,
        first_column: 12,
        last_line: 8,
        last_column: 0,
        range: [
          91,
          97,
        ],
      },
      yy: {
        depth: 0,
        include_command_allowed: false,
      },
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: [
          {
            errStr: `Lexical error on line 8: 
                                                
Incorrectly terminated action code block. We're expecting the
'%}}}}}' end marker to go with the given start marker.
Regrettably, it does not exist in the remainder of the input.


Erroneous area:
                                                5: //
6: 
7: %%
8: "["[^\\\\]"]" %{{{{{
^..............^
9: return "%{..%}";
0: }}}}}%
`,
            recoverable: false,
            text: '%{{{{{',
            token: null,
            line: 7,
            loc: {
              first_line: 8,
              first_column: 12,
              last_line: 8,
              last_column: 0,
              range: [
                91,
                97,
              ],
            },
            yy: {
              depth: 0,
              include_command_allowed: false,
            },
            lexer: '[lexer]',
            isLexerError: true,
            yyErrorInvoked: true,
            isLexerBacktrackingNotSupportedError: false,
            isLexerInternalError: false,
            extra_error_attributes: null,
            lexerHasAlreadyForwardedCursorBy1: false,
          },
          {
            errStr: `Lexical error on line 10: 
unsupported lexer input encountered while lexing
rules (i.e. jison lex regexes) in “rules” state.

NOTE: When you want this input to be interpreted as a LITERAL part
      of a lex rule regex, you MUST enclose it in double or
      single quotes.

      If not, then know that this input is not accepted as a valid
      regex expression here in jison-lex rules.

  Erroneous area:
 7: %%
 8: "["[^\\\\]"]" %{{{{{
 9: return "%{..%}";
10: }}}}}%
^^.......^
11: 
12: 
`,
            recoverable: false,
            text: '%',
            token: null,
            line: 9,
            loc: {
              first_line: 10,
              first_column: 5,
              last_line: 10,
              last_column: 6,
              range: [
                120,
                121,
              ],
            },
            yy: '[reference to sibling --> *.[6].yytext.lexer.__error_infos.[0].yy]',
            lexer: '[lexer]',
            isLexerError: true,
            yyErrorInvoked: true,
            isLexerBacktrackingNotSupportedError: false,
            isLexerInternalError: false,
            extra_error_attributes: null,
            lexerHasAlreadyForwardedCursorBy1: false,
          },
        ],
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `//
// title: test multiline action with alternative markers 5
//
// ...
//

%%
"["[^\\\\]"]" %{{{{{
return "%{..%}";
}}}}}%

`,
        matches: false,
        yytext: '',
        offset: 123,
        base_position: 0,
        yyleng: 0,
        yylineno: 11,
        yylloc: {
          first_line: 12,
          first_column: 0,
          last_line: 12,
          last_column: 0,
          range: [
            123,
            123,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
        __entire_action_block_matchers__: {},
      },
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 26,
        yytext: {
          fault: `
Incorrectly terminated action code block. We're expecting the
'%}}}}}' end marker to go with the given start marker.
Regrettably, it does not exist in the remainder of the input.
`,
          srcCode: '',
          shiftCount: 0,
          action_start_marker: '%{{{{{',
          action_end_marker: '%}}}}}',
        },
        yyleng: 6,
        matches: [
          '%{{{{{',
        ],
        activeCondition: 'rules',
        conditionStackDepth: 2,
      },
    },
    yylloc: {
      first_line: 8,
      first_column: 12,
      last_line: 8,
      last_column: 0,
      range: [
        91,
        97,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: 'return',
    yylloc: {
      first_line: 9,
      first_column: 0,
      last_line: 9,
      last_column: 6,
      range: [
        98,
        104,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: ' ',
    yylloc: {
      first_line: 9,
      first_column: 6,
      last_line: 9,
      last_column: 7,
      range: [
        104,
        105,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '"%{..%}"',
    yylloc: {
      first_line: 9,
      first_column: 7,
      last_line: 9,
      last_column: 15,
      range: [
        105,
        113,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 9,
      first_column: 15,
      last_line: 9,
      last_column: 16,
      range: [
        113,
        114,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 9,
      first_column: 16,
      last_line: 9,
      last_column: 16,
      range: [
        114,
        114,
      ],
    },
  },
  {
    id: 5,
    token: '"}"',
    yytext: '}',
    yylloc: {
      first_line: 10,
      first_column: 0,
      last_line: 10,
      last_column: 1,
      range: [
        115,
        116,
      ],
    },
  },
  {
    id: 5,
    token: '"}"',
    yytext: '}',
    yylloc: {
      first_line: 10,
      first_column: 1,
      last_line: 10,
      last_column: 2,
      range: [
        116,
        117,
      ],
    },
  },
  {
    id: 5,
    token: '"}"',
    yytext: '}',
    yylloc: {
      first_line: 10,
      first_column: 2,
      last_line: 10,
      last_column: 3,
      range: [
        117,
        118,
      ],
    },
  },
  {
    id: 5,
    token: '"}"',
    yytext: '}',
    yylloc: {
      first_line: 10,
      first_column: 3,
      last_line: 10,
      last_column: 4,
      range: [
        118,
        119,
      ],
    },
  },
  {
    id: 5,
    token: '"}"',
    yytext: '}',
    yylloc: {
      first_line: 10,
      first_column: 4,
      last_line: 10,
      last_column: 5,
      range: [
        119,
        120,
      ],
    },
  },
  {
    id: 2,
    token: '"error"',
    yytext: {
      errStr: `Lexical error on line 10: 
unsupported lexer input encountered while lexing
rules (i.e. jison lex regexes) in “rules” state.

NOTE: When you want this input to be interpreted as a LITERAL part
      of a lex rule regex, you MUST enclose it in double or
      single quotes.

      If not, then know that this input is not accepted as a valid
      regex expression here in jison-lex rules.

  Erroneous area:
 7: %%
 8: "["[^\\\\]"]" %{{{{{
 9: return "%{..%}";
10: }}}}}%
^^.......^
11: 
12: 
`,
      recoverable: false,
      text: '%',
      token: null,
      line: 9,
      loc: {
        first_line: 10,
        first_column: 5,
        last_line: 10,
        last_column: 6,
        range: [
          120,
          121,
        ],
      },
      yy: {
        depth: 0,
        include_command_allowed: false,
      },
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: '[reference to sibling array --> *.[6].yytext.lexer.__error_infos, length = 2]',
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `//
// title: test multiline action with alternative markers 5
//
// ...
//

%%
"["[^\\\\]"]" %{{{{{
return "%{..%}";
}}}}}%

`,
        matches: false,
        yytext: '',
        offset: 123,
        base_position: 0,
        yyleng: 0,
        yylineno: 11,
        yylloc: {
          first_line: 12,
          first_column: 0,
          last_line: 12,
          last_column: 0,
          range: [
            123,
            123,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
        __entire_action_block_matchers__: {},
      },
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 2,
        yytext: '%',
        yyleng: 1,
        matches: [
          '%',
        ],
        activeCondition: 'rules',
        conditionStackDepth: 2,
      },
    },
    yylloc: {
      first_line: 10,
      first_column: 5,
      last_line: 10,
      last_column: 6,
      range: [
        120,
        121,
      ],
    },
  },
  {
    id: 33,
    token: '"%%"',
    yytext: '',
    yylloc: {
      first_line: 12,
      first_column: 0,
      last_line: 12,
      last_column: 0,
      range: [
        123,
        123,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 12,
      first_column: 0,
      last_line: 12,
      last_column: 0,
      range: [
        123,
        123,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 12,
      first_column: 0,
      last_line: 12,
      last_column: 0,
      range: [
        123,
        123,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 12,
      first_column: 0,
      last_line: 12,
      last_column: 0,
      range: [
        123,
        123,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 12,
      first_column: 0,
      last_line: 12,
      last_column: 0,
      range: [
        123,
        123,
      ],
    },
  },
  {
    id: -2,
    token: null,
    summary: {
      totalTokenCount: 23,
      EOFTokenCount: 4,
      ERRORTokenCount: 1,
      ParseErrorCallCount: 2,
      DetectedParseErrorCallCount: 0,
      fatalExceptionCount: 0,
    },
  },
]