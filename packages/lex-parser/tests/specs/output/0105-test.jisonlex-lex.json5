/* 
 * grammar spec generated by @gerhobbelt/lex-parser for input file:
 *     :/0105-test.jisonlex
 */

[
  {
    id: 33,
    token: '"%%"',
    yytext: '%%',
    yylloc: {
      first_line: 8,
      first_column: 0,
      last_line: 8,
      last_column: 2,
      range: [
        100,
        102,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: 'a',
    yylloc: {
      first_line: 10,
      first_column: 0,
      last_line: 10,
      last_column: 1,
      range: [
        104,
        105,
      ],
    },
  },
  {
    id: 37,
    token: '"ENTIRE_ACTION"',
    yytext: {
      srcCode: `
    {{
        yytext += '+1';
        return 'A';
        // note the terminating 'action code block marker' just below:
        // it's a matching set of braces, yet looks a tad... off.
        // This MUST be considered as legal input.
    `,
      shiftCount: 246,
      action_start_marker: '{{',
      action_end_marker: '}}',
    },
    yylloc: {
      first_line: 10,
      first_column: 2,
      last_line: 17,
      last_column: 6,
      range: [
        106,
        354,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: ' ',
    yylloc: {
      first_line: 17,
      first_column: 6,
      last_line: 17,
      last_column: 7,
      range: [
        354,
        355,
      ],
    },
  },
  {
    id: 41,
    token: '"BRACKET_SURPLUS"',
    yytext: {
      errStr: `Lexical error on line 17: 
too many closing curly braces in lexer rule action block.

Note: the action code chunk may be too complex for jison to parse
easily; we suggest you wrap the action code chunk in '%{...%}'
to help jison grok more or less complex action code chunks.

  Erroneous area:
14:         // note the terminating 'action code block marker' just below:
15:         // it's a matching set of braces, yet looks a tad... off.
16:         // This MUST be considered as legal input.
17:     }} }}
^^.........^
18: 
19: b {{{
`,
      recoverable: false,
      text: '}',
      token: null,
      line: 16,
      loc: {
        first_line: 17,
        first_column: 7,
        last_line: 17,
        last_column: 8,
        range: [
          355,
          356,
        ],
      },
      yy: {
        depth: 0,
        include_command_allowed: false,
      },
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: [
          {
            errStr: `Lexical error on line 17: 
too many closing curly braces in lexer rule action block.

Note: the action code chunk may be too complex for jison to parse
easily; we suggest you wrap the action code chunk in '%{...%}'
to help jison grok more or less complex action code chunks.

  Erroneous area:
14:         // note the terminating 'action code block marker' just below:
15:         // it's a matching set of braces, yet looks a tad... off.
16:         // This MUST be considered as legal input.
17:     }} }}
^^.........^
18: 
19: b {{{
`,
            recoverable: false,
            text: '}',
            token: null,
            line: 16,
            loc: {
              first_line: 17,
              first_column: 7,
              last_line: 17,
              last_column: 8,
              range: [
                355,
                356,
              ],
            },
            yy: {
              depth: 0,
              include_command_allowed: false,
            },
            lexer: '[lexer]',
            isLexerError: true,
            yyErrorInvoked: true,
            isLexerBacktrackingNotSupportedError: false,
            isLexerInternalError: false,
            extra_error_attributes: null,
            lexerHasAlreadyForwardedCursorBy1: false,
          },
          {
            errStr: `Lexical error on line 17: 
too many closing curly braces in lexer rule action block.

Note: the action code chunk may be too complex for jison to parse
easily; we suggest you wrap the action code chunk in '%{...%}'
to help jison grok more or less complex action code chunks.

  Erroneous area:
14:         // note the terminating 'action code block marker' just below:
15:         // it's a matching set of braces, yet looks a tad... off.
16:         // This MUST be considered as legal input.
17:     }} }}
^^..........^
18: 
19: b {{{
`,
            recoverable: false,
            text: '}',
            token: null,
            line: 16,
            loc: {
              first_line: 17,
              first_column: 8,
              last_line: 17,
              last_column: 9,
              range: [
                356,
                357,
              ],
            },
            yy: '[reference to sibling --> *.[4].yytext.lexer.__error_infos.[0].yy]',
            lexer: '[lexer]',
            isLexerError: true,
            yyErrorInvoked: true,
            isLexerBacktrackingNotSupportedError: false,
            isLexerInternalError: false,
            extra_error_attributes: null,
            lexerHasAlreadyForwardedCursorBy1: false,
          },
        ],
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'rules',
        ],
        match: '',
        matched: `//
// title: "edge cases for {{...}}, etc. action markers usage"
// test_input: a b c
//
// ...
//

%%

a {{
    {{
        yytext += '+1';
        return 'A';
        // note the terminating 'action code block marker' just below:
        // it's a matching set of braces, yet looks a tad... off.
        // This MUST be considered as legal input.
    }} }}

b {{{
    {
        yytext += '+1';
        return 'B';
        // note the terminating 'action code block marker' just below:
        // it's a matching set of braces, yet looks a tad... off.
        // This MUST be considered as legal input.
    } }}}

c {{{{
    {{
        yytext += '+1';
        return 'C';
        // note the terminating 'action code block marker' just below:
        // it's a matching set of braces, yet looks a tad... off.
        // This MUST be considered as legal input.
    }} }}}}

<<EOF>>                         return 'EOF';`,
        matches: false,
        yytext: '',
        offset: 918,
        base_position: 0,
        yyleng: 0,
        yylineno: 36,
        yylloc: {
          first_line: 37,
          first_column: 45,
          last_line: 37,
          last_column: 45,
          range: [
            918,
            918,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
        __entire_action_block_matchers__: {},
      },
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 562,
        yytext: '}',
        yyleng: 1,
        matches: [
          '}',
        ],
        activeCondition: 'action',
        conditionStackDepth: 3,
      },
    },
    yylloc: {
      first_line: 17,
      first_column: 7,
      last_line: 17,
      last_column: 8,
      range: [
        355,
        356,
      ],
    },
  },
  {
    id: 41,
    token: '"BRACKET_SURPLUS"',
    yytext: {
      errStr: `Lexical error on line 17: 
too many closing curly braces in lexer rule action block.

Note: the action code chunk may be too complex for jison to parse
easily; we suggest you wrap the action code chunk in '%{...%}'
to help jison grok more or less complex action code chunks.

  Erroneous area:
14:         // note the terminating 'action code block marker' just below:
15:         // it's a matching set of braces, yet looks a tad... off.
16:         // This MUST be considered as legal input.
17:     }} }}
^^..........^
18: 
19: b {{{
`,
      recoverable: false,
      text: '}',
      token: null,
      line: 16,
      loc: {
        first_line: 17,
        first_column: 8,
        last_line: 17,
        last_column: 9,
        range: [
          356,
          357,
        ],
      },
      yy: {
        depth: 0,
        include_command_allowed: false,
      },
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: '[reference to sibling array --> *.[4].yytext.lexer.__error_infos, length = 2]',
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'rules',
        ],
        match: '',
        matched: `//
// title: "edge cases for {{...}}, etc. action markers usage"
// test_input: a b c
//
// ...
//

%%

a {{
    {{
        yytext += '+1';
        return 'A';
        // note the terminating 'action code block marker' just below:
        // it's a matching set of braces, yet looks a tad... off.
        // This MUST be considered as legal input.
    }} }}

b {{{
    {
        yytext += '+1';
        return 'B';
        // note the terminating 'action code block marker' just below:
        // it's a matching set of braces, yet looks a tad... off.
        // This MUST be considered as legal input.
    } }}}

c {{{{
    {{
        yytext += '+1';
        return 'C';
        // note the terminating 'action code block marker' just below:
        // it's a matching set of braces, yet looks a tad... off.
        // This MUST be considered as legal input.
    }} }}}}

<<EOF>>                         return 'EOF';`,
        matches: false,
        yytext: '',
        offset: 918,
        base_position: 0,
        yyleng: 0,
        yylineno: 36,
        yylloc: {
          first_line: 37,
          first_column: 45,
          last_line: 37,
          last_column: 45,
          range: [
            918,
            918,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
        __entire_action_block_matchers__: {},
      },
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 561,
        yytext: '}',
        yyleng: 1,
        matches: [
          '}',
        ],
        activeCondition: 'action',
        conditionStackDepth: 3,
      },
    },
    yylloc: {
      first_line: 17,
      first_column: 8,
      last_line: 17,
      last_column: 9,
      range: [
        356,
        357,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 17,
      first_column: 9,
      last_line: 17,
      last_column: 9,
      range: [
        357,
        357,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: 'b',
    yylloc: {
      first_line: 19,
      first_column: 0,
      last_line: 19,
      last_column: 1,
      range: [
        359,
        360,
      ],
    },
  },
  {
    id: 37,
    token: '"ENTIRE_ACTION"',
    yytext: {
      srcCode: `
    {
        yytext += '+1';
        return 'B';
        // note the terminating 'action code block marker' just below:
        // it's a matching set of braces, yet looks a tad... off.
        // This MUST be considered as legal input.
    } `,
      shiftCount: 248,
      action_start_marker: '{{{',
      action_end_marker: '}}}',
    },
    yylloc: {
      first_line: 19,
      first_column: 2,
      last_line: 26,
      last_column: 9,
      range: [
        361,
        612,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: 'c',
    yylloc: {
      first_line: 28,
      first_column: 0,
      last_line: 28,
      last_column: 1,
      range: [
        614,
        615,
      ],
    },
  },
  {
    id: 37,
    token: '"ENTIRE_ACTION"',
    yytext: {
      srcCode: `
    {{
        yytext += '+1';
        return 'C';
        // note the terminating 'action code block marker' just below:
        // it's a matching set of braces, yet looks a tad... off.
        // This MUST be considered as legal input.
    }} `,
      shiftCount: 251,
      action_start_marker: '{{{{',
      action_end_marker: '}}}}',
    },
    yylloc: {
      first_line: 28,
      first_column: 2,
      last_line: 35,
      last_column: 11,
      range: [
        616,
        871,
      ],
    },
  },
  {
    id: 17,
    token: '"$"',
    yytext: '<<EOF>>',
    yylloc: {
      first_line: 37,
      first_column: 0,
      last_line: 37,
      last_column: 7,
      range: [
        873,
        880,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                         ',
    yylloc: {
      first_line: 37,
      first_column: 7,
      last_line: 37,
      last_column: 32,
      range: [
        880,
        905,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 37,
      first_column: 32,
      last_line: 37,
      last_column: 39,
      range: [
        905,
        912,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'EOF'",
    yylloc: {
      first_line: 37,
      first_column: 39,
      last_line: 37,
      last_column: 44,
      range: [
        912,
        917,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 37,
      first_column: 44,
      last_line: 37,
      last_column: 45,
      range: [
        917,
        918,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 37,
      first_column: 45,
      last_line: 37,
      last_column: 45,
      range: [
        918,
        918,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 37,
      first_column: 45,
      last_line: 37,
      last_column: 45,
      range: [
        918,
        918,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 37,
      first_column: 45,
      last_line: 37,
      last_column: 45,
      range: [
        918,
        918,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 37,
      first_column: 45,
      last_line: 37,
      last_column: 45,
      range: [
        918,
        918,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 37,
      first_column: 45,
      last_line: 37,
      last_column: 45,
      range: [
        918,
        918,
      ],
    },
  },
  {
    id: -2,
    token: null,
    summary: {
      totalTokenCount: 21,
      EOFTokenCount: 4,
      ERRORTokenCount: 0,
      ParseErrorCallCount: 2,
      DetectedParseErrorCallCount: 0,
      fatalExceptionCount: 0,
    },
  },
]