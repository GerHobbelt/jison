/* 
 * grammar spec generated by @gerhobbelt/lex-parser for input file:
 *     :/0089-test.jisonlex
 */

[
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 8,
      first_column: 0,
      last_line: 8,
      last_column: 7,
      range: [
        127,
        134,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: '8bit',
    yylloc: {
      first_line: 8,
      first_column: 8,
      last_line: 8,
      last_column: 12,
      range: [
        135,
        139,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 8,
      first_column: 12,
      last_line: 8,
      last_column: 12,
      range: [
        139,
        139,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 9,
      first_column: 0,
      last_line: 9,
      last_column: 7,
      range: [
        140,
        147,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'case-insensitive',
    yylloc: {
      first_line: 9,
      first_column: 8,
      last_line: 9,
      last_column: 24,
      range: [
        148,
        164,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 9,
      first_column: 24,
      last_line: 9,
      last_column: 24,
      range: [
        164,
        164,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 10,
      first_column: 0,
      last_line: 10,
      last_column: 7,
      range: [
        165,
        172,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'never-interactive',
    yylloc: {
      first_line: 10,
      first_column: 8,
      last_line: 10,
      last_column: 25,
      range: [
        173,
        190,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 10,
      first_column: 25,
      last_line: 10,
      last_column: 25,
      range: [
        190,
        190,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 11,
      first_column: 0,
      last_line: 11,
      last_column: 7,
      range: [
        191,
        198,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'prefix',
    yylloc: {
      first_line: 11,
      first_column: 8,
      last_line: 11,
      last_column: 14,
      range: [
        199,
        205,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 11,
      first_column: 14,
      last_line: 11,
      last_column: 15,
      range: [
        205,
        206,
      ],
    },
  },
  {
    id: 55,
    token: '"OPTION_STRING"',
    yytext: '"pp"',
    yylloc: {
      first_line: 11,
      first_column: 15,
      last_line: 11,
      last_column: 19,
      range: [
        206,
        210,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 11,
      first_column: 19,
      last_line: 11,
      last_column: 19,
      range: [
        210,
        210,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 12,
      first_column: 0,
      last_line: 12,
      last_column: 7,
      range: [
        211,
        218,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'buzz',
    yylloc: {
      first_line: 12,
      first_column: 8,
      last_line: 12,
      last_column: 12,
      range: [
        219,
        223,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 12,
      first_column: 13,
      last_line: 12,
      last_column: 14,
      range: [
        224,
        225,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'qqq',
    yylloc: {
      first_line: 12,
      first_column: 15,
      last_line: 12,
      last_column: 18,
      range: [
        226,
        229,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 12,
      first_column: 18,
      last_line: 12,
      last_column: 18,
      range: [
        229,
        229,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 14,
      first_column: 0,
      last_line: 14,
      last_column: 7,
      range: [
        231,
        238,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'stack',
    yylloc: {
      first_line: 14,
      first_column: 8,
      last_line: 14,
      last_column: 13,
      range: [
        239,
        244,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 14,
      first_column: 13,
      last_line: 14,
      last_column: 13,
      range: [
        244,
        244,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 16,
      first_column: 0,
      last_line: 16,
      last_column: 7,
      range: [
        246,
        253,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyy_top_state',
    yylloc: {
      first_line: 16,
      first_column: 8,
      last_line: 16,
      last_column: 22,
      range: [
        254,
        268,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 16,
      first_column: 22,
      last_line: 16,
      last_column: 22,
      range: [
        268,
        268,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 17,
      first_column: 0,
      last_line: 17,
      last_column: 7,
      range: [
        269,
        276,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyy_scan_buffer',
    yylloc: {
      first_line: 17,
      first_column: 8,
      last_line: 17,
      last_column: 24,
      range: [
        277,
        293,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 17,
      first_column: 24,
      last_line: 17,
      last_column: 24,
      range: [
        293,
        293,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 18,
      first_column: 0,
      last_line: 18,
      last_column: 7,
      range: [
        294,
        301,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyy_scan_bytes',
    yylloc: {
      first_line: 18,
      first_column: 8,
      last_line: 18,
      last_column: 23,
      range: [
        302,
        317,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 18,
      first_column: 23,
      last_line: 18,
      last_column: 23,
      range: [
        317,
        317,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 19,
      first_column: 0,
      last_line: 19,
      last_column: 7,
      range: [
        318,
        325,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyy_scan_string',
    yylloc: {
      first_line: 19,
      first_column: 8,
      last_line: 19,
      last_column: 24,
      range: [
        326,
        342,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 19,
      first_column: 24,
      last_line: 19,
      last_column: 24,
      range: [
        342,
        342,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 21,
      first_column: 0,
      last_line: 21,
      last_column: 7,
      range: [
        344,
        351,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyget_extra',
    yylloc: {
      first_line: 21,
      first_column: 8,
      last_line: 21,
      last_column: 21,
      range: [
        352,
        365,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 21,
      first_column: 21,
      last_line: 21,
      last_column: 21,
      range: [
        365,
        365,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 22,
      first_column: 0,
      last_line: 22,
      last_column: 7,
      range: [
        366,
        373,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyset_extra',
    yylloc: {
      first_line: 22,
      first_column: 8,
      last_line: 22,
      last_column: 21,
      range: [
        374,
        387,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 22,
      first_column: 21,
      last_line: 22,
      last_column: 21,
      range: [
        387,
        387,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 23,
      first_column: 0,
      last_line: 23,
      last_column: 7,
      range: [
        388,
        395,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyget_leng',
    yylloc: {
      first_line: 23,
      first_column: 8,
      last_line: 23,
      last_column: 20,
      range: [
        396,
        408,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 23,
      first_column: 20,
      last_line: 23,
      last_column: 20,
      range: [
        408,
        408,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 24,
      first_column: 0,
      last_line: 24,
      last_column: 7,
      range: [
        409,
        416,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyget_text',
    yylloc: {
      first_line: 24,
      first_column: 8,
      last_line: 24,
      last_column: 20,
      range: [
        417,
        429,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 24,
      first_column: 20,
      last_line: 24,
      last_column: 20,
      range: [
        429,
        429,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 25,
      first_column: 0,
      last_line: 25,
      last_column: 7,
      range: [
        430,
        437,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyget_lineno',
    yylloc: {
      first_line: 25,
      first_column: 8,
      last_line: 25,
      last_column: 22,
      range: [
        438,
        452,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 25,
      first_column: 22,
      last_line: 25,
      last_column: 22,
      range: [
        452,
        452,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 26,
      first_column: 0,
      last_line: 26,
      last_column: 7,
      range: [
        453,
        460,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyset_lineno',
    yylloc: {
      first_line: 26,
      first_column: 8,
      last_line: 26,
      last_column: 22,
      range: [
        461,
        475,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 26,
      first_column: 22,
      last_line: 26,
      last_column: 22,
      range: [
        475,
        475,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 27,
      first_column: 0,
      last_line: 27,
      last_column: 7,
      range: [
        476,
        483,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyget_in',
    yylloc: {
      first_line: 27,
      first_column: 8,
      last_line: 27,
      last_column: 18,
      range: [
        484,
        494,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 27,
      first_column: 18,
      last_line: 27,
      last_column: 18,
      range: [
        494,
        494,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 28,
      first_column: 0,
      last_line: 28,
      last_column: 7,
      range: [
        495,
        502,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyset_in',
    yylloc: {
      first_line: 28,
      first_column: 8,
      last_line: 28,
      last_column: 18,
      range: [
        503,
        513,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 28,
      first_column: 18,
      last_line: 28,
      last_column: 18,
      range: [
        513,
        513,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 29,
      first_column: 0,
      last_line: 29,
      last_column: 7,
      range: [
        514,
        521,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyget_out',
    yylloc: {
      first_line: 29,
      first_column: 8,
      last_line: 29,
      last_column: 19,
      range: [
        522,
        533,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 29,
      first_column: 19,
      last_line: 29,
      last_column: 19,
      range: [
        533,
        533,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 30,
      first_column: 0,
      last_line: 30,
      last_column: 7,
      range: [
        534,
        541,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyset_out',
    yylloc: {
      first_line: 30,
      first_column: 8,
      last_line: 30,
      last_column: 19,
      range: [
        542,
        553,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 30,
      first_column: 19,
      last_line: 30,
      last_column: 19,
      range: [
        553,
        553,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 31,
      first_column: 0,
      last_line: 31,
      last_column: 7,
      range: [
        554,
        561,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyget_lval',
    yylloc: {
      first_line: 31,
      first_column: 8,
      last_line: 31,
      last_column: 20,
      range: [
        562,
        574,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 31,
      first_column: 20,
      last_line: 31,
      last_column: 20,
      range: [
        574,
        574,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 32,
      first_column: 0,
      last_line: 32,
      last_column: 7,
      range: [
        575,
        582,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyset_lval',
    yylloc: {
      first_line: 32,
      first_column: 8,
      last_line: 32,
      last_column: 20,
      range: [
        583,
        595,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 32,
      first_column: 20,
      last_line: 32,
      last_column: 20,
      range: [
        595,
        595,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 33,
      first_column: 0,
      last_line: 33,
      last_column: 7,
      range: [
        596,
        603,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyget_lloc',
    yylloc: {
      first_line: 33,
      first_column: 8,
      last_line: 33,
      last_column: 20,
      range: [
        604,
        616,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 33,
      first_column: 20,
      last_line: 33,
      last_column: 20,
      range: [
        616,
        616,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 34,
      first_column: 0,
      last_line: 34,
      last_column: 7,
      range: [
        617,
        624,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyset_lloc',
    yylloc: {
      first_line: 34,
      first_column: 8,
      last_line: 34,
      last_column: 20,
      range: [
        625,
        637,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 34,
      first_column: 20,
      last_line: 34,
      last_column: 20,
      range: [
        637,
        637,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 35,
      first_column: 0,
      last_line: 35,
      last_column: 7,
      range: [
        638,
        645,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyget_debug',
    yylloc: {
      first_line: 35,
      first_column: 8,
      last_line: 35,
      last_column: 21,
      range: [
        646,
        659,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 35,
      first_column: 21,
      last_line: 35,
      last_column: 21,
      range: [
        659,
        659,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 36,
      first_column: 0,
      last_line: 36,
      last_column: 7,
      range: [
        660,
        667,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'noyyset_debug',
    yylloc: {
      first_line: 36,
      first_column: 8,
      last_line: 36,
      last_column: 21,
      range: [
        668,
        681,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 36,
      first_column: 21,
      last_line: 36,
      last_column: 21,
      range: [
        681,
        681,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 39,
      first_column: 0,
      last_line: 39,
      last_column: 7,
      range: [
        709,
        716,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: 6445,
    yylloc: {
      first_line: 39,
      first_column: 8,
      last_line: 39,
      last_column: 12,
      range: [
        717,
        721,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 39,
      first_column: 12,
      last_line: 39,
      last_column: 12,
      range: [
        721,
        721,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 40,
      first_column: 0,
      last_line: 40,
      last_column: 7,
      range: [
        722,
        729,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: '42-42',
    yylloc: {
      first_line: 40,
      first_column: 8,
      last_line: 40,
      last_column: 13,
      range: [
        730,
        735,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 40,
      first_column: 13,
      last_line: 40,
      last_column: 13,
      range: [
        735,
        735,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 41,
      first_column: 0,
      last_line: 41,
      last_column: 7,
      range: [
        736,
        743,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: 8,
    yylloc: {
      first_line: 41,
      first_column: 8,
      last_line: 41,
      last_column: 9,
      range: [
        744,
        745,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 41,
      first_column: 9,
      last_line: 41,
      last_column: 9,
      range: [
        745,
        745,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 42,
      first_column: 0,
      last_line: 42,
      last_column: 7,
      range: [
        746,
        753,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: -5,
    yylloc: {
      first_line: 42,
      first_column: 8,
      last_line: 42,
      last_column: 10,
      range: [
        754,
        756,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 42,
      first_column: 10,
      last_line: 42,
      last_column: 10,
      range: [
        756,
        756,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 43,
      first_column: 0,
      last_line: 43,
      last_column: 7,
      range: [
        757,
        764,
      ],
    },
  },
  {
    id: 55,
    token: '"OPTION_STRING"',
    yytext: "''",
    yylloc: {
      first_line: 43,
      first_column: 8,
      last_line: 43,
      last_column: 10,
      range: [
        765,
        767,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 43,
      first_column: 10,
      last_line: 43,
      last_column: 10,
      range: [
        767,
        767,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 44,
      first_column: 0,
      last_line: 44,
      last_column: 7,
      range: [
        768,
        775,
      ],
    },
  },
  {
    id: 55,
    token: '"OPTION_STRING"',
    yytext: '" "',
    yylloc: {
      first_line: 44,
      first_column: 8,
      last_line: 44,
      last_column: 11,
      range: [
        776,
        779,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 44,
      first_column: 11,
      last_line: 44,
      last_column: 11,
      range: [
        779,
        779,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 45,
      first_column: 0,
      last_line: 45,
      last_column: 7,
      range: [
        780,
        787,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: '-',
    yylloc: {
      first_line: 45,
      first_column: 8,
      last_line: 45,
      last_column: 9,
      range: [
        788,
        789,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 45,
      first_column: 9,
      last_line: 45,
      last_column: 9,
      range: [
        789,
        789,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 46,
      first_column: 0,
      last_line: 46,
      last_column: 7,
      range: [
        790,
        797,
      ],
    },
  },
  {
    id: 55,
    token: '"OPTION_STRING"',
    yytext: "'-'",
    yylloc: {
      first_line: 46,
      first_column: 8,
      last_line: 46,
      last_column: 11,
      range: [
        798,
        801,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 46,
      first_column: 11,
      last_line: 46,
      last_column: 11,
      range: [
        801,
        801,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 47,
      first_column: 0,
      last_line: 47,
      last_column: 7,
      range: [
        802,
        809,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{x}',
    yylloc: {
      first_line: 47,
      first_column: 8,
      last_line: 47,
      last_column: 11,
      range: [
        810,
        813,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 47,
      first_column: 11,
      last_line: 47,
      last_column: 11,
      range: [
        813,
        813,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 48,
      first_column: 0,
      last_line: 48,
      last_column: 7,
      range: [
        814,
        821,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: '__beelzebub',
    yylloc: {
      first_line: 48,
      first_column: 8,
      last_line: 48,
      last_column: 19,
      range: [
        822,
        833,
      ],
    },
  },
  {
    id: 2,
    token: '"error"',
    yytext: {
      errStr: `Lexical error on line 48: 
unsupported lexer input: “!”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
45: %option -
46: %option '-'
47: %option {x}
48: %option __beelzebub!
^^.....................^
49: %option @you
50: %option me@home
`,
      recoverable: false,
      text: '!',
      token: null,
      line: 47,
      loc: {
        first_line: 48,
        first_column: 19,
        last_line: 48,
        last_column: 20,
        range: [
          833,
          834,
        ],
      },
      yy: {},
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: [
          {
            errStr: `Lexical error on line 48: 
unsupported lexer input: “!”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
45: %option -
46: %option '-'
47: %option {x}
48: %option __beelzebub!
^^.....................^
49: %option @you
50: %option me@home
`,
            recoverable: false,
            text: '!',
            token: null,
            line: 47,
            loc: {
              first_line: 48,
              first_column: 19,
              last_line: 48,
              last_column: 20,
              range: [
                833,
                834,
              ],
            },
            yy: {
              depth: 0,
              include_command_allowed: false,
            },
            lexer: '[lexer]',
            isLexerError: true,
            yyErrorInvoked: true,
            isLexerBacktrackingNotSupportedError: false,
            isLexerInternalError: false,
            extra_error_attributes: null,
            lexerHasAlreadyForwardedCursorBy1: false,
          },
          {
            errStr: `Lexical error on line 52: 
unsupported lexer input: “:”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
49: %option @you
50: %option me@home
51: %option #no-more-bad-S
52: %option foo:bar
^^.............^
53: %option "a=b"
54: %option ~a
`,
            recoverable: false,
            text: ':',
            token: null,
            line: 51,
            loc: {
              first_line: 52,
              first_column: 11,
              last_line: 52,
              last_column: 12,
              range: [
                898,
                899,
              ],
            },
            yy: '[reference to sibling --> *.[111].yytext.lexer.__error_infos.[0].yy]',
            lexer: '[lexer]',
            isLexerError: true,
            yyErrorInvoked: true,
            isLexerBacktrackingNotSupportedError: false,
            isLexerInternalError: false,
            extra_error_attributes: null,
            lexerHasAlreadyForwardedCursorBy1: false,
          },
          {
            errStr: `Lexical error on line 55: 
unsupported lexer input: “$”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
52: %option foo:bar
53: %option "a=b"
54: %option ~a
55: %option $a$
^^..........^
56: %option a#b
57: %option al.ka.selzer
`,
            recoverable: false,
            text: '$',
            token: null,
            line: 54,
            loc: {
              first_line: 55,
              first_column: 8,
              last_line: 55,
              last_column: 9,
              range: [
                936,
                937,
              ],
            },
            yy: '[reference to sibling --> *.[111].yytext.lexer.__error_infos.[0].yy]',
            lexer: '[lexer]',
            isLexerError: true,
            yyErrorInvoked: true,
            isLexerBacktrackingNotSupportedError: false,
            isLexerInternalError: false,
            extra_error_attributes: null,
            lexerHasAlreadyForwardedCursorBy1: false,
          },
          {
            errStr: `Lexical error on line 55: 
unsupported lexer input: “$”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
52: %option foo:bar
53: %option "a=b"
54: %option ~a
55: %option $a$
^^............^
56: %option a#b
57: %option al.ka.selzer
`,
            recoverable: false,
            text: '$',
            token: null,
            line: 54,
            loc: {
              first_line: 55,
              first_column: 10,
              last_line: 55,
              last_column: 11,
              range: [
                938,
                939,
              ],
            },
            yy: '[reference to sibling --> *.[111].yytext.lexer.__error_infos.[0].yy]',
            lexer: '[lexer]',
            isLexerError: true,
            yyErrorInvoked: true,
            isLexerBacktrackingNotSupportedError: false,
            isLexerInternalError: false,
            extra_error_attributes: null,
            lexerHasAlreadyForwardedCursorBy1: false,
          },
          {
            errStr: `Lexical error on line 57: 
unsupported lexer input: “.”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
54: %option ~a
55: %option $a$
56: %option a#b
57: %option al.ka.selzer
^^............^
58: 
59: // We also recognize the alias %options (plural):
`,
            recoverable: false,
            text: '.',
            token: null,
            line: 56,
            loc: {
              first_line: 57,
              first_column: 10,
              last_line: 57,
              last_column: 11,
              range: [
                962,
                963,
              ],
            },
            yy: '[reference to sibling --> *.[111].yytext.lexer.__error_infos.[0].yy]',
            lexer: '[lexer]',
            isLexerError: true,
            yyErrorInvoked: true,
            isLexerBacktrackingNotSupportedError: false,
            isLexerInternalError: false,
            extra_error_attributes: null,
            lexerHasAlreadyForwardedCursorBy1: false,
          },
          {
            errStr: `Lexical error on line 57: 
unsupported lexer input: “.”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
54: %option ~a
55: %option $a$
56: %option a#b
57: %option al.ka.selzer
^^...............^
58: 
59: // We also recognize the alias %options (plural):
`,
            recoverable: false,
            text: '.',
            token: null,
            line: 56,
            loc: {
              first_line: 57,
              first_column: 13,
              last_line: 57,
              last_column: 14,
              range: [
                965,
                966,
              ],
            },
            yy: '[reference to sibling --> *.[111].yytext.lexer.__error_infos.[0].yy]',
            lexer: '[lexer]',
            isLexerError: true,
            yyErrorInvoked: true,
            isLexerBacktrackingNotSupportedError: false,
            isLexerInternalError: false,
            extra_error_attributes: null,
            lexerHasAlreadyForwardedCursorBy1: false,
          },
        ],
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `//
// title: "options may have identifiers which start with a number, e.g. '8bit'"
// test_input: "2020-11-12 % X"
// ...
//


%option 8bit
%option case-insensitive
%option never-interactive
%option prefix="pp"
%option buzz = qqq

%option stack

%option noyy_top_state
%option noyy_scan_buffer
%option noyy_scan_bytes
%option noyy_scan_string

%option noyyget_extra
%option noyyset_extra
%option noyyget_leng
%option noyyget_text
%option noyyget_lineno
%option noyyset_lineno
%option noyyget_in
%option noyyset_in
%option noyyget_out
%option noyyset_out
%option noyyget_lval
%option noyyset_lval
%option noyyget_lloc
%option noyyset_lloc
%option noyyget_debug
%option noyyset_debug

// bad option identifers:
%option 6445
%option 42-42
%option 8
%option -5
%option ''
%option " "
%option -
%option '-'
%option {x}
%option __beelzebub!
%option @you
%option me@home
%option #no-more-bad-S
%option foo:bar
%option "a=b"
%option ~a
%option $a$
%option a#b
%option al.ka.selzer

// We also recognize the alias %options (plural):
%options foo
%options bar, but, top 						// 3 options
%options bar bi tu ra te 					// that would be 5 options
%options fu=bar, neg=-45, pos=71, hex=0x1A6F, max=666
%options Fu=bar Neg=-45 Pos=71 Hex=0x1A6F Max=666
%options NotANum=42A, neither-a-number=0x1AF_Z

%option xbar, xbut, xtop 						// 3 options
%option xbar xbi xtu xra xte 					// that would be 5 options
%option xfu=bar, xneg=-45, xpos=71, xhex=0x1A6F, xmax=666
%option xFu=bar xNeg=-45 xPos=71 xHex=0x1A6F xMax=666

%%

\\d\\d\\d\\d"-"\\d\\d"-"\\d\\d  	return 'date';
":"                         return ':';
[\\s\\r\\n]					return 'WS';
<<EOF>>                     return 'EOF';
.                           return 'INVALID';

`,
        matches: false,
        yytext: '',
        offset: 1705,
        base_position: 0,
        yyleng: 0,
        yylineno: 79,
        yylloc: {
          first_line: 80,
          first_column: 0,
          last_line: 80,
          last_column: 0,
          range: [
            1705,
            1705,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
        __entire_action_block_matchers__: {},
      },
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 871,
        yytext: '!',
        yyleng: 1,
        matches: [
          '!',
        ],
        activeCondition: 'options',
        conditionStackDepth: 2,
      },
    },
    yylloc: {
      first_line: 48,
      first_column: 19,
      last_line: 48,
      last_column: 20,
      range: [
        833,
        834,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 48,
      first_column: 20,
      last_line: 48,
      last_column: 20,
      range: [
        834,
        834,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 49,
      first_column: 0,
      last_line: 49,
      last_column: 7,
      range: [
        835,
        842,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: '@you',
    yylloc: {
      first_line: 49,
      first_column: 8,
      last_line: 49,
      last_column: 12,
      range: [
        843,
        847,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 49,
      first_column: 12,
      last_line: 49,
      last_column: 12,
      range: [
        847,
        847,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 50,
      first_column: 0,
      last_line: 50,
      last_column: 7,
      range: [
        848,
        855,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'me@home',
    yylloc: {
      first_line: 50,
      first_column: 8,
      last_line: 50,
      last_column: 15,
      range: [
        856,
        863,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 50,
      first_column: 15,
      last_line: 50,
      last_column: 15,
      range: [
        863,
        863,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 51,
      first_column: 0,
      last_line: 51,
      last_column: 7,
      range: [
        864,
        871,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: '#no-more-bad-S',
    yylloc: {
      first_line: 51,
      first_column: 8,
      last_line: 51,
      last_column: 22,
      range: [
        872,
        886,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 51,
      first_column: 22,
      last_line: 51,
      last_column: 22,
      range: [
        886,
        886,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 52,
      first_column: 0,
      last_line: 52,
      last_column: 7,
      range: [
        887,
        894,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'foo',
    yylloc: {
      first_line: 52,
      first_column: 8,
      last_line: 52,
      last_column: 11,
      range: [
        895,
        898,
      ],
    },
  },
  {
    id: 2,
    token: '"error"',
    yytext: {
      errStr: `Lexical error on line 52: 
unsupported lexer input: “:”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
49: %option @you
50: %option me@home
51: %option #no-more-bad-S
52: %option foo:bar
^^.............^
53: %option "a=b"
54: %option ~a
`,
      recoverable: false,
      text: ':',
      token: null,
      line: 51,
      loc: {
        first_line: 52,
        first_column: 11,
        last_line: 52,
        last_column: 12,
        range: [
          898,
          899,
        ],
      },
      yy: {},
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: '[reference to sibling array --> *.[111].yytext.lexer.__error_infos, length = 6]',
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `//
// title: "options may have identifiers which start with a number, e.g. '8bit'"
// test_input: "2020-11-12 % X"
// ...
//


%option 8bit
%option case-insensitive
%option never-interactive
%option prefix="pp"
%option buzz = qqq

%option stack

%option noyy_top_state
%option noyy_scan_buffer
%option noyy_scan_bytes
%option noyy_scan_string

%option noyyget_extra
%option noyyset_extra
%option noyyget_leng
%option noyyget_text
%option noyyget_lineno
%option noyyset_lineno
%option noyyget_in
%option noyyset_in
%option noyyget_out
%option noyyset_out
%option noyyget_lval
%option noyyset_lval
%option noyyget_lloc
%option noyyset_lloc
%option noyyget_debug
%option noyyset_debug

// bad option identifers:
%option 6445
%option 42-42
%option 8
%option -5
%option ''
%option " "
%option -
%option '-'
%option {x}
%option __beelzebub!
%option @you
%option me@home
%option #no-more-bad-S
%option foo:bar
%option "a=b"
%option ~a
%option $a$
%option a#b
%option al.ka.selzer

// We also recognize the alias %options (plural):
%options foo
%options bar, but, top 						// 3 options
%options bar bi tu ra te 					// that would be 5 options
%options fu=bar, neg=-45, pos=71, hex=0x1A6F, max=666
%options Fu=bar Neg=-45 Pos=71 Hex=0x1A6F Max=666
%options NotANum=42A, neither-a-number=0x1AF_Z

%option xbar, xbut, xtop 						// 3 options
%option xbar xbi xtu xra xte 					// that would be 5 options
%option xfu=bar, xneg=-45, xpos=71, xhex=0x1A6F, xmax=666
%option xFu=bar xNeg=-45 xPos=71 xHex=0x1A6F xMax=666

%%

\\d\\d\\d\\d"-"\\d\\d"-"\\d\\d  	return 'date';
":"                         return ':';
[\\s\\r\\n]					return 'WS';
<<EOF>>                     return 'EOF';
.                           return 'INVALID';

`,
        matches: false,
        yytext: '',
        offset: 1705,
        base_position: 0,
        yyleng: 0,
        yylineno: 79,
        yylloc: {
          first_line: 80,
          first_column: 0,
          last_line: 80,
          last_column: 0,
          range: [
            1705,
            1705,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
        __entire_action_block_matchers__: {},
      },
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 806,
        yytext: ':',
        yyleng: 1,
        matches: [
          ':',
        ],
        activeCondition: 'options',
        conditionStackDepth: 2,
      },
    },
    yylloc: {
      first_line: 52,
      first_column: 11,
      last_line: 52,
      last_column: 12,
      range: [
        898,
        899,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'bar',
    yylloc: {
      first_line: 52,
      first_column: 12,
      last_line: 52,
      last_column: 15,
      range: [
        899,
        902,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 52,
      first_column: 15,
      last_line: 52,
      last_column: 15,
      range: [
        902,
        902,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 53,
      first_column: 0,
      last_line: 53,
      last_column: 7,
      range: [
        903,
        910,
      ],
    },
  },
  {
    id: 55,
    token: '"OPTION_STRING"',
    yytext: '"a=b"',
    yylloc: {
      first_line: 53,
      first_column: 8,
      last_line: 53,
      last_column: 13,
      range: [
        911,
        916,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 53,
      first_column: 13,
      last_line: 53,
      last_column: 13,
      range: [
        916,
        916,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 54,
      first_column: 0,
      last_line: 54,
      last_column: 7,
      range: [
        917,
        924,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: '~a',
    yylloc: {
      first_line: 54,
      first_column: 8,
      last_line: 54,
      last_column: 10,
      range: [
        925,
        927,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 54,
      first_column: 10,
      last_line: 54,
      last_column: 10,
      range: [
        927,
        927,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 55,
      first_column: 0,
      last_line: 55,
      last_column: 7,
      range: [
        928,
        935,
      ],
    },
  },
  {
    id: 2,
    token: '"error"',
    yytext: {
      errStr: `Lexical error on line 55: 
unsupported lexer input: “$”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
52: %option foo:bar
53: %option "a=b"
54: %option ~a
55: %option $a$
^^..........^
56: %option a#b
57: %option al.ka.selzer
`,
      recoverable: false,
      text: '$',
      token: null,
      line: 54,
      loc: {
        first_line: 55,
        first_column: 8,
        last_line: 55,
        last_column: 9,
        range: [
          936,
          937,
        ],
      },
      yy: {},
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: '[reference to sibling array --> *.[111].yytext.lexer.__error_infos, length = 6]',
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `//
// title: "options may have identifiers which start with a number, e.g. '8bit'"
// test_input: "2020-11-12 % X"
// ...
//


%option 8bit
%option case-insensitive
%option never-interactive
%option prefix="pp"
%option buzz = qqq

%option stack

%option noyy_top_state
%option noyy_scan_buffer
%option noyy_scan_bytes
%option noyy_scan_string

%option noyyget_extra
%option noyyset_extra
%option noyyget_leng
%option noyyget_text
%option noyyget_lineno
%option noyyset_lineno
%option noyyget_in
%option noyyset_in
%option noyyget_out
%option noyyset_out
%option noyyget_lval
%option noyyset_lval
%option noyyget_lloc
%option noyyset_lloc
%option noyyget_debug
%option noyyset_debug

// bad option identifers:
%option 6445
%option 42-42
%option 8
%option -5
%option ''
%option " "
%option -
%option '-'
%option {x}
%option __beelzebub!
%option @you
%option me@home
%option #no-more-bad-S
%option foo:bar
%option "a=b"
%option ~a
%option $a$
%option a#b
%option al.ka.selzer

// We also recognize the alias %options (plural):
%options foo
%options bar, but, top 						// 3 options
%options bar bi tu ra te 					// that would be 5 options
%options fu=bar, neg=-45, pos=71, hex=0x1A6F, max=666
%options Fu=bar Neg=-45 Pos=71 Hex=0x1A6F Max=666
%options NotANum=42A, neither-a-number=0x1AF_Z

%option xbar, xbut, xtop 						// 3 options
%option xbar xbi xtu xra xte 					// that would be 5 options
%option xfu=bar, xneg=-45, xpos=71, xhex=0x1A6F, xmax=666
%option xFu=bar xNeg=-45 xPos=71 xHex=0x1A6F xMax=666

%%

\\d\\d\\d\\d"-"\\d\\d"-"\\d\\d  	return 'date';
":"                         return ':';
[\\s\\r\\n]					return 'WS';
<<EOF>>                     return 'EOF';
.                           return 'INVALID';

`,
        matches: false,
        yytext: '',
        offset: 1705,
        base_position: 0,
        yyleng: 0,
        yylineno: 79,
        yylloc: {
          first_line: 80,
          first_column: 0,
          last_line: 80,
          last_column: 0,
          range: [
            1705,
            1705,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
        __entire_action_block_matchers__: {},
      },
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 768,
        yytext: '$',
        yyleng: 1,
        matches: [
          '$',
        ],
        activeCondition: 'options',
        conditionStackDepth: 2,
      },
    },
    yylloc: {
      first_line: 55,
      first_column: 8,
      last_line: 55,
      last_column: 9,
      range: [
        936,
        937,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'a',
    yylloc: {
      first_line: 55,
      first_column: 9,
      last_line: 55,
      last_column: 10,
      range: [
        937,
        938,
      ],
    },
  },
  {
    id: 2,
    token: '"error"',
    yytext: {
      errStr: `Lexical error on line 55: 
unsupported lexer input: “$”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
52: %option foo:bar
53: %option "a=b"
54: %option ~a
55: %option $a$
^^............^
56: %option a#b
57: %option al.ka.selzer
`,
      recoverable: false,
      text: '$',
      token: null,
      line: 54,
      loc: {
        first_line: 55,
        first_column: 10,
        last_line: 55,
        last_column: 11,
        range: [
          938,
          939,
        ],
      },
      yy: {},
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: '[reference to sibling array --> *.[111].yytext.lexer.__error_infos, length = 6]',
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `//
// title: "options may have identifiers which start with a number, e.g. '8bit'"
// test_input: "2020-11-12 % X"
// ...
//


%option 8bit
%option case-insensitive
%option never-interactive
%option prefix="pp"
%option buzz = qqq

%option stack

%option noyy_top_state
%option noyy_scan_buffer
%option noyy_scan_bytes
%option noyy_scan_string

%option noyyget_extra
%option noyyset_extra
%option noyyget_leng
%option noyyget_text
%option noyyget_lineno
%option noyyset_lineno
%option noyyget_in
%option noyyset_in
%option noyyget_out
%option noyyset_out
%option noyyget_lval
%option noyyset_lval
%option noyyget_lloc
%option noyyset_lloc
%option noyyget_debug
%option noyyset_debug

// bad option identifers:
%option 6445
%option 42-42
%option 8
%option -5
%option ''
%option " "
%option -
%option '-'
%option {x}
%option __beelzebub!
%option @you
%option me@home
%option #no-more-bad-S
%option foo:bar
%option "a=b"
%option ~a
%option $a$
%option a#b
%option al.ka.selzer

// We also recognize the alias %options (plural):
%options foo
%options bar, but, top 						// 3 options
%options bar bi tu ra te 					// that would be 5 options
%options fu=bar, neg=-45, pos=71, hex=0x1A6F, max=666
%options Fu=bar Neg=-45 Pos=71 Hex=0x1A6F Max=666
%options NotANum=42A, neither-a-number=0x1AF_Z

%option xbar, xbut, xtop 						// 3 options
%option xbar xbi xtu xra xte 					// that would be 5 options
%option xfu=bar, xneg=-45, xpos=71, xhex=0x1A6F, xmax=666
%option xFu=bar xNeg=-45 xPos=71 xHex=0x1A6F xMax=666

%%

\\d\\d\\d\\d"-"\\d\\d"-"\\d\\d  	return 'date';
":"                         return ':';
[\\s\\r\\n]					return 'WS';
<<EOF>>                     return 'EOF';
.                           return 'INVALID';

`,
        matches: false,
        yytext: '',
        offset: 1705,
        base_position: 0,
        yyleng: 0,
        yylineno: 79,
        yylloc: {
          first_line: 80,
          first_column: 0,
          last_line: 80,
          last_column: 0,
          range: [
            1705,
            1705,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
        __entire_action_block_matchers__: {},
      },
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 766,
        yytext: '$',
        yyleng: 1,
        matches: [
          '$',
        ],
        activeCondition: 'options',
        conditionStackDepth: 2,
      },
    },
    yylloc: {
      first_line: 55,
      first_column: 10,
      last_line: 55,
      last_column: 11,
      range: [
        938,
        939,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 55,
      first_column: 11,
      last_line: 55,
      last_column: 11,
      range: [
        939,
        939,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 56,
      first_column: 0,
      last_line: 56,
      last_column: 7,
      range: [
        940,
        947,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'a#b',
    yylloc: {
      first_line: 56,
      first_column: 8,
      last_line: 56,
      last_column: 11,
      range: [
        948,
        951,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 56,
      first_column: 11,
      last_line: 56,
      last_column: 11,
      range: [
        951,
        951,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 57,
      first_column: 0,
      last_line: 57,
      last_column: 7,
      range: [
        952,
        959,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'al',
    yylloc: {
      first_line: 57,
      first_column: 8,
      last_line: 57,
      last_column: 10,
      range: [
        960,
        962,
      ],
    },
  },
  {
    id: 2,
    token: '"error"',
    yytext: {
      errStr: `Lexical error on line 57: 
unsupported lexer input: “.”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
54: %option ~a
55: %option $a$
56: %option a#b
57: %option al.ka.selzer
^^............^
58: 
59: // We also recognize the alias %options (plural):
`,
      recoverable: false,
      text: '.',
      token: null,
      line: 56,
      loc: {
        first_line: 57,
        first_column: 10,
        last_line: 57,
        last_column: 11,
        range: [
          962,
          963,
        ],
      },
      yy: {},
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: '[reference to sibling array --> *.[111].yytext.lexer.__error_infos, length = 6]',
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `//
// title: "options may have identifiers which start with a number, e.g. '8bit'"
// test_input: "2020-11-12 % X"
// ...
//


%option 8bit
%option case-insensitive
%option never-interactive
%option prefix="pp"
%option buzz = qqq

%option stack

%option noyy_top_state
%option noyy_scan_buffer
%option noyy_scan_bytes
%option noyy_scan_string

%option noyyget_extra
%option noyyset_extra
%option noyyget_leng
%option noyyget_text
%option noyyget_lineno
%option noyyset_lineno
%option noyyget_in
%option noyyset_in
%option noyyget_out
%option noyyset_out
%option noyyget_lval
%option noyyset_lval
%option noyyget_lloc
%option noyyset_lloc
%option noyyget_debug
%option noyyset_debug

// bad option identifers:
%option 6445
%option 42-42
%option 8
%option -5
%option ''
%option " "
%option -
%option '-'
%option {x}
%option __beelzebub!
%option @you
%option me@home
%option #no-more-bad-S
%option foo:bar
%option "a=b"
%option ~a
%option $a$
%option a#b
%option al.ka.selzer

// We also recognize the alias %options (plural):
%options foo
%options bar, but, top 						// 3 options
%options bar bi tu ra te 					// that would be 5 options
%options fu=bar, neg=-45, pos=71, hex=0x1A6F, max=666
%options Fu=bar Neg=-45 Pos=71 Hex=0x1A6F Max=666
%options NotANum=42A, neither-a-number=0x1AF_Z

%option xbar, xbut, xtop 						// 3 options
%option xbar xbi xtu xra xte 					// that would be 5 options
%option xfu=bar, xneg=-45, xpos=71, xhex=0x1A6F, xmax=666
%option xFu=bar xNeg=-45 xPos=71 xHex=0x1A6F xMax=666

%%

\\d\\d\\d\\d"-"\\d\\d"-"\\d\\d  	return 'date';
":"                         return ':';
[\\s\\r\\n]					return 'WS';
<<EOF>>                     return 'EOF';
.                           return 'INVALID';

`,
        matches: false,
        yytext: '',
        offset: 1705,
        base_position: 0,
        yyleng: 0,
        yylineno: 79,
        yylloc: {
          first_line: 80,
          first_column: 0,
          last_line: 80,
          last_column: 0,
          range: [
            1705,
            1705,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
        __entire_action_block_matchers__: {},
      },
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 742,
        yytext: '.',
        yyleng: 1,
        matches: [
          '.',
        ],
        activeCondition: 'options',
        conditionStackDepth: 2,
      },
    },
    yylloc: {
      first_line: 57,
      first_column: 10,
      last_line: 57,
      last_column: 11,
      range: [
        962,
        963,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'ka',
    yylloc: {
      first_line: 57,
      first_column: 11,
      last_line: 57,
      last_column: 13,
      range: [
        963,
        965,
      ],
    },
  },
  {
    id: 2,
    token: '"error"',
    yytext: {
      errStr: `Lexical error on line 57: 
unsupported lexer input: “.”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
54: %option ~a
55: %option $a$
56: %option a#b
57: %option al.ka.selzer
^^...............^
58: 
59: // We also recognize the alias %options (plural):
`,
      recoverable: false,
      text: '.',
      token: null,
      line: 56,
      loc: {
        first_line: 57,
        first_column: 13,
        last_line: 57,
        last_column: 14,
        range: [
          965,
          966,
        ],
      },
      yy: {},
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: '[reference to sibling array --> *.[111].yytext.lexer.__error_infos, length = 6]',
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `//
// title: "options may have identifiers which start with a number, e.g. '8bit'"
// test_input: "2020-11-12 % X"
// ...
//


%option 8bit
%option case-insensitive
%option never-interactive
%option prefix="pp"
%option buzz = qqq

%option stack

%option noyy_top_state
%option noyy_scan_buffer
%option noyy_scan_bytes
%option noyy_scan_string

%option noyyget_extra
%option noyyset_extra
%option noyyget_leng
%option noyyget_text
%option noyyget_lineno
%option noyyset_lineno
%option noyyget_in
%option noyyset_in
%option noyyget_out
%option noyyset_out
%option noyyget_lval
%option noyyset_lval
%option noyyget_lloc
%option noyyset_lloc
%option noyyget_debug
%option noyyset_debug

// bad option identifers:
%option 6445
%option 42-42
%option 8
%option -5
%option ''
%option " "
%option -
%option '-'
%option {x}
%option __beelzebub!
%option @you
%option me@home
%option #no-more-bad-S
%option foo:bar
%option "a=b"
%option ~a
%option $a$
%option a#b
%option al.ka.selzer

// We also recognize the alias %options (plural):
%options foo
%options bar, but, top 						// 3 options
%options bar bi tu ra te 					// that would be 5 options
%options fu=bar, neg=-45, pos=71, hex=0x1A6F, max=666
%options Fu=bar Neg=-45 Pos=71 Hex=0x1A6F Max=666
%options NotANum=42A, neither-a-number=0x1AF_Z

%option xbar, xbut, xtop 						// 3 options
%option xbar xbi xtu xra xte 					// that would be 5 options
%option xfu=bar, xneg=-45, xpos=71, xhex=0x1A6F, xmax=666
%option xFu=bar xNeg=-45 xPos=71 xHex=0x1A6F xMax=666

%%

\\d\\d\\d\\d"-"\\d\\d"-"\\d\\d  	return 'date';
":"                         return ':';
[\\s\\r\\n]					return 'WS';
<<EOF>>                     return 'EOF';
.                           return 'INVALID';

`,
        matches: false,
        yytext: '',
        offset: 1705,
        base_position: 0,
        yyleng: 0,
        yylineno: 79,
        yylloc: {
          first_line: 80,
          first_column: 0,
          last_line: 80,
          last_column: 0,
          range: [
            1705,
            1705,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
        __entire_action_block_matchers__: {},
      },
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 739,
        yytext: '.',
        yyleng: 1,
        matches: [
          '.',
        ],
        activeCondition: 'options',
        conditionStackDepth: 2,
      },
    },
    yylloc: {
      first_line: 57,
      first_column: 13,
      last_line: 57,
      last_column: 14,
      range: [
        965,
        966,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'selzer',
    yylloc: {
      first_line: 57,
      first_column: 14,
      last_line: 57,
      last_column: 20,
      range: [
        966,
        972,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 57,
      first_column: 20,
      last_line: 57,
      last_column: 20,
      range: [
        972,
        972,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%options',
    yylloc: {
      first_line: 60,
      first_column: 0,
      last_line: 60,
      last_column: 8,
      range: [
        1024,
        1032,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'foo',
    yylloc: {
      first_line: 60,
      first_column: 9,
      last_line: 60,
      last_column: 12,
      range: [
        1033,
        1036,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 60,
      first_column: 12,
      last_line: 60,
      last_column: 12,
      range: [
        1036,
        1036,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%options',
    yylloc: {
      first_line: 61,
      first_column: 0,
      last_line: 61,
      last_column: 8,
      range: [
        1037,
        1045,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'bar',
    yylloc: {
      first_line: 61,
      first_column: 9,
      last_line: 61,
      last_column: 12,
      range: [
        1046,
        1049,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 61,
      first_column: 12,
      last_line: 61,
      last_column: 13,
      range: [
        1049,
        1050,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'but',
    yylloc: {
      first_line: 61,
      first_column: 14,
      last_line: 61,
      last_column: 17,
      range: [
        1051,
        1054,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 61,
      first_column: 17,
      last_line: 61,
      last_column: 18,
      range: [
        1054,
        1055,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'top',
    yylloc: {
      first_line: 61,
      first_column: 19,
      last_line: 61,
      last_column: 22,
      range: [
        1056,
        1059,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 61,
      first_column: 41,
      last_line: 61,
      last_column: 41,
      range: [
        1078,
        1078,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%options',
    yylloc: {
      first_line: 62,
      first_column: 0,
      last_line: 62,
      last_column: 8,
      range: [
        1079,
        1087,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'bar',
    yylloc: {
      first_line: 62,
      first_column: 9,
      last_line: 62,
      last_column: 12,
      range: [
        1088,
        1091,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'bi',
    yylloc: {
      first_line: 62,
      first_column: 13,
      last_line: 62,
      last_column: 15,
      range: [
        1092,
        1094,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'tu',
    yylloc: {
      first_line: 62,
      first_column: 16,
      last_line: 62,
      last_column: 18,
      range: [
        1095,
        1097,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'ra',
    yylloc: {
      first_line: 62,
      first_column: 19,
      last_line: 62,
      last_column: 21,
      range: [
        1098,
        1100,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'te',
    yylloc: {
      first_line: 62,
      first_column: 22,
      last_line: 62,
      last_column: 24,
      range: [
        1101,
        1103,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 62,
      first_column: 56,
      last_line: 62,
      last_column: 56,
      range: [
        1135,
        1135,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%options',
    yylloc: {
      first_line: 63,
      first_column: 0,
      last_line: 63,
      last_column: 8,
      range: [
        1136,
        1144,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'fu',
    yylloc: {
      first_line: 63,
      first_column: 9,
      last_line: 63,
      last_column: 11,
      range: [
        1145,
        1147,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 63,
      first_column: 11,
      last_line: 63,
      last_column: 12,
      range: [
        1147,
        1148,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'bar',
    yylloc: {
      first_line: 63,
      first_column: 12,
      last_line: 63,
      last_column: 15,
      range: [
        1148,
        1151,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 63,
      first_column: 15,
      last_line: 63,
      last_column: 16,
      range: [
        1151,
        1152,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'neg',
    yylloc: {
      first_line: 63,
      first_column: 17,
      last_line: 63,
      last_column: 20,
      range: [
        1153,
        1156,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 63,
      first_column: 20,
      last_line: 63,
      last_column: 21,
      range: [
        1156,
        1157,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: -45,
    yylloc: {
      first_line: 63,
      first_column: 21,
      last_line: 63,
      last_column: 24,
      range: [
        1157,
        1160,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 63,
      first_column: 24,
      last_line: 63,
      last_column: 25,
      range: [
        1160,
        1161,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'pos',
    yylloc: {
      first_line: 63,
      first_column: 26,
      last_line: 63,
      last_column: 29,
      range: [
        1162,
        1165,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 63,
      first_column: 29,
      last_line: 63,
      last_column: 30,
      range: [
        1165,
        1166,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: 71,
    yylloc: {
      first_line: 63,
      first_column: 30,
      last_line: 63,
      last_column: 32,
      range: [
        1166,
        1168,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 63,
      first_column: 32,
      last_line: 63,
      last_column: 33,
      range: [
        1168,
        1169,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'hex',
    yylloc: {
      first_line: 63,
      first_column: 34,
      last_line: 63,
      last_column: 37,
      range: [
        1170,
        1173,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 63,
      first_column: 37,
      last_line: 63,
      last_column: 38,
      range: [
        1173,
        1174,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: 6767,
    yylloc: {
      first_line: 63,
      first_column: 38,
      last_line: 63,
      last_column: 44,
      range: [
        1174,
        1180,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 63,
      first_column: 44,
      last_line: 63,
      last_column: 45,
      range: [
        1180,
        1181,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'max',
    yylloc: {
      first_line: 63,
      first_column: 46,
      last_line: 63,
      last_column: 49,
      range: [
        1182,
        1185,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 63,
      first_column: 49,
      last_line: 63,
      last_column: 50,
      range: [
        1185,
        1186,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: 666,
    yylloc: {
      first_line: 63,
      first_column: 50,
      last_line: 63,
      last_column: 53,
      range: [
        1186,
        1189,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 63,
      first_column: 53,
      last_line: 63,
      last_column: 53,
      range: [
        1189,
        1189,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%options',
    yylloc: {
      first_line: 64,
      first_column: 0,
      last_line: 64,
      last_column: 8,
      range: [
        1190,
        1198,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'Fu',
    yylloc: {
      first_line: 64,
      first_column: 9,
      last_line: 64,
      last_column: 11,
      range: [
        1199,
        1201,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 64,
      first_column: 11,
      last_line: 64,
      last_column: 12,
      range: [
        1201,
        1202,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'bar',
    yylloc: {
      first_line: 64,
      first_column: 12,
      last_line: 64,
      last_column: 15,
      range: [
        1202,
        1205,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'Neg',
    yylloc: {
      first_line: 64,
      first_column: 16,
      last_line: 64,
      last_column: 19,
      range: [
        1206,
        1209,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 64,
      first_column: 19,
      last_line: 64,
      last_column: 20,
      range: [
        1209,
        1210,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: -45,
    yylloc: {
      first_line: 64,
      first_column: 20,
      last_line: 64,
      last_column: 23,
      range: [
        1210,
        1213,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'Pos',
    yylloc: {
      first_line: 64,
      first_column: 24,
      last_line: 64,
      last_column: 27,
      range: [
        1214,
        1217,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 64,
      first_column: 27,
      last_line: 64,
      last_column: 28,
      range: [
        1217,
        1218,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: 71,
    yylloc: {
      first_line: 64,
      first_column: 28,
      last_line: 64,
      last_column: 30,
      range: [
        1218,
        1220,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'Hex',
    yylloc: {
      first_line: 64,
      first_column: 31,
      last_line: 64,
      last_column: 34,
      range: [
        1221,
        1224,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 64,
      first_column: 34,
      last_line: 64,
      last_column: 35,
      range: [
        1224,
        1225,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: 6767,
    yylloc: {
      first_line: 64,
      first_column: 35,
      last_line: 64,
      last_column: 41,
      range: [
        1225,
        1231,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'Max',
    yylloc: {
      first_line: 64,
      first_column: 42,
      last_line: 64,
      last_column: 45,
      range: [
        1232,
        1235,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 64,
      first_column: 45,
      last_line: 64,
      last_column: 46,
      range: [
        1235,
        1236,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: 666,
    yylloc: {
      first_line: 64,
      first_column: 46,
      last_line: 64,
      last_column: 49,
      range: [
        1236,
        1239,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 64,
      first_column: 49,
      last_line: 64,
      last_column: 49,
      range: [
        1239,
        1239,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%options',
    yylloc: {
      first_line: 65,
      first_column: 0,
      last_line: 65,
      last_column: 8,
      range: [
        1240,
        1248,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'NotANum',
    yylloc: {
      first_line: 65,
      first_column: 9,
      last_line: 65,
      last_column: 16,
      range: [
        1249,
        1256,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 65,
      first_column: 16,
      last_line: 65,
      last_column: 17,
      range: [
        1256,
        1257,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: '42A',
    yylloc: {
      first_line: 65,
      first_column: 17,
      last_line: 65,
      last_column: 20,
      range: [
        1257,
        1260,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 65,
      first_column: 20,
      last_line: 65,
      last_column: 21,
      range: [
        1260,
        1261,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'neither-a-number',
    yylloc: {
      first_line: 65,
      first_column: 22,
      last_line: 65,
      last_column: 38,
      range: [
        1262,
        1278,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 65,
      first_column: 38,
      last_line: 65,
      last_column: 39,
      range: [
        1278,
        1279,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: '0x1AF_Z',
    yylloc: {
      first_line: 65,
      first_column: 39,
      last_line: 65,
      last_column: 46,
      range: [
        1279,
        1286,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 65,
      first_column: 46,
      last_line: 65,
      last_column: 46,
      range: [
        1286,
        1286,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 67,
      first_column: 0,
      last_line: 67,
      last_column: 7,
      range: [
        1288,
        1295,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xbar',
    yylloc: {
      first_line: 67,
      first_column: 8,
      last_line: 67,
      last_column: 12,
      range: [
        1296,
        1300,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 67,
      first_column: 12,
      last_line: 67,
      last_column: 13,
      range: [
        1300,
        1301,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xbut',
    yylloc: {
      first_line: 67,
      first_column: 14,
      last_line: 67,
      last_column: 18,
      range: [
        1302,
        1306,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 67,
      first_column: 18,
      last_line: 67,
      last_column: 19,
      range: [
        1306,
        1307,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xtop',
    yylloc: {
      first_line: 67,
      first_column: 20,
      last_line: 67,
      last_column: 24,
      range: [
        1308,
        1312,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 67,
      first_column: 43,
      last_line: 67,
      last_column: 43,
      range: [
        1331,
        1331,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 68,
      first_column: 0,
      last_line: 68,
      last_column: 7,
      range: [
        1332,
        1339,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xbar',
    yylloc: {
      first_line: 68,
      first_column: 8,
      last_line: 68,
      last_column: 12,
      range: [
        1340,
        1344,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xbi',
    yylloc: {
      first_line: 68,
      first_column: 13,
      last_line: 68,
      last_column: 16,
      range: [
        1345,
        1348,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xtu',
    yylloc: {
      first_line: 68,
      first_column: 17,
      last_line: 68,
      last_column: 20,
      range: [
        1349,
        1352,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xra',
    yylloc: {
      first_line: 68,
      first_column: 21,
      last_line: 68,
      last_column: 24,
      range: [
        1353,
        1356,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xte',
    yylloc: {
      first_line: 68,
      first_column: 25,
      last_line: 68,
      last_column: 28,
      range: [
        1357,
        1360,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 68,
      first_column: 60,
      last_line: 68,
      last_column: 60,
      range: [
        1392,
        1392,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 69,
      first_column: 0,
      last_line: 69,
      last_column: 7,
      range: [
        1393,
        1400,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xfu',
    yylloc: {
      first_line: 69,
      first_column: 8,
      last_line: 69,
      last_column: 11,
      range: [
        1401,
        1404,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 69,
      first_column: 11,
      last_line: 69,
      last_column: 12,
      range: [
        1404,
        1405,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'bar',
    yylloc: {
      first_line: 69,
      first_column: 12,
      last_line: 69,
      last_column: 15,
      range: [
        1405,
        1408,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 69,
      first_column: 15,
      last_line: 69,
      last_column: 16,
      range: [
        1408,
        1409,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xneg',
    yylloc: {
      first_line: 69,
      first_column: 17,
      last_line: 69,
      last_column: 21,
      range: [
        1410,
        1414,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 69,
      first_column: 21,
      last_line: 69,
      last_column: 22,
      range: [
        1414,
        1415,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: -45,
    yylloc: {
      first_line: 69,
      first_column: 22,
      last_line: 69,
      last_column: 25,
      range: [
        1415,
        1418,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 69,
      first_column: 25,
      last_line: 69,
      last_column: 26,
      range: [
        1418,
        1419,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xpos',
    yylloc: {
      first_line: 69,
      first_column: 27,
      last_line: 69,
      last_column: 31,
      range: [
        1420,
        1424,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 69,
      first_column: 31,
      last_line: 69,
      last_column: 32,
      range: [
        1424,
        1425,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: 71,
    yylloc: {
      first_line: 69,
      first_column: 32,
      last_line: 69,
      last_column: 34,
      range: [
        1425,
        1427,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 69,
      first_column: 34,
      last_line: 69,
      last_column: 35,
      range: [
        1427,
        1428,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xhex',
    yylloc: {
      first_line: 69,
      first_column: 36,
      last_line: 69,
      last_column: 40,
      range: [
        1429,
        1433,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 69,
      first_column: 40,
      last_line: 69,
      last_column: 41,
      range: [
        1433,
        1434,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: 6767,
    yylloc: {
      first_line: 69,
      first_column: 41,
      last_line: 69,
      last_column: 47,
      range: [
        1434,
        1440,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 69,
      first_column: 47,
      last_line: 69,
      last_column: 48,
      range: [
        1440,
        1441,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xmax',
    yylloc: {
      first_line: 69,
      first_column: 49,
      last_line: 69,
      last_column: 53,
      range: [
        1442,
        1446,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 69,
      first_column: 53,
      last_line: 69,
      last_column: 54,
      range: [
        1446,
        1447,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: 666,
    yylloc: {
      first_line: 69,
      first_column: 54,
      last_line: 69,
      last_column: 57,
      range: [
        1447,
        1450,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 69,
      first_column: 57,
      last_line: 69,
      last_column: 57,
      range: [
        1450,
        1450,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%option',
    yylloc: {
      first_line: 70,
      first_column: 0,
      last_line: 70,
      last_column: 7,
      range: [
        1451,
        1458,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xFu',
    yylloc: {
      first_line: 70,
      first_column: 8,
      last_line: 70,
      last_column: 11,
      range: [
        1459,
        1462,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 70,
      first_column: 11,
      last_line: 70,
      last_column: 12,
      range: [
        1462,
        1463,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'bar',
    yylloc: {
      first_line: 70,
      first_column: 12,
      last_line: 70,
      last_column: 15,
      range: [
        1463,
        1466,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xNeg',
    yylloc: {
      first_line: 70,
      first_column: 16,
      last_line: 70,
      last_column: 20,
      range: [
        1467,
        1471,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 70,
      first_column: 20,
      last_line: 70,
      last_column: 21,
      range: [
        1471,
        1472,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: -45,
    yylloc: {
      first_line: 70,
      first_column: 21,
      last_line: 70,
      last_column: 24,
      range: [
        1472,
        1475,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xPos',
    yylloc: {
      first_line: 70,
      first_column: 25,
      last_line: 70,
      last_column: 29,
      range: [
        1476,
        1480,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 70,
      first_column: 29,
      last_line: 70,
      last_column: 30,
      range: [
        1480,
        1481,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: 71,
    yylloc: {
      first_line: 70,
      first_column: 30,
      last_line: 70,
      last_column: 32,
      range: [
        1481,
        1483,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xHex',
    yylloc: {
      first_line: 70,
      first_column: 33,
      last_line: 70,
      last_column: 37,
      range: [
        1484,
        1488,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 70,
      first_column: 37,
      last_line: 70,
      last_column: 38,
      range: [
        1488,
        1489,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: 6767,
    yylloc: {
      first_line: 70,
      first_column: 38,
      last_line: 70,
      last_column: 44,
      range: [
        1489,
        1495,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xMax',
    yylloc: {
      first_line: 70,
      first_column: 45,
      last_line: 70,
      last_column: 49,
      range: [
        1496,
        1500,
      ],
    },
  },
  {
    id: 18,
    token: '"="',
    yytext: '=',
    yylloc: {
      first_line: 70,
      first_column: 49,
      last_line: 70,
      last_column: 50,
      range: [
        1500,
        1501,
      ],
    },
  },
  {
    id: 57,
    token: '"INTEGER"',
    yytext: 666,
    yylloc: {
      first_line: 70,
      first_column: 50,
      last_line: 70,
      last_column: 53,
      range: [
        1501,
        1504,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 70,
      first_column: 53,
      last_line: 70,
      last_column: 53,
      range: [
        1504,
        1504,
      ],
    },
  },
  {
    id: 33,
    token: '"%%"',
    yytext: '%%',
    yylloc: {
      first_line: 72,
      first_column: 0,
      last_line: 72,
      last_column: 2,
      range: [
        1506,
        1508,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 74,
      first_column: 0,
      last_line: 74,
      last_column: 2,
      range: [
        1510,
        1512,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 74,
      first_column: 2,
      last_line: 74,
      last_column: 4,
      range: [
        1512,
        1514,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 74,
      first_column: 4,
      last_line: 74,
      last_column: 6,
      range: [
        1514,
        1516,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 74,
      first_column: 6,
      last_line: 74,
      last_column: 8,
      range: [
        1516,
        1518,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"-"',
    yylloc: {
      first_line: 74,
      first_column: 8,
      last_line: 74,
      last_column: 11,
      range: [
        1518,
        1521,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 74,
      first_column: 11,
      last_line: 74,
      last_column: 13,
      range: [
        1521,
        1523,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 74,
      first_column: 13,
      last_line: 74,
      last_column: 15,
      range: [
        1523,
        1525,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"-"',
    yylloc: {
      first_line: 74,
      first_column: 15,
      last_line: 74,
      last_column: 18,
      range: [
        1525,
        1528,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 74,
      first_column: 18,
      last_line: 74,
      last_column: 20,
      range: [
        1528,
        1530,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 74,
      first_column: 20,
      last_line: 74,
      last_column: 22,
      range: [
        1530,
        1532,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '  \t',
    yylloc: {
      first_line: 74,
      first_column: 22,
      last_line: 74,
      last_column: 25,
      range: [
        1532,
        1535,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 74,
      first_column: 25,
      last_line: 74,
      last_column: 32,
      range: [
        1535,
        1542,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'date'",
    yylloc: {
      first_line: 74,
      first_column: 32,
      last_line: 74,
      last_column: 38,
      range: [
        1542,
        1548,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 74,
      first_column: 38,
      last_line: 74,
      last_column: 39,
      range: [
        1548,
        1549,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 74,
      first_column: 39,
      last_line: 74,
      last_column: 39,
      range: [
        1549,
        1549,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '":"',
    yylloc: {
      first_line: 75,
      first_column: 0,
      last_line: 75,
      last_column: 3,
      range: [
        1550,
        1553,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                         ',
    yylloc: {
      first_line: 75,
      first_column: 3,
      last_line: 75,
      last_column: 28,
      range: [
        1553,
        1578,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 75,
      first_column: 28,
      last_line: 75,
      last_column: 35,
      range: [
        1578,
        1585,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "':'",
    yylloc: {
      first_line: 75,
      first_column: 35,
      last_line: 75,
      last_column: 38,
      range: [
        1585,
        1588,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 75,
      first_column: 38,
      last_line: 75,
      last_column: 39,
      range: [
        1588,
        1589,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 75,
      first_column: 39,
      last_line: 75,
      last_column: 39,
      range: [
        1589,
        1589,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 76,
      first_column: 0,
      last_line: 76,
      last_column: 1,
      range: [
        1590,
        1591,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '\\s\\r\\n',
    yylloc: {
      first_line: 76,
      first_column: 1,
      last_line: 76,
      last_column: 7,
      range: [
        1591,
        1597,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 76,
      first_column: 7,
      last_line: 76,
      last_column: 8,
      range: [
        1597,
        1598,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '\t\t\t\t\t',
    yylloc: {
      first_line: 76,
      first_column: 8,
      last_line: 76,
      last_column: 13,
      range: [
        1598,
        1603,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 76,
      first_column: 13,
      last_line: 76,
      last_column: 20,
      range: [
        1603,
        1610,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'WS'",
    yylloc: {
      first_line: 76,
      first_column: 20,
      last_line: 76,
      last_column: 24,
      range: [
        1610,
        1614,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 76,
      first_column: 24,
      last_line: 76,
      last_column: 25,
      range: [
        1614,
        1615,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 76,
      first_column: 25,
      last_line: 76,
      last_column: 25,
      range: [
        1615,
        1615,
      ],
    },
  },
  {
    id: 17,
    token: '"$"',
    yytext: '<<EOF>>',
    yylloc: {
      first_line: 77,
      first_column: 0,
      last_line: 77,
      last_column: 7,
      range: [
        1616,
        1623,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                     ',
    yylloc: {
      first_line: 77,
      first_column: 7,
      last_line: 77,
      last_column: 28,
      range: [
        1623,
        1644,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 77,
      first_column: 28,
      last_line: 77,
      last_column: 35,
      range: [
        1644,
        1651,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'EOF'",
    yylloc: {
      first_line: 77,
      first_column: 35,
      last_line: 77,
      last_column: 40,
      range: [
        1651,
        1656,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 77,
      first_column: 40,
      last_line: 77,
      last_column: 41,
      range: [
        1656,
        1657,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 77,
      first_column: 41,
      last_line: 77,
      last_column: 41,
      range: [
        1657,
        1657,
      ],
    },
  },
  {
    id: 15,
    token: '"."',
    yytext: '.',
    yylloc: {
      first_line: 78,
      first_column: 0,
      last_line: 78,
      last_column: 1,
      range: [
        1658,
        1659,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                           ',
    yylloc: {
      first_line: 78,
      first_column: 1,
      last_line: 78,
      last_column: 28,
      range: [
        1659,
        1686,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 78,
      first_column: 28,
      last_line: 78,
      last_column: 35,
      range: [
        1686,
        1693,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'INVALID'",
    yylloc: {
      first_line: 78,
      first_column: 35,
      last_line: 78,
      last_column: 44,
      range: [
        1693,
        1702,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 78,
      first_column: 44,
      last_line: 78,
      last_column: 45,
      range: [
        1702,
        1703,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 78,
      first_column: 45,
      last_line: 78,
      last_column: 45,
      range: [
        1703,
        1703,
      ],
    },
  },
  {
    id: 33,
    token: '"%%"',
    yytext: '',
    yylloc: {
      first_line: 80,
      first_column: 0,
      last_line: 80,
      last_column: 0,
      range: [
        1705,
        1705,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 80,
      first_column: 0,
      last_line: 80,
      last_column: 0,
      range: [
        1705,
        1705,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 80,
      first_column: 0,
      last_line: 80,
      last_column: 0,
      range: [
        1705,
        1705,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 80,
      first_column: 0,
      last_line: 80,
      last_column: 0,
      range: [
        1705,
        1705,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 80,
      first_column: 0,
      last_line: 80,
      last_column: 0,
      range: [
        1705,
        1705,
      ],
    },
  },
  {
    id: -2,
    token: null,
    summary: {
      totalTokenCount: 311,
      EOFTokenCount: 4,
      ERRORTokenCount: 6,
      ParseErrorCallCount: 6,
      DetectedParseErrorCallCount: 0,
      fatalExceptionCount: 0,
    },
  },
]