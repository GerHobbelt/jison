[
  {
    id: 34,
    token: '"%%"',
    yytext: '%%',
    yylloc: {
      first_line: 1,
      first_column: 0,
      last_line: 1,
      last_column: 2,
      range: [
        0,
        2,
      ],
    },
  },
  {
    id: 51,
    token: '"STRING_LIT"',
    yytext: '"["',
    yylloc: {
      first_line: 2,
      first_column: 0,
      last_line: 2,
      last_column: 3,
      range: [
        3,
        6,
      ],
    },
  },
  {
    id: 46,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 2,
      first_column: 3,
      last_line: 2,
      last_column: 4,
      range: [
        6,
        7,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET"',
    yytext: '^\\\\',
    yylloc: {
      first_line: 2,
      first_column: 4,
      last_line: 2,
      last_column: 7,
      range: [
        7,
        10,
      ],
    },
  },
  {
    id: 47,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 2,
      first_column: 7,
      last_line: 2,
      last_column: 8,
      range: [
        10,
        11,
      ],
    },
  },
  {
    id: 51,
    token: '"STRING_LIT"',
    yytext: '"]"',
    yylloc: {
      first_line: 2,
      first_column: 8,
      last_line: 2,
      last_column: 11,
      range: [
        11,
        14,
      ],
    },
  },
  {
    id: 25,
    token: '"UNTERMINATED_ACTION_BLOCK"',
    yytext: {
      errStr: `Lexical error on line 2: 
Incorrectly terminated action code block. We're expecting the
'%}}}}}' end marker to go with the given start marker.
Regrettably, it does not exist in the remainder of the input.

  Erroneous area:
1: %%
2: "["[^\\\\]"]" %{{{{{
^..............^^^^^^
3: return "%{..%}";
4: }}}}}%
`,
      recoverable: false,
      text: '%{{{{{',
      token: null,
      line: 1,
      loc: {
        first_line: 2,
        first_column: 12,
        last_line: 2,
        last_column: 18,
        range: [
          15,
          21,
        ],
      },
      yy: {
        depth: 0,
        include_command_allowed: false,
      },
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: [
          {
            errStr: `Lexical error on line 2: 
Incorrectly terminated action code block. We're expecting the
'%}}}}}' end marker to go with the given start marker.
Regrettably, it does not exist in the remainder of the input.

  Erroneous area:
1: %%
2: "["[^\\\\]"]" %{{{{{
^..............^^^^^^
3: return "%{..%}";
4: }}}}}%
`,
            recoverable: false,
            text: '%{{{{{',
            token: null,
            line: 1,
            loc: {
              first_line: 2,
              first_column: 12,
              last_line: 2,
              last_column: 18,
              range: [
                15,
                21,
              ],
            },
            yy: {
              depth: 0,
              include_command_allowed: false,
            },
            lexer: '[lexer]',
            yyErrorInvoked: true,
          },
          {
            errStr: `Lexical error on line 4: 
unsupported lexer input encountered while lexing
rules (i.e. jison lex regexes) in "rules" state.

    NOTE: When you want this input to be interpreted as a LITERAL part
          of a lex rule regex, you MUST enclose it in double or
          single quotes.

          If not, then know that this input is not accepted as a valid
          regex expression here in jison-lex rules.

  Erroneous area:
1: %%
2: "["[^\\\\]"]" %{{{{{
3: return "%{..%}";
4: }}}}}%
^.......^
5: 
6: 
`,
            recoverable: false,
            text: '%',
            token: null,
            line: 3,
            loc: {
              first_line: 4,
              first_column: 5,
              last_line: 4,
              last_column: 6,
              range: [
                44,
                45,
              ],
            },
            yy: '[reference to sibling --> *.[6].yytext.lexer.__error_infos.[0].yy]',
            lexer: '[lexer]',
            yyErrorInvoked: true,
          },
        ],
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `%%
"["[^\\\\]"]" %{{{{{
return "%{..%}";
}}}}}%

`,
        matches: false,
        yytext: '',
        offset: 47,
        base_position: 0,
        yyleng: 0,
        yylineno: 5,
        yylloc: {
          first_line: 6,
          first_column: 0,
          last_line: 6,
          last_column: 0,
          range: [
            47,
            47,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
      },
      yyErrorInvoked: true,
      errorDiag: {
        inputPos: 26,
        yytext: '%{{{{{',
        yyleng: 6,
        matches: [
          '%{{{{{',
        ],
        activeCondition: 'action',
        conditionStackDepth: 3,
      },
    },
    yylloc: {
      first_line: 2,
      first_column: 12,
      last_line: 2,
      last_column: 18,
      range: [
        15,
        21,
      ],
    },
  },
  {
    id: 24,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 2,
      first_column: 18,
      last_line: 2,
      last_column: 18,
      range: [
        21,
        21,
      ],
    },
  },
  {
    id: 52,
    token: '"CHARACTER_LIT"',
    yytext: 'return',
    yylloc: {
      first_line: 3,
      first_column: 0,
      last_line: 3,
      last_column: 6,
      range: [
        22,
        28,
      ],
    },
  },
  {
    id: 26,
    token: '"ACTION_START"',
    yytext: ' ',
    yylloc: {
      first_line: 3,
      first_column: 6,
      last_line: 3,
      last_column: 7,
      range: [
        28,
        29,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: '"%{..%}"',
    yylloc: {
      first_line: 3,
      first_column: 7,
      last_line: 3,
      last_column: 15,
      range: [
        29,
        37,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 3,
      first_column: 15,
      last_line: 3,
      last_column: 16,
      range: [
        37,
        38,
      ],
    },
  },
  {
    id: 24,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 3,
      first_column: 16,
      last_line: 3,
      last_column: 16,
      range: [
        38,
        38,
      ],
    },
  },
  {
    id: 5,
    token: '"}"',
    yytext: '}',
    yylloc: {
      first_line: 4,
      first_column: 0,
      last_line: 4,
      last_column: 1,
      range: [
        39,
        40,
      ],
    },
  },
  {
    id: 5,
    token: '"}"',
    yytext: '}',
    yylloc: {
      first_line: 4,
      first_column: 1,
      last_line: 4,
      last_column: 2,
      range: [
        40,
        41,
      ],
    },
  },
  {
    id: 5,
    token: '"}"',
    yytext: '}',
    yylloc: {
      first_line: 4,
      first_column: 2,
      last_line: 4,
      last_column: 3,
      range: [
        41,
        42,
      ],
    },
  },
  {
    id: 5,
    token: '"}"',
    yytext: '}',
    yylloc: {
      first_line: 4,
      first_column: 3,
      last_line: 4,
      last_column: 4,
      range: [
        42,
        43,
      ],
    },
  },
  {
    id: 5,
    token: '"}"',
    yytext: '}',
    yylloc: {
      first_line: 4,
      first_column: 4,
      last_line: 4,
      last_column: 5,
      range: [
        43,
        44,
      ],
    },
  },
  {
    id: 2,
    token: '"error"',
    yytext: {
      errStr: `Lexical error on line 4: 
unsupported lexer input encountered while lexing
rules (i.e. jison lex regexes) in "rules" state.

    NOTE: When you want this input to be interpreted as a LITERAL part
          of a lex rule regex, you MUST enclose it in double or
          single quotes.

          If not, then know that this input is not accepted as a valid
          regex expression here in jison-lex rules.

  Erroneous area:
1: %%
2: "["[^\\\\]"]" %{{{{{
3: return "%{..%}";
4: }}}}}%
^.......^
5: 
6: 
`,
      recoverable: false,
      text: '%',
      token: null,
      line: 3,
      loc: {
        first_line: 4,
        first_column: 5,
        last_line: 4,
        last_column: 6,
        range: [
          44,
          45,
        ],
      },
      yy: {
        depth: 0,
        include_command_allowed: false,
      },
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: '[reference to sibling array --> *.[6].yytext.lexer.__error_infos, length = 2]',
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `%%
"["[^\\\\]"]" %{{{{{
return "%{..%}";
}}}}}%

`,
        matches: false,
        yytext: '',
        offset: 47,
        base_position: 0,
        yyleng: 0,
        yylineno: 5,
        yylloc: {
          first_line: 6,
          first_column: 0,
          last_line: 6,
          last_column: 0,
          range: [
            47,
            47,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
      },
      yyErrorInvoked: true,
      errorDiag: {
        inputPos: 2,
        yytext: '%',
        yyleng: 1,
        matches: [
          '%',
        ],
        activeCondition: 'rules',
        conditionStackDepth: 2,
      },
    },
    yylloc: {
      first_line: 4,
      first_column: 5,
      last_line: 4,
      last_column: 6,
      range: [
        44,
        45,
      ],
    },
  },
  {
    id: 34,
    token: '"%%"',
    yytext: '',
    yylloc: {
      first_line: 6,
      first_column: 0,
      last_line: 6,
      last_column: 0,
      range: [
        47,
        47,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 6,
      first_column: 0,
      last_line: 6,
      last_column: 0,
      range: [
        47,
        47,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 6,
      first_column: 0,
      last_line: 6,
      last_column: 0,
      range: [
        47,
        47,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 6,
      first_column: 0,
      last_line: 6,
      last_column: 0,
      range: [
        47,
        47,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 6,
      first_column: 0,
      last_line: 6,
      last_column: 0,
      range: [
        47,
        47,
      ],
    },
  },
  {
    id: -2,
    token: null,
    summary: {
      totalTokenCount: 24,
      EOFTokenCount: 4,
      ERRORTokenCount: 1,
      ParseErrorCallCount: 2,
      DetectedParseErrorCallCount: 0,
      fatalExceptionCount: 0,
    },
  },
]