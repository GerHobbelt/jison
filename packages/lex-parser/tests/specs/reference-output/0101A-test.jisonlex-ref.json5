{
  rules: [
    {
      ast: {
        source: '[IDEM: srcCode]',
        augmentedSource: '[LINE-SHIFTED SOURCE]',
        ast: '[recast AST]',
        fault: false,
      },
      fault: false,
      srcCode: "this.begin('FUNCTION_STATE');\n    return yytext.charCodeAt(0)",
      rule: '.',
    },
    {
      ast: {
        source: '[IDEM: srcCode]',
        augmentedSource: '[LINE-SHIFTED SOURCE]',
        ast: '[recast AST]',
        fault: false,
      },
      fault: false,
      srcCode: `yytext = {
                                    conditionStack: this.conditionStack,
                                    conditionsSet: Object.keys(this.conditions),
                                };
                                return 'EOF'`,
      rule: '$',
    },
  ],
  macros: {},
  startConditions: {
    PICTURE_STATE: 0,
    FUNCTION_STATE: 0,
    A: 0,
    B: 0,
    C: 0,
    D: 1,
    E: 1,
    FOOBAR: 1,
    G7: 1,
    _8bit: 1,
  },
  codeSections: [],
  importDecls: [],
  unknownDecls: [],
  __extra_diag_info__: {
    pre_parse_callback_callCount: 1,
    post_parse_callback_callCount: 1,
    post_parse_diaginfo: {
      sharedState_yy: {
        startConditions: '[reference to sibling --> *.startConditions]',
        __options_flags__: 0,
        __options_category_description__: '???',
        __inside_scoped_ruleset__: false,
        __context_cfg_stack__: [],
        depth: 0,
        include_command_allowed: false,
      },
      hash: {
        errStr: null,
        exception: null,
        text: '',
        value: '',
        token: '"$accept"',
        token_id: 0,
        line: 35,
        expected: null,
        recoverable: false,
        state: 26,
        action: 2,
        new_state: 1,
        stack_pointer: 5,
      },
      reentrant_call_depth: 1,
      error_infos_stack: [
        {
          errStr: null,
          exception: null,
          text: '',
          value: '',
          token: '"$accept"',
          token_id: 0,
          line: 35,
          expected: null,
          recoverable: false,
          state: 26,
          action: 2,
          new_state: 1,
          stack_pointer: 5,
        },
      ],
      error_recovery_stack: [],
      error_infos_stack_size: 1,
      error_recovery_stack_size: 0,
    },
    reentrant_call_depth: 0,
    error_infos_stack_size: 0,
    error_recovery_stack_size: 0,
  },
  __original_input__: `//
// title: "multi-line %s and %x"
// test_input: 'abc AZ=0.4'
//
// ...
//

// %s is 'active' as long as the lines following are indented *and* non-empty
// (i.e. cannot have an empty, whitespace-only line in there)
%s    
    PICTURE_STATE    
    FUNCTION_STATE
    A
    B
    C

%x    
    D
    E
    FOOBAR
    G7
    _8bit

%%


. {
    this.begin('FUNCTION_STATE');
    return yytext.charCodeAt(0);
}

<<EOF>>                         yytext = {
                                    conditionStack: this.conditionStack,
                                    conditionsSet: Object.keys(this.conditions),
                                };
                                return 'EOF';`,
}