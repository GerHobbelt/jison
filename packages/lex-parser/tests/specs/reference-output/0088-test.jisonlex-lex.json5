[
  {
    id: 34,
    token: '"%%"',
    yytext: '%%',
    yylloc: {
      first_line: 2,
      first_column: 0,
      last_line: 2,
      last_column: 2,
      range: [
        1,
        3,
      ],
    },
  },
  {
    id: 52,
    token: '"CHARACTER_LIT"',
    yytext: '%',
    yylloc: {
      first_line: 4,
      first_column: 0,
      last_line: 4,
      last_column: 2,
      range: [
        5,
        7,
      ],
    },
  },
  {
    id: 2,
    token: '"error"',
    yytext: {
      errStr: `Lexical error on line 4: 
unsupported lexer input encountered while lexing
rules (i.e. jison lex regexes) in "rules" state.

    NOTE: When you want this input to be interpreted as a LITERAL part
          of a lex rule regex, you MUST enclose it in double or
          single quotes.

          If not, then know that this input is not accepted as a valid
          regex expression here in jison-lex rules.

  Erroneous area:
1: 
2: %%
3: 
4: \\%%[^\\n]*                /* erroneous escape: MUST escape both % */
^....^
5: \\d\\d\\d\\d"-"\\d\\d"-"\\d\\d   return 'date';
6: ":"                         return ':';
`,
      recoverable: false,
      text: '%',
      token: null,
      line: 3,
      loc: {
        first_line: 4,
        first_column: 2,
        last_line: 4,
        last_column: 3,
        range: [
          7,
          8,
        ],
      },
      yy: {},
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: [
          {
            errStr: `Lexical error on line 4: 
unsupported lexer input encountered while lexing
rules (i.e. jison lex regexes) in "rules" state.

    NOTE: When you want this input to be interpreted as a LITERAL part
          of a lex rule regex, you MUST enclose it in double or
          single quotes.

          If not, then know that this input is not accepted as a valid
          regex expression here in jison-lex rules.

  Erroneous area:
1: 
2: %%
3: 
4: \\%%[^\\n]*                /* erroneous escape: MUST escape both % */
^....^
5: \\d\\d\\d\\d"-"\\d\\d"-"\\d\\d   return 'date';
6: ":"                         return ':';
`,
            recoverable: false,
            text: '%',
            token: null,
            line: 3,
            loc: {
              first_line: 4,
              first_column: 2,
              last_line: 4,
              last_column: 3,
              range: [
                7,
                8,
              ],
            },
            yy: {
              depth: 0,
              include_command_allowed: false,
            },
            lexer: '[lexer]',
            yyErrorInvoked: true,
          },
        ],
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `
%%

\\%%[^\\n]*               	/* erroneous escape: MUST escape both % */
\\d\\d\\d\\d"-"\\d\\d"-"\\d\\d  	return 'date';
":"                         return ':';
[\\s\\r\\n]					return 'WS';
<<EOF>>                     return 'EOF';
.                           return 'INVALID';

`,
        matches: false,
        yytext: '',
        offset: 268,
        base_position: 0,
        yyleng: 0,
        yylineno: 10,
        yylloc: {
          first_line: 11,
          first_column: 0,
          last_line: 11,
          last_column: 0,
          range: [
            268,
            268,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
        },
      },
      yyErrorInvoked: true,
      errorDiag: {
        inputPos: 260,
        yytext: '%',
        yyleng: 1,
        matches: [
          '%',
        ],
        activeCondition: 'rules',
        conditionStackDepth: 2,
      },
    },
    yylloc: {
      first_line: 4,
      first_column: 2,
      last_line: 4,
      last_column: 3,
      range: [
        7,
        8,
      ],
    },
  },
  {
    id: 46,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 4,
      first_column: 3,
      last_line: 4,
      last_column: 4,
      range: [
        8,
        9,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET"',
    yytext: '^\\n',
    yylloc: {
      first_line: 4,
      first_column: 4,
      last_line: 4,
      last_column: 7,
      range: [
        9,
        12,
      ],
    },
  },
  {
    id: 47,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 4,
      first_column: 7,
      last_line: 4,
      last_column: 8,
      range: [
        12,
        13,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 4,
      first_column: 8,
      last_line: 4,
      last_column: 9,
      range: [
        13,
        14,
      ],
    },
  },
  {
    id: 26,
    token: '"ACTION_START"',
    yytext: '               \t',
    yylloc: {
      first_line: 4,
      first_column: 9,
      last_line: 4,
      last_column: 25,
      range: [
        14,
        30,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: '/* erroneous escape: MUST escape both % */',
    yylloc: {
      first_line: 4,
      first_column: 25,
      last_line: 4,
      last_column: 67,
      range: [
        30,
        72,
      ],
    },
  },
  {
    id: 24,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 4,
      first_column: 67,
      last_line: 4,
      last_column: 67,
      range: [
        72,
        72,
      ],
    },
  },
  {
    id: 43,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 5,
      first_column: 0,
      last_line: 5,
      last_column: 2,
      range: [
        73,
        75,
      ],
    },
  },
  {
    id: 43,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 5,
      first_column: 2,
      last_line: 5,
      last_column: 4,
      range: [
        75,
        77,
      ],
    },
  },
  {
    id: 43,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 5,
      first_column: 4,
      last_line: 5,
      last_column: 6,
      range: [
        77,
        79,
      ],
    },
  },
  {
    id: 43,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 5,
      first_column: 6,
      last_line: 5,
      last_column: 8,
      range: [
        79,
        81,
      ],
    },
  },
  {
    id: 51,
    token: '"STRING_LIT"',
    yytext: '"-"',
    yylloc: {
      first_line: 5,
      first_column: 8,
      last_line: 5,
      last_column: 11,
      range: [
        81,
        84,
      ],
    },
  },
  {
    id: 43,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 5,
      first_column: 11,
      last_line: 5,
      last_column: 13,
      range: [
        84,
        86,
      ],
    },
  },
  {
    id: 43,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 5,
      first_column: 13,
      last_line: 5,
      last_column: 15,
      range: [
        86,
        88,
      ],
    },
  },
  {
    id: 51,
    token: '"STRING_LIT"',
    yytext: '"-"',
    yylloc: {
      first_line: 5,
      first_column: 15,
      last_line: 5,
      last_column: 18,
      range: [
        88,
        91,
      ],
    },
  },
  {
    id: 43,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 5,
      first_column: 18,
      last_line: 5,
      last_column: 20,
      range: [
        91,
        93,
      ],
    },
  },
  {
    id: 43,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 5,
      first_column: 20,
      last_line: 5,
      last_column: 22,
      range: [
        93,
        95,
      ],
    },
  },
  {
    id: 26,
    token: '"ACTION_START"',
    yytext: '  \t',
    yylloc: {
      first_line: 5,
      first_column: 22,
      last_line: 5,
      last_column: 25,
      range: [
        95,
        98,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 5,
      first_column: 25,
      last_line: 5,
      last_column: 32,
      range: [
        98,
        105,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: "'date'",
    yylloc: {
      first_line: 5,
      first_column: 32,
      last_line: 5,
      last_column: 38,
      range: [
        105,
        111,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 5,
      first_column: 38,
      last_line: 5,
      last_column: 39,
      range: [
        111,
        112,
      ],
    },
  },
  {
    id: 24,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 5,
      first_column: 39,
      last_line: 5,
      last_column: 39,
      range: [
        112,
        112,
      ],
    },
  },
  {
    id: 51,
    token: '"STRING_LIT"',
    yytext: '":"',
    yylloc: {
      first_line: 6,
      first_column: 0,
      last_line: 6,
      last_column: 3,
      range: [
        113,
        116,
      ],
    },
  },
  {
    id: 26,
    token: '"ACTION_START"',
    yytext: '                         ',
    yylloc: {
      first_line: 6,
      first_column: 3,
      last_line: 6,
      last_column: 28,
      range: [
        116,
        141,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 6,
      first_column: 28,
      last_line: 6,
      last_column: 35,
      range: [
        141,
        148,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: "':'",
    yylloc: {
      first_line: 6,
      first_column: 35,
      last_line: 6,
      last_column: 38,
      range: [
        148,
        151,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 6,
      first_column: 38,
      last_line: 6,
      last_column: 39,
      range: [
        151,
        152,
      ],
    },
  },
  {
    id: 24,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 6,
      first_column: 39,
      last_line: 6,
      last_column: 39,
      range: [
        152,
        152,
      ],
    },
  },
  {
    id: 46,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 7,
      first_column: 0,
      last_line: 7,
      last_column: 1,
      range: [
        153,
        154,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET"',
    yytext: '\\s\\r\\n',
    yylloc: {
      first_line: 7,
      first_column: 1,
      last_line: 7,
      last_column: 7,
      range: [
        154,
        160,
      ],
    },
  },
  {
    id: 47,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 7,
      first_column: 7,
      last_line: 7,
      last_column: 8,
      range: [
        160,
        161,
      ],
    },
  },
  {
    id: 26,
    token: '"ACTION_START"',
    yytext: '\t\t\t\t\t',
    yylloc: {
      first_line: 7,
      first_column: 8,
      last_line: 7,
      last_column: 13,
      range: [
        161,
        166,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 7,
      first_column: 13,
      last_line: 7,
      last_column: 20,
      range: [
        166,
        173,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: "'WS'",
    yylloc: {
      first_line: 7,
      first_column: 20,
      last_line: 7,
      last_column: 24,
      range: [
        173,
        177,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 7,
      first_column: 24,
      last_line: 7,
      last_column: 25,
      range: [
        177,
        178,
      ],
    },
  },
  {
    id: 24,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 7,
      first_column: 25,
      last_line: 7,
      last_column: 25,
      range: [
        178,
        178,
      ],
    },
  },
  {
    id: 17,
    token: '"$"',
    yytext: '<<EOF>>',
    yylloc: {
      first_line: 8,
      first_column: 0,
      last_line: 8,
      last_column: 7,
      range: [
        179,
        186,
      ],
    },
  },
  {
    id: 26,
    token: '"ACTION_START"',
    yytext: '                     ',
    yylloc: {
      first_line: 8,
      first_column: 7,
      last_line: 8,
      last_column: 28,
      range: [
        186,
        207,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 8,
      first_column: 28,
      last_line: 8,
      last_column: 35,
      range: [
        207,
        214,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: "'EOF'",
    yylloc: {
      first_line: 8,
      first_column: 35,
      last_line: 8,
      last_column: 40,
      range: [
        214,
        219,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 8,
      first_column: 40,
      last_line: 8,
      last_column: 41,
      range: [
        219,
        220,
      ],
    },
  },
  {
    id: 24,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 8,
      first_column: 41,
      last_line: 8,
      last_column: 41,
      range: [
        220,
        220,
      ],
    },
  },
  {
    id: 15,
    token: '"."',
    yytext: '.',
    yylloc: {
      first_line: 9,
      first_column: 0,
      last_line: 9,
      last_column: 1,
      range: [
        221,
        222,
      ],
    },
  },
  {
    id: 26,
    token: '"ACTION_START"',
    yytext: '                           ',
    yylloc: {
      first_line: 9,
      first_column: 1,
      last_line: 9,
      last_column: 28,
      range: [
        222,
        249,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 9,
      first_column: 28,
      last_line: 9,
      last_column: 35,
      range: [
        249,
        256,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: "'INVALID'",
    yylloc: {
      first_line: 9,
      first_column: 35,
      last_line: 9,
      last_column: 44,
      range: [
        256,
        265,
      ],
    },
  },
  {
    id: 36,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 9,
      first_column: 44,
      last_line: 9,
      last_column: 45,
      range: [
        265,
        266,
      ],
    },
  },
  {
    id: 24,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 9,
      first_column: 45,
      last_line: 9,
      last_column: 45,
      range: [
        266,
        266,
      ],
    },
  },
  {
    id: 34,
    token: '"%%"',
    yytext: '',
    yylloc: {
      first_line: 11,
      first_column: 0,
      last_line: 11,
      last_column: 0,
      range: [
        268,
        268,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 11,
      first_column: 0,
      last_line: 11,
      last_column: 0,
      range: [
        268,
        268,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 11,
      first_column: 0,
      last_line: 11,
      last_column: 0,
      range: [
        268,
        268,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 11,
      first_column: 0,
      last_line: 11,
      last_column: 0,
      range: [
        268,
        268,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 11,
      first_column: 0,
      last_line: 11,
      last_column: 0,
      range: [
        268,
        268,
      ],
    },
  },
  {
    id: -2,
    token: null,
    summary: {
      totalTokenCount: 56,
      EOFTokenCount: 4,
      ERRORTokenCount: 1,
      ParseErrorCallCount: 1,
      DetectedParseErrorCallCount: 0,
      fatalExceptionCount: 0,
    },
  },
]