[
  {
    id: 29,
    token: '"INIT_CODE"',
    yytext: '%code',
    yylloc: {
      first_line: 9,
      first_column: 0,
      last_line: 9,
      last_column: 5,
      range: [
        56,
        61,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'imports',
    yylloc: {
      first_line: 9,
      first_column: 6,
      last_line: 9,
      last_column: 13,
      range: [
        62,
        69,
      ],
    },
  },
  {
    id: 37,
    token: '"ENTIRE_ACTION"',
    yytext: {
      srcCode: `
  import helpers from '../helpers-lib';
`,
      shiftCount: 43,
      action_start_marker: '%{',
      action_end_marker: '%}',
    },
    yylloc: {
      first_line: 9,
      first_column: 14,
      last_line: 11,
      last_column: 2,
      range: [
        70,
        115,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 11,
      first_column: 2,
      last_line: 11,
      last_column: 2,
      range: [
        115,
        115,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'ASCII_LETTER',
    yylloc: {
      first_line: 15,
      first_column: 0,
      last_line: 15,
      last_column: 12,
      range: [
        119,
        131,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 15,
      first_column: 40,
      last_line: 15,
      last_column: 41,
      range: [
        159,
        160,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: 'a-zA-z',
    yylloc: {
      first_line: 15,
      first_column: 41,
      last_line: 15,
      last_column: 47,
      range: [
        160,
        166,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 15,
      first_column: 47,
      last_line: 15,
      last_column: 48,
      range: [
        166,
        167,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 15,
      first_column: 48,
      last_line: 15,
      last_column: 48,
      range: [
        167,
        167,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'UNICODE_LETTER',
    yylloc: {
      first_line: 19,
      first_column: 0,
      last_line: 19,
      last_column: 14,
      range: [
        350,
        364,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 19,
      first_column: 40,
      last_line: 19,
      last_column: 41,
      range: [
        390,
        391,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '\\p',
    yylloc: {
      first_line: 19,
      first_column: 41,
      last_line: 19,
      last_column: 43,
      range: [
        391,
        393,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{Alphabetic}',
    yylloc: {
      first_line: 19,
      first_column: 43,
      last_line: 19,
      last_column: 55,
      range: [
        393,
        405,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 19,
      first_column: 55,
      last_line: 19,
      last_column: 56,
      range: [
        405,
        406,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 19,
      first_column: 56,
      last_line: 19,
      last_column: 56,
      range: [
        406,
        406,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'ALPHA',
    yylloc: {
      first_line: 20,
      first_column: 0,
      last_line: 20,
      last_column: 5,
      range: [
        407,
        412,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 20,
      first_column: 40,
      last_line: 20,
      last_column: 41,
      range: [
        447,
        448,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{UNICODE_LETTER}',
    yylloc: {
      first_line: 20,
      first_column: 41,
      last_line: 20,
      last_column: 57,
      range: [
        448,
        464,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '_',
    yylloc: {
      first_line: 20,
      first_column: 57,
      last_line: 20,
      last_column: 58,
      range: [
        464,
        465,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 20,
      first_column: 58,
      last_line: 20,
      last_column: 59,
      range: [
        465,
        466,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 20,
      first_column: 59,
      last_line: 20,
      last_column: 59,
      range: [
        466,
        466,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'DIGIT',
    yylloc: {
      first_line: 21,
      first_column: 0,
      last_line: 21,
      last_column: 5,
      range: [
        467,
        472,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 21,
      first_column: 40,
      last_line: 21,
      last_column: 41,
      range: [
        507,
        508,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '\\p',
    yylloc: {
      first_line: 21,
      first_column: 41,
      last_line: 21,
      last_column: 43,
      range: [
        508,
        510,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{Number}',
    yylloc: {
      first_line: 21,
      first_column: 43,
      last_line: 21,
      last_column: 51,
      range: [
        510,
        518,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 21,
      first_column: 51,
      last_line: 21,
      last_column: 52,
      range: [
        518,
        519,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 21,
      first_column: 52,
      last_line: 21,
      last_column: 52,
      range: [
        519,
        519,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'WHITESPACE',
    yylloc: {
      first_line: 22,
      first_column: 0,
      last_line: 22,
      last_column: 10,
      range: [
        520,
        530,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 22,
      first_column: 40,
      last_line: 22,
      last_column: 41,
      range: [
        560,
        561,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '\\s\\r\\n\\p',
    yylloc: {
      first_line: 22,
      first_column: 41,
      last_line: 22,
      last_column: 49,
      range: [
        561,
        569,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{Separator}',
    yylloc: {
      first_line: 22,
      first_column: 49,
      last_line: 22,
      last_column: 60,
      range: [
        569,
        580,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 22,
      first_column: 60,
      last_line: 22,
      last_column: 61,
      range: [
        580,
        581,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 22,
      first_column: 61,
      last_line: 22,
      last_column: 61,
      range: [
        581,
        581,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'ALNUM',
    yylloc: {
      first_line: 23,
      first_column: 0,
      last_line: 23,
      last_column: 5,
      range: [
        582,
        587,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 23,
      first_column: 40,
      last_line: 23,
      last_column: 41,
      range: [
        622,
        623,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ALPHA}',
    yylloc: {
      first_line: 23,
      first_column: 41,
      last_line: 23,
      last_column: 48,
      range: [
        623,
        630,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{DIGIT}',
    yylloc: {
      first_line: 23,
      first_column: 48,
      last_line: 23,
      last_column: 55,
      range: [
        630,
        637,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 23,
      first_column: 55,
      last_line: 23,
      last_column: 56,
      range: [
        637,
        638,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 23,
      first_column: 56,
      last_line: 23,
      last_column: 56,
      range: [
        638,
        638,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'NAME',
    yylloc: {
      first_line: 25,
      first_column: 0,
      last_line: 25,
      last_column: 4,
      range: [
        640,
        644,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 25,
      first_column: 40,
      last_line: 25,
      last_column: 41,
      range: [
        680,
        681,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ALPHA}',
    yylloc: {
      first_line: 25,
      first_column: 41,
      last_line: 25,
      last_column: 48,
      range: [
        681,
        688,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 25,
      first_column: 48,
      last_line: 25,
      last_column: 49,
      range: [
        688,
        689,
      ],
    },
  },
  {
    id: 43,
    token: '"SPECIAL_GROUP"',
    yytext: '(?:',
    yylloc: {
      first_line: 25,
      first_column: 49,
      last_line: 25,
      last_column: 52,
      range: [
        689,
        692,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 25,
      first_column: 52,
      last_line: 25,
      last_column: 53,
      range: [
        692,
        693,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ALNUM}',
    yylloc: {
      first_line: 25,
      first_column: 53,
      last_line: 25,
      last_column: 60,
      range: [
        693,
        700,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '-',
    yylloc: {
      first_line: 25,
      first_column: 60,
      last_line: 25,
      last_column: 61,
      range: [
        700,
        701,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 25,
      first_column: 61,
      last_line: 25,
      last_column: 62,
      range: [
        701,
        702,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 25,
      first_column: 62,
      last_line: 25,
      last_column: 63,
      range: [
        702,
        703,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ALNUM}',
    yylloc: {
      first_line: 25,
      first_column: 63,
      last_line: 25,
      last_column: 70,
      range: [
        703,
        710,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 25,
      first_column: 70,
      last_line: 25,
      last_column: 71,
      range: [
        710,
        711,
      ],
    },
  },
  {
    id: 12,
    token: '"?"',
    yytext: '?',
    yylloc: {
      first_line: 25,
      first_column: 71,
      last_line: 25,
      last_column: 72,
      range: [
        711,
        712,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 25,
      first_column: 72,
      last_line: 25,
      last_column: 72,
      range: [
        712,
        712,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'ID',
    yylloc: {
      first_line: 26,
      first_column: 0,
      last_line: 26,
      last_column: 2,
      range: [
        713,
        715,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 26,
      first_column: 40,
      last_line: 26,
      last_column: 41,
      range: [
        753,
        754,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ALPHA}',
    yylloc: {
      first_line: 26,
      first_column: 41,
      last_line: 26,
      last_column: 48,
      range: [
        754,
        761,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 26,
      first_column: 48,
      last_line: 26,
      last_column: 49,
      range: [
        761,
        762,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ALNUM}',
    yylloc: {
      first_line: 26,
      first_column: 49,
      last_line: 26,
      last_column: 56,
      range: [
        762,
        769,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 26,
      first_column: 56,
      last_line: 26,
      last_column: 57,
      range: [
        769,
        770,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 26,
      first_column: 57,
      last_line: 26,
      last_column: 57,
      range: [
        770,
        770,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'DECIMAL_NUMBER',
    yylloc: {
      first_line: 27,
      first_column: 0,
      last_line: 27,
      last_column: 14,
      range: [
        771,
        785,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 27,
      first_column: 40,
      last_line: 27,
      last_column: 41,
      range: [
        811,
        812,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '1-9',
    yylloc: {
      first_line: 27,
      first_column: 41,
      last_line: 27,
      last_column: 44,
      range: [
        812,
        815,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 27,
      first_column: 44,
      last_line: 27,
      last_column: 45,
      range: [
        815,
        816,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 27,
      first_column: 45,
      last_line: 27,
      last_column: 46,
      range: [
        816,
        817,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '0-9',
    yylloc: {
      first_line: 27,
      first_column: 46,
      last_line: 27,
      last_column: 49,
      range: [
        817,
        820,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 27,
      first_column: 49,
      last_line: 27,
      last_column: 50,
      range: [
        820,
        821,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 27,
      first_column: 50,
      last_line: 27,
      last_column: 51,
      range: [
        821,
        822,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 27,
      first_column: 51,
      last_line: 27,
      last_column: 51,
      range: [
        822,
        822,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'HEX_NUMBER',
    yylloc: {
      first_line: 28,
      first_column: 0,
      last_line: 28,
      last_column: 10,
      range: [
        823,
        833,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"0"',
    yylloc: {
      first_line: 28,
      first_column: 40,
      last_line: 28,
      last_column: 43,
      range: [
        863,
        866,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 28,
      first_column: 43,
      last_line: 28,
      last_column: 44,
      range: [
        866,
        867,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: 'xX',
    yylloc: {
      first_line: 28,
      first_column: 44,
      last_line: 28,
      last_column: 46,
      range: [
        867,
        869,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 28,
      first_column: 46,
      last_line: 28,
      last_column: 47,
      range: [
        869,
        870,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 28,
      first_column: 47,
      last_line: 28,
      last_column: 48,
      range: [
        870,
        871,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '0-9a-fA-F',
    yylloc: {
      first_line: 28,
      first_column: 48,
      last_line: 28,
      last_column: 57,
      range: [
        871,
        880,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 28,
      first_column: 57,
      last_line: 28,
      last_column: 58,
      range: [
        880,
        881,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 28,
      first_column: 58,
      last_line: 28,
      last_column: 59,
      range: [
        881,
        882,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 28,
      first_column: 59,
      last_line: 28,
      last_column: 59,
      range: [
        882,
        882,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'BR',
    yylloc: {
      first_line: 29,
      first_column: 0,
      last_line: 29,
      last_column: 2,
      range: [
        883,
        885,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\r',
    yylloc: {
      first_line: 29,
      first_column: 40,
      last_line: 29,
      last_column: 42,
      range: [
        923,
        925,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\n',
    yylloc: {
      first_line: 29,
      first_column: 42,
      last_line: 29,
      last_column: 44,
      range: [
        925,
        927,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 29,
      first_column: 44,
      last_line: 29,
      last_column: 45,
      range: [
        927,
        928,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\n',
    yylloc: {
      first_line: 29,
      first_column: 45,
      last_line: 29,
      last_column: 47,
      range: [
        928,
        930,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 29,
      first_column: 47,
      last_line: 29,
      last_column: 48,
      range: [
        930,
        931,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\r',
    yylloc: {
      first_line: 29,
      first_column: 48,
      last_line: 29,
      last_column: 50,
      range: [
        931,
        933,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 29,
      first_column: 50,
      last_line: 29,
      last_column: 50,
      range: [
        933,
        933,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'WS',
    yylloc: {
      first_line: 32,
      first_column: 0,
      last_line: 32,
      last_column: 2,
      range: [
        1072,
        1074,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 32,
      first_column: 40,
      last_line: 32,
      last_column: 41,
      range: [
        1112,
        1113,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^\\S\\r\\n',
    yylloc: {
      first_line: 32,
      first_column: 41,
      last_line: 32,
      last_column: 48,
      range: [
        1113,
        1120,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 32,
      first_column: 48,
      last_line: 32,
      last_column: 49,
      range: [
        1120,
        1121,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 32,
      first_column: 49,
      last_line: 32,
      last_column: 49,
      range: [
        1121,
        1121,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'QUOTED_STRING_CONTENT',
    yylloc: {
      first_line: 35,
      first_column: 0,
      last_line: 35,
      last_column: 21,
      range: [
        1190,
        1211,
      ],
    },
  },
  {
    id: 43,
    token: '"SPECIAL_GROUP"',
    yytext: '(?:',
    yylloc: {
      first_line: 35,
      first_column: 40,
      last_line: 35,
      last_column: 43,
      range: [
        1230,
        1233,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\\\',
    yylloc: {
      first_line: 35,
      first_column: 43,
      last_line: 35,
      last_column: 45,
      range: [
        1233,
        1235,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: "'",
    yylloc: {
      first_line: 35,
      first_column: 45,
      last_line: 35,
      last_column: 47,
      range: [
        1235,
        1237,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 35,
      first_column: 47,
      last_line: 35,
      last_column: 48,
      range: [
        1237,
        1238,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\\\',
    yylloc: {
      first_line: 35,
      first_column: 48,
      last_line: 35,
      last_column: 50,
      range: [
        1238,
        1240,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 35,
      first_column: 50,
      last_line: 35,
      last_column: 51,
      range: [
        1240,
        1241,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: "^\\'",
    yylloc: {
      first_line: 35,
      first_column: 51,
      last_line: 35,
      last_column: 54,
      range: [
        1241,
        1244,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 35,
      first_column: 54,
      last_line: 35,
      last_column: 55,
      range: [
        1244,
        1245,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 35,
      first_column: 55,
      last_line: 35,
      last_column: 56,
      range: [
        1245,
        1246,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 35,
      first_column: 56,
      last_line: 35,
      last_column: 57,
      range: [
        1246,
        1247,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: "^\\\\\\'\\r\\n",
    yylloc: {
      first_line: 35,
      first_column: 57,
      last_line: 35,
      last_column: 66,
      range: [
        1247,
        1256,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 35,
      first_column: 66,
      last_line: 35,
      last_column: 67,
      range: [
        1256,
        1257,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 35,
      first_column: 67,
      last_line: 35,
      last_column: 68,
      range: [
        1257,
        1258,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 35,
      first_column: 68,
      last_line: 35,
      last_column: 69,
      range: [
        1258,
        1259,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 35,
      first_column: 69,
      last_line: 35,
      last_column: 69,
      range: [
        1259,
        1259,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'DOUBLEQUOTED_STRING_CONTENT',
    yylloc: {
      first_line: 36,
      first_column: 0,
      last_line: 36,
      last_column: 27,
      range: [
        1260,
        1287,
      ],
    },
  },
  {
    id: 43,
    token: '"SPECIAL_GROUP"',
    yytext: '(?:',
    yylloc: {
      first_line: 36,
      first_column: 40,
      last_line: 36,
      last_column: 43,
      range: [
        1300,
        1303,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\\\',
    yylloc: {
      first_line: 36,
      first_column: 43,
      last_line: 36,
      last_column: 45,
      range: [
        1303,
        1305,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '"',
    yylloc: {
      first_line: 36,
      first_column: 45,
      last_line: 36,
      last_column: 47,
      range: [
        1305,
        1307,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 36,
      first_column: 47,
      last_line: 36,
      last_column: 48,
      range: [
        1307,
        1308,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\\\',
    yylloc: {
      first_line: 36,
      first_column: 48,
      last_line: 36,
      last_column: 50,
      range: [
        1308,
        1310,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 36,
      first_column: 50,
      last_line: 36,
      last_column: 51,
      range: [
        1310,
        1311,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^\\"',
    yylloc: {
      first_line: 36,
      first_column: 51,
      last_line: 36,
      last_column: 54,
      range: [
        1311,
        1314,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 36,
      first_column: 54,
      last_line: 36,
      last_column: 55,
      range: [
        1314,
        1315,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 36,
      first_column: 55,
      last_line: 36,
      last_column: 56,
      range: [
        1315,
        1316,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 36,
      first_column: 56,
      last_line: 36,
      last_column: 57,
      range: [
        1316,
        1317,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^\\\\\\"\\r\\n',
    yylloc: {
      first_line: 36,
      first_column: 57,
      last_line: 36,
      last_column: 66,
      range: [
        1317,
        1326,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 36,
      first_column: 66,
      last_line: 36,
      last_column: 67,
      range: [
        1326,
        1327,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 36,
      first_column: 67,
      last_line: 36,
      last_column: 68,
      range: [
        1327,
        1328,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 36,
      first_column: 68,
      last_line: 36,
      last_column: 69,
      range: [
        1328,
        1329,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 36,
      first_column: 69,
      last_line: 36,
      last_column: 69,
      range: [
        1329,
        1329,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'ES2017_STRING_CONTENT',
    yylloc: {
      first_line: 38,
      first_column: 0,
      last_line: 38,
      last_column: 21,
      range: [
        1397,
        1418,
      ],
    },
  },
  {
    id: 43,
    token: '"SPECIAL_GROUP"',
    yytext: '(?:',
    yylloc: {
      first_line: 38,
      first_column: 40,
      last_line: 38,
      last_column: 43,
      range: [
        1437,
        1440,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\\\',
    yylloc: {
      first_line: 38,
      first_column: 43,
      last_line: 38,
      last_column: 45,
      range: [
        1440,
        1442,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '`',
    yylloc: {
      first_line: 38,
      first_column: 45,
      last_line: 38,
      last_column: 47,
      range: [
        1442,
        1444,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 38,
      first_column: 47,
      last_line: 38,
      last_column: 48,
      range: [
        1444,
        1445,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\\\',
    yylloc: {
      first_line: 38,
      first_column: 48,
      last_line: 38,
      last_column: 50,
      range: [
        1445,
        1447,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 38,
      first_column: 50,
      last_line: 38,
      last_column: 51,
      range: [
        1447,
        1448,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^\\`',
    yylloc: {
      first_line: 38,
      first_column: 51,
      last_line: 38,
      last_column: 54,
      range: [
        1448,
        1451,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 38,
      first_column: 54,
      last_line: 38,
      last_column: 55,
      range: [
        1451,
        1452,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 38,
      first_column: 55,
      last_line: 38,
      last_column: 56,
      range: [
        1452,
        1453,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 38,
      first_column: 56,
      last_line: 38,
      last_column: 57,
      range: [
        1453,
        1454,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^\\\\\\`',
    yylloc: {
      first_line: 38,
      first_column: 57,
      last_line: 38,
      last_column: 62,
      range: [
        1454,
        1459,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 38,
      first_column: 62,
      last_line: 38,
      last_column: 63,
      range: [
        1459,
        1460,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 38,
      first_column: 63,
      last_line: 38,
      last_column: 64,
      range: [
        1460,
        1461,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 38,
      first_column: 64,
      last_line: 38,
      last_column: 65,
      range: [
        1461,
        1462,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 38,
      first_column: 65,
      last_line: 38,
      last_column: 65,
      range: [
        1462,
        1462,
      ],
    },
  },
  {
    id: 20,
    token: '"MACRO_NAME"',
    yytext: 'ANY_LITERAL_CHAR',
    yylloc: {
      first_line: 42,
      first_column: 0,
      last_line: 42,
      last_column: 16,
      range: [
        1571,
        1587,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 42,
      first_column: 40,
      last_line: 42,
      last_column: 41,
      range: [
        1611,
        1612,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^\\s\\r\\n<>\\[\\]()',
    yylloc: {
      first_line: 42,
      first_column: 41,
      last_line: 42,
      last_column: 56,
      range: [
        1612,
        1627,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '{',
    yylloc: {
      first_line: 42,
      first_column: 56,
      last_line: 42,
      last_column: 57,
      range: [
        1627,
        1628,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '}.*+?:!=|%\\/\\\\^$,\\\'\\"\\`;',
    yylloc: {
      first_line: 42,
      first_column: 57,
      last_line: 42,
      last_column: 81,
      range: [
        1628,
        1652,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 42,
      first_column: 81,
      last_line: 42,
      last_column: 82,
      range: [
        1652,
        1653,
      ],
    },
  },
  {
    id: 21,
    token: '"MACRO_END"',
    yytext: '',
    yylloc: {
      first_line: 42,
      first_column: 82,
      last_line: 42,
      last_column: 82,
      range: [
        1653,
        1653,
      ],
    },
  },
  {
    id: 31,
    token: '"START_INC"',
    yytext: '%s',
    yylloc: {
      first_line: 46,
      first_column: 0,
      last_line: 46,
      last_column: 2,
      range: [
        1657,
        1659,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'rules',
    yylloc: {
      first_line: 46,
      first_column: 3,
      last_line: 46,
      last_column: 8,
      range: [
        1660,
        1665,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'macro',
    yylloc: {
      first_line: 46,
      first_column: 9,
      last_line: 46,
      last_column: 14,
      range: [
        1666,
        1671,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 46,
      first_column: 14,
      last_line: 46,
      last_column: 14,
      range: [
        1671,
        1671,
      ],
    },
  },
  {
    id: 32,
    token: '"START_EXC"',
    yytext: '%x',
    yylloc: {
      first_line: 47,
      first_column: 0,
      last_line: 47,
      last_column: 2,
      range: [
        1672,
        1674,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'code',
    yylloc: {
      first_line: 47,
      first_column: 3,
      last_line: 47,
      last_column: 7,
      range: [
        1675,
        1679,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'options',
    yylloc: {
      first_line: 47,
      first_column: 8,
      last_line: 47,
      last_column: 15,
      range: [
        1680,
        1687,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'action',
    yylloc: {
      first_line: 47,
      first_column: 16,
      last_line: 47,
      last_column: 22,
      range: [
        1688,
        1694,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'set',
    yylloc: {
      first_line: 47,
      first_column: 23,
      last_line: 47,
      last_column: 26,
      range: [
        1695,
        1698,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 47,
      first_column: 26,
      last_line: 47,
      last_column: 26,
      range: [
        1698,
        1698,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%options',
    yylloc: {
      first_line: 51,
      first_column: 0,
      last_line: 51,
      last_column: 8,
      range: [
        1702,
        1710,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'easy_keyword_rules',
    yylloc: {
      first_line: 51,
      first_column: 9,
      last_line: 51,
      last_column: 27,
      range: [
        1711,
        1729,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 51,
      first_column: 27,
      last_line: 51,
      last_column: 27,
      range: [
        1729,
        1729,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%options',
    yylloc: {
      first_line: 52,
      first_column: 0,
      last_line: 52,
      last_column: 8,
      range: [
        1730,
        1738,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'ranges',
    yylloc: {
      first_line: 52,
      first_column: 9,
      last_line: 52,
      last_column: 15,
      range: [
        1739,
        1745,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 52,
      first_column: 15,
      last_line: 52,
      last_column: 15,
      range: [
        1745,
        1745,
      ],
    },
  },
  {
    id: 27,
    token: '"OPTIONS"',
    yytext: '%options',
    yylloc: {
      first_line: 53,
      first_column: 0,
      last_line: 53,
      last_column: 8,
      range: [
        1746,
        1754,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'xregexp',
    yylloc: {
      first_line: 53,
      first_column: 9,
      last_line: 53,
      last_column: 16,
      range: [
        1755,
        1762,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 53,
      first_column: 16,
      last_line: 53,
      last_column: 16,
      range: [
        1762,
        1762,
      ],
    },
  },
  {
    id: 33,
    token: '"%%"',
    yytext: '%%',
    yylloc: {
      first_line: 57,
      first_column: 0,
      last_line: 57,
      last_column: 2,
      range: [
        1766,
        1768,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 61,
      first_column: 0,
      last_line: 61,
      last_column: 1,
      range: [
        1859,
        1860,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'INITIAL',
    yylloc: {
      first_line: 61,
      first_column: 1,
      last_line: 61,
      last_column: 8,
      range: [
        1860,
        1867,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 61,
      first_column: 8,
      last_line: 61,
      last_column: 9,
      range: [
        1867,
        1868,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'macro',
    yylloc: {
      first_line: 61,
      first_column: 9,
      last_line: 61,
      last_column: 14,
      range: [
        1868,
        1873,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 61,
      first_column: 14,
      last_line: 61,
      last_column: 15,
      range: [
        1873,
        1874,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'options',
    yylloc: {
      first_line: 61,
      first_column: 15,
      last_line: 61,
      last_column: 22,
      range: [
        1874,
        1881,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 61,
      first_column: 22,
      last_line: 61,
      last_column: 23,
      range: [
        1881,
        1882,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'rules',
    yylloc: {
      first_line: 61,
      first_column: 23,
      last_line: 61,
      last_column: 28,
      range: [
        1882,
        1887,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 61,
      first_column: 28,
      last_line: 61,
      last_column: 28,
      range: [
        1887,
        1887,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 61,
      first_column: 28,
      last_line: 61,
      last_column: 29,
      range: [
        1887,
        1888,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"//"',
    yylloc: {
      first_line: 61,
      first_column: 29,
      last_line: 61,
      last_column: 33,
      range: [
        1888,
        1892,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 61,
      first_column: 33,
      last_line: 61,
      last_column: 34,
      range: [
        1892,
        1893,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^\\r\\n',
    yylloc: {
      first_line: 61,
      first_column: 34,
      last_line: 61,
      last_column: 39,
      range: [
        1893,
        1898,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 61,
      first_column: 39,
      last_line: 61,
      last_column: 40,
      range: [
        1898,
        1899,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 61,
      first_column: 40,
      last_line: 61,
      last_column: 41,
      range: [
        1899,
        1900,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                        ',
    yylloc: {
      first_line: 62,
      first_column: 0,
      last_line: 62,
      last_column: 40,
      range: [
        1901,
        1941,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '/* skip single-line comment */',
    yylloc: {
      first_line: 62,
      first_column: 40,
      last_line: 62,
      last_column: 70,
      range: [
        1941,
        1971,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 62,
      first_column: 70,
      last_line: 62,
      last_column: 70,
      range: [
        1971,
        1971,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 63,
      first_column: 0,
      last_line: 63,
      last_column: 1,
      range: [
        1972,
        1973,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'INITIAL',
    yylloc: {
      first_line: 63,
      first_column: 1,
      last_line: 63,
      last_column: 8,
      range: [
        1973,
        1980,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 63,
      first_column: 8,
      last_line: 63,
      last_column: 9,
      range: [
        1980,
        1981,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'macro',
    yylloc: {
      first_line: 63,
      first_column: 9,
      last_line: 63,
      last_column: 14,
      range: [
        1981,
        1986,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 63,
      first_column: 14,
      last_line: 63,
      last_column: 15,
      range: [
        1986,
        1987,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'options',
    yylloc: {
      first_line: 63,
      first_column: 15,
      last_line: 63,
      last_column: 22,
      range: [
        1987,
        1994,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 63,
      first_column: 22,
      last_line: 63,
      last_column: 23,
      range: [
        1994,
        1995,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'rules',
    yylloc: {
      first_line: 63,
      first_column: 23,
      last_line: 63,
      last_column: 28,
      range: [
        1995,
        2000,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 63,
      first_column: 28,
      last_line: 63,
      last_column: 28,
      range: [
        2000,
        2000,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 63,
      first_column: 28,
      last_line: 63,
      last_column: 29,
      range: [
        2000,
        2001,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"/*"',
    yylloc: {
      first_line: 63,
      first_column: 29,
      last_line: 63,
      last_column: 33,
      range: [
        2001,
        2005,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 63,
      first_column: 33,
      last_line: 63,
      last_column: 34,
      range: [
        2005,
        2006,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^',
    yylloc: {
      first_line: 63,
      first_column: 34,
      last_line: 63,
      last_column: 35,
      range: [
        2006,
        2007,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 63,
      first_column: 35,
      last_line: 63,
      last_column: 36,
      range: [
        2007,
        2008,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 63,
      first_column: 36,
      last_line: 63,
      last_column: 37,
      range: [
        2008,
        2009,
      ],
    },
  },
  {
    id: 12,
    token: '"?"',
    yytext: '?',
    yylloc: {
      first_line: 63,
      first_column: 37,
      last_line: 63,
      last_column: 38,
      range: [
        2009,
        2010,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"*/"',
    yylloc: {
      first_line: 63,
      first_column: 38,
      last_line: 63,
      last_column: 42,
      range: [
        2010,
        2014,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                        ',
    yylloc: {
      first_line: 64,
      first_column: 0,
      last_line: 64,
      last_column: 40,
      range: [
        2015,
        2055,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '/* skip multi-line comment */',
    yylloc: {
      first_line: 64,
      first_column: 40,
      last_line: 64,
      last_column: 69,
      range: [
        2055,
        2084,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 64,
      first_column: 69,
      last_line: 64,
      last_column: 69,
      range: [
        2084,
        2084,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 68,
      first_column: 0,
      last_line: 68,
      last_column: 1,
      range: [
        2164,
        2165,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'action',
    yylloc: {
      first_line: 68,
      first_column: 1,
      last_line: 68,
      last_column: 7,
      range: [
        2165,
        2171,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 68,
      first_column: 7,
      last_line: 68,
      last_column: 7,
      range: [
        2171,
        2171,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 68,
      first_column: 7,
      last_line: 68,
      last_column: 8,
      range: [
        2171,
        2172,
      ],
    },
  },
  {
    id: 4,
    token: '"{"',
    yytext: '{',
    yylloc: {
      first_line: 68,
      first_column: 8,
      last_line: 68,
      last_column: 9,
      range: [
        2172,
        2173,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%include"',
    yylloc: {
      first_line: 118,
      first_column: 0,
      last_line: 118,
      last_column: 10,
      range: [
        4291,
        4301,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                              ',
    yylloc: {
      first_line: 118,
      first_column: 10,
      last_line: 118,
      last_column: 40,
      range: [
        4301,
        4331,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'if (yy.include_command_allowed) ',
    yylloc: {
      first_line: 118,
      first_column: 40,
      last_line: 118,
      last_column: 72,
      range: [
        4331,
        4363,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '{',
    yylloc: {
      first_line: 118,
      first_column: 72,
      last_line: 118,
      last_column: 73,
      range: [
        4363,
        4364,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 118,
      first_column: 73,
      last_line: 119,
      last_column: 44,
      range: [
        4364,
        4409,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// This is an include instruction in place of (part of) an action:',
    yylloc: {
      first_line: 119,
      first_column: 44,
      last_line: 119,
      last_column: 110,
      range: [
        4409,
        4475,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 119,
      first_column: 110,
      last_line: 120,
      last_column: 44,
      range: [
        4475,
        4520,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 120,
      first_column: 44,
      last_line: 120,
      last_column: 59,
      range: [
        4520,
        4535,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'options'",
    yylloc: {
      first_line: 120,
      first_column: 59,
      last_line: 120,
      last_column: 68,
      range: [
        4535,
        4544,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 120,
      first_column: 68,
      last_line: 120,
      last_column: 70,
      range: [
        4544,
        4546,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 120,
      first_column: 70,
      last_line: 121,
      last_column: 44,
      range: [
        4546,
        4591,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 121,
      first_column: 44,
      last_line: 121,
      last_column: 51,
      range: [
        4591,
        4598,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'INCLUDE'",
    yylloc: {
      first_line: 121,
      first_column: 51,
      last_line: 121,
      last_column: 60,
      range: [
        4598,
        4607,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 121,
      first_column: 60,
      last_line: 121,
      last_column: 61,
      range: [
        4607,
        4608,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 121,
      first_column: 61,
      last_line: 122,
      last_column: 40,
      range: [
        4608,
        4649,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '}',
    yylloc: {
      first_line: 122,
      first_column: 40,
      last_line: 122,
      last_column: 41,
      range: [
        4649,
        4650,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ' else ',
    yylloc: {
      first_line: 122,
      first_column: 41,
      last_line: 122,
      last_column: 47,
      range: [
        4650,
        4656,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '{',
    yylloc: {
      first_line: 122,
      first_column: 47,
      last_line: 122,
      last_column: 48,
      range: [
        4656,
        4657,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 122,
      first_column: 48,
      last_line: 123,
      last_column: 44,
      range: [
        4657,
        4702,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// TODO',
    yylloc: {
      first_line: 123,
      first_column: 44,
      last_line: 123,
      last_column: 51,
      range: [
        4702,
        4709,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 123,
      first_column: 51,
      last_line: 124,
      last_column: 44,
      range: [
        4709,
        4754,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 124,
      first_column: 44,
      last_line: 124,
      last_column: 62,
      range: [
        4754,
        4772,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                                %include statements must occur on a line on their own and cannot occur inside an action code block.
                                                Its use is not permitted at this position.

                                                  Erroneous area:
                                                ${this.prettyPrintRange(yylloc)}
                                            \``,
    yylloc: {
      first_line: 124,
      first_column: 62,
      last_line: 130,
      last_column: 45,
      range: [
        4772,
        5206,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 130,
      first_column: 45,
      last_line: 130,
      last_column: 47,
      range: [
        5206,
        5208,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 130,
      first_column: 47,
      last_line: 131,
      last_column: 44,
      range: [
        5208,
        5253,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 131,
      first_column: 44,
      last_line: 131,
      last_column: 51,
      range: [
        5253,
        5260,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'INCLUDE_PLACEMENT_ERROR'",
    yylloc: {
      first_line: 131,
      first_column: 51,
      last_line: 131,
      last_column: 76,
      range: [
        5260,
        5285,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 131,
      first_column: 76,
      last_line: 131,
      last_column: 77,
      range: [
        5285,
        5286,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 131,
      first_column: 77,
      last_line: 132,
      last_column: 40,
      range: [
        5286,
        5327,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '}',
    yylloc: {
      first_line: 132,
      first_column: 40,
      last_line: 132,
      last_column: 41,
      range: [
        5327,
        5328,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 132,
      first_column: 41,
      last_line: 132,
      last_column: 41,
      range: [
        5328,
        5328,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"/*"',
    yylloc: {
      first_line: 134,
      first_column: 0,
      last_line: 134,
      last_column: 4,
      range: [
        5330,
        5334,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 134,
      first_column: 4,
      last_line: 134,
      last_column: 5,
      range: [
        5334,
        5335,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^',
    yylloc: {
      first_line: 134,
      first_column: 5,
      last_line: 134,
      last_column: 6,
      range: [
        5335,
        5336,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 134,
      first_column: 6,
      last_line: 134,
      last_column: 7,
      range: [
        5336,
        5337,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 134,
      first_column: 7,
      last_line: 134,
      last_column: 8,
      range: [
        5337,
        5338,
      ],
    },
  },
  {
    id: 12,
    token: '"?"',
    yytext: '?',
    yylloc: {
      first_line: 134,
      first_column: 8,
      last_line: 134,
      last_column: 9,
      range: [
        5338,
        5339,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"*/"',
    yylloc: {
      first_line: 134,
      first_column: 9,
      last_line: 134,
      last_column: 13,
      range: [
        5339,
        5343,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                           ',
    yylloc: {
      first_line: 134,
      first_column: 13,
      last_line: 134,
      last_column: 40,
      range: [
        5343,
        5370,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "//yy.include_command_allowed = false; -- doesn't impact include-allowed state",
    yylloc: {
      first_line: 134,
      first_column: 40,
      last_line: 134,
      last_column: 117,
      range: [
        5370,
        5447,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 134,
      first_column: 117,
      last_line: 135,
      last_column: 40,
      range: [
        5447,
        5488,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 135,
      first_column: 40,
      last_line: 135,
      last_column: 47,
      range: [
        5488,
        5495,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_BODY'",
    yylloc: {
      first_line: 135,
      first_column: 47,
      last_line: 135,
      last_column: 60,
      range: [
        5495,
        5508,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 135,
      first_column: 60,
      last_line: 135,
      last_column: 61,
      range: [
        5508,
        5509,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 135,
      first_column: 61,
      last_line: 135,
      last_column: 61,
      range: [
        5509,
        5509,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"//"',
    yylloc: {
      first_line: 136,
      first_column: 0,
      last_line: 136,
      last_column: 4,
      range: [
        5510,
        5514,
      ],
    },
  },
  {
    id: 15,
    token: '"."',
    yytext: '.',
    yylloc: {
      first_line: 136,
      first_column: 4,
      last_line: 136,
      last_column: 5,
      range: [
        5514,
        5515,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 136,
      first_column: 5,
      last_line: 136,
      last_column: 6,
      range: [
        5515,
        5516,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                  ',
    yylloc: {
      first_line: 136,
      first_column: 6,
      last_line: 136,
      last_column: 40,
      range: [
        5516,
        5550,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.include_command_allowed = false;',
    yylloc: {
      first_line: 136,
      first_column: 40,
      last_line: 136,
      last_column: 75,
      range: [
        5550,
        5585,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 136,
      first_column: 75,
      last_line: 137,
      last_column: 40,
      range: [
        5585,
        5626,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 137,
      first_column: 40,
      last_line: 137,
      last_column: 47,
      range: [
        5626,
        5633,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_BODY'",
    yylloc: {
      first_line: 137,
      first_column: 47,
      last_line: 137,
      last_column: 60,
      range: [
        5633,
        5646,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 137,
      first_column: 60,
      last_line: 137,
      last_column: 61,
      range: [
        5646,
        5647,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 137,
      first_column: 61,
      last_line: 137,
      last_column: 61,
      range: [
        5647,
        5647,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%%"',
    yylloc: {
      first_line: 141,
      first_column: 0,
      last_line: 141,
      last_column: 4,
      range: [
        5736,
        5740,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                    ',
    yylloc: {
      first_line: 141,
      first_column: 4,
      last_line: 141,
      last_column: 40,
      range: [
        5740,
        5776,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'if (yy.depth === 0) ',
    yylloc: {
      first_line: 141,
      first_column: 40,
      last_line: 141,
      last_column: 60,
      range: [
        5776,
        5796,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '{',
    yylloc: {
      first_line: 141,
      first_column: 60,
      last_line: 141,
      last_column: 61,
      range: [
        5796,
        5797,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 141,
      first_column: 61,
      last_line: 142,
      last_column: 44,
      range: [
        5797,
        5842,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.popState();',
    yylloc: {
      first_line: 142,
      first_column: 44,
      last_line: 142,
      last_column: 60,
      range: [
        5842,
        5858,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 142,
      first_column: 60,
      last_line: 143,
      last_column: 44,
      range: [
        5858,
        5903,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.unput(yytext);',
    yylloc: {
      first_line: 143,
      first_column: 44,
      last_line: 143,
      last_column: 63,
      range: [
        5903,
        5922,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 143,
      first_column: 63,
      last_line: 144,
      last_column: 44,
      range: [
        5922,
        5967,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "// yytext = '';    --- ommitted as this is the side-effect of .unput(yytext) already!",
    yylloc: {
      first_line: 144,
      first_column: 44,
      last_line: 144,
      last_column: 129,
      range: [
        5967,
        6052,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 144,
      first_column: 129,
      last_line: 145,
      last_column: 44,
      range: [
        6052,
        6097,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 145,
      first_column: 44,
      last_line: 145,
      last_column: 51,
      range: [
        6097,
        6104,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_END'",
    yylloc: {
      first_line: 145,
      first_column: 51,
      last_line: 145,
      last_column: 63,
      range: [
        6104,
        6116,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 145,
      first_column: 63,
      last_line: 145,
      last_column: 64,
      range: [
        6116,
        6117,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 145,
      first_column: 64,
      last_line: 146,
      last_column: 40,
      range: [
        6117,
        6158,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '}',
    yylloc: {
      first_line: 146,
      first_column: 40,
      last_line: 146,
      last_column: 41,
      range: [
        6158,
        6159,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ' else ',
    yylloc: {
      first_line: 146,
      first_column: 41,
      last_line: 146,
      last_column: 47,
      range: [
        6159,
        6165,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '{',
    yylloc: {
      first_line: 146,
      first_column: 47,
      last_line: 146,
      last_column: 48,
      range: [
        6165,
        6166,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 146,
      first_column: 48,
      last_line: 147,
      last_column: 44,
      range: [
        6166,
        6211,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 147,
      first_column: 44,
      last_line: 147,
      last_column: 51,
      range: [
        6211,
        6218,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_BODY'",
    yylloc: {
      first_line: 147,
      first_column: 51,
      last_line: 147,
      last_column: 64,
      range: [
        6218,
        6231,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 147,
      first_column: 64,
      last_line: 147,
      last_column: 65,
      range: [
        6231,
        6232,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 147,
      first_column: 65,
      last_line: 148,
      last_column: 40,
      range: [
        6232,
        6273,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '}',
    yylloc: {
      first_line: 148,
      first_column: 40,
      last_line: 148,
      last_column: 41,
      range: [
        6273,
        6274,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 148,
      first_column: 41,
      last_line: 148,
      last_column: 41,
      range: [
        6274,
        6274,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"/"',
    yylloc: {
      first_line: 159,
      first_column: 0,
      last_line: 159,
      last_column: 3,
      range: [
        6662,
        6665,
      ],
    },
  },
  {
    id: 13,
    token: '"/"',
    yytext: '/',
    yylloc: {
      first_line: 159,
      first_column: 3,
      last_line: 159,
      last_column: 4,
      range: [
        6665,
        6666,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\s',
    yylloc: {
      first_line: 159,
      first_column: 4,
      last_line: 159,
      last_column: 6,
      range: [
        6666,
        6668,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                  ',
    yylloc: {
      first_line: 159,
      first_column: 6,
      last_line: 159,
      last_column: 40,
      range: [
        6668,
        6702,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 159,
      first_column: 40,
      last_line: 159,
      last_column: 47,
      range: [
        6702,
        6709,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_BODY'",
    yylloc: {
      first_line: 159,
      first_column: 47,
      last_line: 159,
      last_column: 60,
      range: [
        6709,
        6722,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';       ',
    yylloc: {
      first_line: 159,
      first_column: 60,
      last_line: 159,
      last_column: 68,
      range: [
        6722,
        6730,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// most probably a `/` divide operator.',
    yylloc: {
      first_line: 159,
      first_column: 68,
      last_line: 159,
      last_column: 107,
      range: [
        6730,
        6769,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 159,
      first_column: 107,
      last_line: 159,
      last_column: 107,
      range: [
        6769,
        6769,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"/"',
    yylloc: {
      first_line: 160,
      first_column: 0,
      last_line: 160,
      last_column: 3,
      range: [
        6770,
        6773,
      ],
    },
  },
  {
    id: 15,
    token: '"."',
    yytext: '.',
    yylloc: {
      first_line: 160,
      first_column: 3,
      last_line: 160,
      last_column: 4,
      range: [
        6773,
        6774,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 160,
      first_column: 4,
      last_line: 160,
      last_column: 5,
      range: [
        6774,
        6775,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                        ',
    yylloc: {
      first_line: 161,
      first_column: 0,
      last_line: 161,
      last_column: 40,
      range: [
        6776,
        6816,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.include_command_allowed = false;',
    yylloc: {
      first_line: 161,
      first_column: 40,
      last_line: 161,
      last_column: 75,
      range: [
        6816,
        6851,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 161,
      first_column: 75,
      last_line: 162,
      last_column: 40,
      range: [
        6851,
        6892,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'let l = scanRegExp(yytext);',
    yylloc: {
      first_line: 162,
      first_column: 40,
      last_line: 162,
      last_column: 67,
      range: [
        6892,
        6919,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 162,
      first_column: 67,
      last_line: 163,
      last_column: 40,
      range: [
        6919,
        6960,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'if (l > 0) ',
    yylloc: {
      first_line: 163,
      first_column: 40,
      last_line: 163,
      last_column: 51,
      range: [
        6960,
        6971,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '{',
    yylloc: {
      first_line: 163,
      first_column: 51,
      last_line: 163,
      last_column: 52,
      range: [
        6971,
        6972,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 163,
      first_column: 52,
      last_line: 164,
      last_column: 44,
      range: [
        6972,
        7017,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.unput(yytext.substring(l));',
    yylloc: {
      first_line: 164,
      first_column: 44,
      last_line: 164,
      last_column: 76,
      range: [
        7017,
        7049,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 164,
      first_column: 76,
      last_line: 165,
      last_column: 44,
      range: [
        7049,
        7094,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yytext = yytext.substring(0, l);',
    yylloc: {
      first_line: 165,
      first_column: 44,
      last_line: 165,
      last_column: 76,
      range: [
        7094,
        7126,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 165,
      first_column: 76,
      last_line: 166,
      last_column: 40,
      range: [
        7126,
        7167,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '}',
    yylloc: {
      first_line: 166,
      first_column: 40,
      last_line: 166,
      last_column: 41,
      range: [
        7167,
        7168,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ' else ',
    yylloc: {
      first_line: 166,
      first_column: 41,
      last_line: 166,
      last_column: 47,
      range: [
        7168,
        7174,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '{',
    yylloc: {
      first_line: 166,
      first_column: 47,
      last_line: 166,
      last_column: 48,
      range: [
        7174,
        7175,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 166,
      first_column: 48,
      last_line: 167,
      last_column: 44,
      range: [
        7175,
        7220,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "// assume it's a division operator:",
    yylloc: {
      first_line: 167,
      first_column: 44,
      last_line: 167,
      last_column: 79,
      range: [
        7220,
        7255,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 167,
      first_column: 79,
      last_line: 168,
      last_column: 44,
      range: [
        7255,
        7300,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.unput(yytext.substring(1));',
    yylloc: {
      first_line: 168,
      first_column: 44,
      last_line: 168,
      last_column: 76,
      range: [
        7300,
        7332,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 168,
      first_column: 76,
      last_line: 169,
      last_column: 44,
      range: [
        7332,
        7377,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yytext = yytext[0];',
    yylloc: {
      first_line: 169,
      first_column: 44,
      last_line: 169,
      last_column: 63,
      range: [
        7377,
        7396,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 169,
      first_column: 63,
      last_line: 170,
      last_column: 40,
      range: [
        7396,
        7437,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '}',
    yylloc: {
      first_line: 170,
      first_column: 40,
      last_line: 170,
      last_column: 41,
      range: [
        7437,
        7438,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 170,
      first_column: 41,
      last_line: 171,
      last_column: 40,
      range: [
        7438,
        7479,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 171,
      first_column: 40,
      last_line: 171,
      last_column: 47,
      range: [
        7479,
        7486,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_BODY'",
    yylloc: {
      first_line: 171,
      first_column: 47,
      last_line: 171,
      last_column: 60,
      range: [
        7486,
        7499,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 171,
      first_column: 60,
      last_line: 171,
      last_column: 61,
      range: [
        7499,
        7500,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 171,
      first_column: 61,
      last_line: 171,
      last_column: 61,
      range: [
        7500,
        7500,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '"',
    yylloc: {
      first_line: 173,
      first_column: 0,
      last_line: 173,
      last_column: 2,
      range: [
        7502,
        7504,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{DOUBLEQUOTED_STRING_CONTENT}',
    yylloc: {
      first_line: 173,
      first_column: 2,
      last_line: 173,
      last_column: 31,
      range: [
        7504,
        7533,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '"',
    yylloc: {
      first_line: 173,
      first_column: 31,
      last_line: 173,
      last_column: 33,
      range: [
        7533,
        7535,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 173,
      first_column: 36,
      last_line: 173,
      last_column: 37,
      range: [
        7538,
        7539,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: "'",
    yylloc: {
      first_line: 174,
      first_column: 0,
      last_line: 174,
      last_column: 2,
      range: [
        7540,
        7542,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{QUOTED_STRING_CONTENT}',
    yylloc: {
      first_line: 174,
      first_column: 2,
      last_line: 174,
      last_column: 25,
      range: [
        7542,
        7565,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: "'",
    yylloc: {
      first_line: 174,
      first_column: 25,
      last_line: 174,
      last_column: 27,
      range: [
        7565,
        7567,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 174,
      first_column: 36,
      last_line: 174,
      last_column: 37,
      range: [
        7576,
        7577,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '`',
    yylloc: {
      first_line: 175,
      first_column: 0,
      last_line: 175,
      last_column: 2,
      range: [
        7578,
        7580,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ES2017_STRING_CONTENT}',
    yylloc: {
      first_line: 175,
      first_column: 2,
      last_line: 175,
      last_column: 25,
      range: [
        7580,
        7603,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '`',
    yylloc: {
      first_line: 175,
      first_column: 25,
      last_line: 175,
      last_column: 27,
      range: [
        7603,
        7605,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                        ',
    yylloc: {
      first_line: 176,
      first_column: 0,
      last_line: 176,
      last_column: 40,
      range: [
        7606,
        7646,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.include_command_allowed = false;',
    yylloc: {
      first_line: 176,
      first_column: 40,
      last_line: 176,
      last_column: 75,
      range: [
        7646,
        7681,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 176,
      first_column: 75,
      last_line: 177,
      last_column: 40,
      range: [
        7681,
        7722,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 177,
      first_column: 40,
      last_line: 177,
      last_column: 47,
      range: [
        7722,
        7729,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_BODY'",
    yylloc: {
      first_line: 177,
      first_column: 47,
      last_line: 177,
      last_column: 60,
      range: [
        7729,
        7742,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 177,
      first_column: 60,
      last_line: 177,
      last_column: 61,
      range: [
        7742,
        7743,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 177,
      first_column: 61,
      last_line: 177,
      last_column: 61,
      range: [
        7743,
        7743,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 184,
      first_column: 0,
      last_line: 184,
      last_column: 1,
      range: [
        8070,
        8071,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^/"\'`\\{\\}',
    yylloc: {
      first_line: 184,
      first_column: 1,
      last_line: 184,
      last_column: 10,
      range: [
        8071,
        8080,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 184,
      first_column: 10,
      last_line: 184,
      last_column: 14,
      range: [
        8080,
        8084,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 184,
      first_column: 14,
      last_line: 184,
      last_column: 15,
      range: [
        8084,
        8085,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 184,
      first_column: 15,
      last_line: 184,
      last_column: 16,
      range: [
        8085,
        8086,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                        ',
    yylloc: {
      first_line: 184,
      first_column: 16,
      last_line: 184,
      last_column: 40,
      range: [
        8086,
        8110,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.include_command_allowed = false;',
    yylloc: {
      first_line: 184,
      first_column: 40,
      last_line: 184,
      last_column: 75,
      range: [
        8110,
        8145,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 184,
      first_column: 75,
      last_line: 185,
      last_column: 40,
      range: [
        8145,
        8186,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 185,
      first_column: 40,
      last_line: 185,
      last_column: 47,
      range: [
        8186,
        8193,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_BODY'",
    yylloc: {
      first_line: 185,
      first_column: 47,
      last_line: 185,
      last_column: 60,
      range: [
        8193,
        8206,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 185,
      first_column: 60,
      last_line: 185,
      last_column: 61,
      range: [
        8206,
        8207,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 185,
      first_column: 61,
      last_line: 185,
      last_column: 61,
      range: [
        8207,
        8207,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"{"',
    yylloc: {
      first_line: 187,
      first_column: 0,
      last_line: 187,
      last_column: 3,
      range: [
        8209,
        8212,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 187,
      first_column: 3,
      last_line: 187,
      last_column: 40,
      range: [
        8212,
        8249,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.depth++;',
    yylloc: {
      first_line: 187,
      first_column: 40,
      last_line: 187,
      last_column: 51,
      range: [
        8249,
        8260,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 187,
      first_column: 51,
      last_line: 188,
      last_column: 40,
      range: [
        8260,
        8301,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.include_command_allowed = false;',
    yylloc: {
      first_line: 188,
      first_column: 40,
      last_line: 188,
      last_column: 75,
      range: [
        8301,
        8336,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 188,
      first_column: 75,
      last_line: 189,
      last_column: 40,
      range: [
        8336,
        8377,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 189,
      first_column: 40,
      last_line: 189,
      last_column: 47,
      range: [
        8377,
        8384,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_BODY'",
    yylloc: {
      first_line: 189,
      first_column: 47,
      last_line: 189,
      last_column: 60,
      range: [
        8384,
        8397,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 189,
      first_column: 60,
      last_line: 189,
      last_column: 61,
      range: [
        8397,
        8398,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 189,
      first_column: 61,
      last_line: 189,
      last_column: 61,
      range: [
        8398,
        8398,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"}"',
    yylloc: {
      first_line: 190,
      first_column: 0,
      last_line: 190,
      last_column: 3,
      range: [
        8399,
        8402,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 190,
      first_column: 3,
      last_line: 190,
      last_column: 40,
      range: [
        8402,
        8439,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.include_command_allowed = false;',
    yylloc: {
      first_line: 190,
      first_column: 40,
      last_line: 190,
      last_column: 75,
      range: [
        8439,
        8474,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 190,
      first_column: 75,
      last_line: 191,
      last_column: 40,
      range: [
        8474,
        8515,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'if (yy.depth <= 0) ',
    yylloc: {
      first_line: 191,
      first_column: 40,
      last_line: 191,
      last_column: 59,
      range: [
        8515,
        8534,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '{',
    yylloc: {
      first_line: 191,
      first_column: 59,
      last_line: 191,
      last_column: 60,
      range: [
        8534,
        8535,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 191,
      first_column: 60,
      last_line: 192,
      last_column: 44,
      range: [
        8535,
        8580,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 192,
      first_column: 44,
      last_line: 192,
      last_column: 62,
      range: [
        8580,
        8598,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                                too many closing curly braces in lexer rule action block.

                                                Note: the action code chunk may be too complex for jison to parse
                                                easily; we suggest you wrap the action code chunk in '%{...%}'
                                                to help jison grok more or less complex action code chunks.

                                                  Erroneous area:
                                                ${this.prettyPrintRange(yylloc)}
                                            \``,
    yylloc: {
      first_line: 192,
      first_column: 62,
      last_line: 201,
      last_column: 45,
      range: [
        8598,
        9233,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 201,
      first_column: 45,
      last_line: 201,
      last_column: 47,
      range: [
        9233,
        9235,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 201,
      first_column: 47,
      last_line: 202,
      last_column: 44,
      range: [
        9235,
        9280,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 202,
      first_column: 44,
      last_line: 202,
      last_column: 51,
      range: [
        9280,
        9287,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'BRACKET_SURPLUS'",
    yylloc: {
      first_line: 202,
      first_column: 51,
      last_line: 202,
      last_column: 68,
      range: [
        9287,
        9304,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 202,
      first_column: 68,
      last_line: 202,
      last_column: 69,
      range: [
        9304,
        9305,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 202,
      first_column: 69,
      last_line: 203,
      last_column: 40,
      range: [
        9305,
        9346,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '}',
    yylloc: {
      first_line: 203,
      first_column: 40,
      last_line: 203,
      last_column: 41,
      range: [
        9346,
        9347,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ' else ',
    yylloc: {
      first_line: 203,
      first_column: 41,
      last_line: 203,
      last_column: 47,
      range: [
        9347,
        9353,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '{',
    yylloc: {
      first_line: 203,
      first_column: 47,
      last_line: 203,
      last_column: 48,
      range: [
        9353,
        9354,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 203,
      first_column: 48,
      last_line: 204,
      last_column: 44,
      range: [
        9354,
        9399,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.depth--;',
    yylloc: {
      first_line: 204,
      first_column: 44,
      last_line: 204,
      last_column: 55,
      range: [
        9399,
        9410,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 204,
      first_column: 55,
      last_line: 205,
      last_column: 40,
      range: [
        9410,
        9451,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '}',
    yylloc: {
      first_line: 205,
      first_column: 40,
      last_line: 205,
      last_column: 41,
      range: [
        9451,
        9452,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 205,
      first_column: 41,
      last_line: 206,
      last_column: 40,
      range: [
        9452,
        9493,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 206,
      first_column: 40,
      last_line: 206,
      last_column: 47,
      range: [
        9493,
        9500,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_BODY'",
    yylloc: {
      first_line: 206,
      first_column: 47,
      last_line: 206,
      last_column: 60,
      range: [
        9500,
        9513,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 206,
      first_column: 60,
      last_line: 206,
      last_column: 61,
      range: [
        9513,
        9514,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 206,
      first_column: 61,
      last_line: 206,
      last_column: 61,
      range: [
        9514,
        9514,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 219,
      first_column: 0,
      last_line: 219,
      last_column: 4,
      range: [
        10153,
        10157,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{WS}',
    yylloc: {
      first_line: 219,
      first_column: 4,
      last_line: 219,
      last_column: 8,
      range: [
        10157,
        10161,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 219,
      first_column: 8,
      last_line: 219,
      last_column: 9,
      range: [
        10161,
        10162,
      ],
    },
  },
  {
    id: 44,
    token: '"/!"',
    yytext: '/!',
    yylloc: {
      first_line: 219,
      first_column: 9,
      last_line: 219,
      last_column: 11,
      range: [
        10162,
        10164,
      ],
    },
  },
  {
    id: 43,
    token: '"SPECIAL_GROUP"',
    yytext: '(?:',
    yylloc: {
      first_line: 219,
      first_column: 11,
      last_line: 219,
      last_column: 14,
      range: [
        10164,
        10167,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{WS}',
    yylloc: {
      first_line: 219,
      first_column: 14,
      last_line: 219,
      last_column: 18,
      range: [
        10167,
        10171,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 219,
      first_column: 18,
      last_line: 219,
      last_column: 19,
      range: [
        10171,
        10172,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 219,
      first_column: 19,
      last_line: 219,
      last_column: 23,
      range: [
        10172,
        10176,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 219,
      first_column: 23,
      last_line: 219,
      last_column: 24,
      range: [
        10176,
        10177,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                        ',
    yylloc: {
      first_line: 220,
      first_column: 0,
      last_line: 220,
      last_column: 40,
      range: [
        10178,
        10218,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.include_command_allowed = true;',
    yylloc: {
      first_line: 220,
      first_column: 40,
      last_line: 220,
      last_column: 74,
      range: [
        10218,
        10252,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 220,
      first_column: 74,
      last_line: 221,
      last_column: 40,
      range: [
        10252,
        10293,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 221,
      first_column: 40,
      last_line: 221,
      last_column: 47,
      range: [
        10293,
        10300,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_BODY'",
    yylloc: {
      first_line: 221,
      first_column: 47,
      last_line: 221,
      last_column: 60,
      range: [
        10300,
        10313,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';           ',
    yylloc: {
      first_line: 221,
      first_column: 60,
      last_line: 221,
      last_column: 72,
      range: [
        10313,
        10325,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// keep empty lines as-is inside action code blocks.',
    yylloc: {
      first_line: 221,
      first_column: 72,
      last_line: 221,
      last_column: 124,
      range: [
        10325,
        10377,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 221,
      first_column: 124,
      last_line: 221,
      last_column: 124,
      range: [
        10377,
        10377,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{WS}',
    yylloc: {
      first_line: 223,
      first_column: 0,
      last_line: 223,
      last_column: 4,
      range: [
        10379,
        10383,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 223,
      first_column: 4,
      last_line: 223,
      last_column: 5,
      range: [
        10383,
        10384,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                   ',
    yylloc: {
      first_line: 223,
      first_column: 5,
      last_line: 223,
      last_column: 40,
      range: [
        10384,
        10419,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 223,
      first_column: 40,
      last_line: 223,
      last_column: 47,
      range: [
        10419,
        10426,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_BODY'",
    yylloc: {
      first_line: 223,
      first_column: 47,
      last_line: 223,
      last_column: 60,
      range: [
        10426,
        10439,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 223,
      first_column: 60,
      last_line: 223,
      last_column: 61,
      range: [
        10439,
        10440,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 223,
      first_column: 61,
      last_line: 223,
      last_column: 61,
      range: [
        10440,
        10440,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 225,
      first_column: 0,
      last_line: 225,
      last_column: 4,
      range: [
        10442,
        10446,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                    ',
    yylloc: {
      first_line: 225,
      first_column: 4,
      last_line: 225,
      last_column: 40,
      range: [
        10446,
        10482,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'if (yy.depth > 0) ',
    yylloc: {
      first_line: 225,
      first_column: 40,
      last_line: 225,
      last_column: 58,
      range: [
        10482,
        10500,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '{',
    yylloc: {
      first_line: 225,
      first_column: 58,
      last_line: 225,
      last_column: 59,
      range: [
        10500,
        10501,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 225,
      first_column: 59,
      last_line: 226,
      last_column: 44,
      range: [
        10501,
        10546,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.include_command_allowed = true;',
    yylloc: {
      first_line: 226,
      first_column: 44,
      last_line: 226,
      last_column: 78,
      range: [
        10546,
        10580,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 226,
      first_column: 78,
      last_line: 227,
      last_column: 44,
      range: [
        10580,
        10625,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 227,
      first_column: 44,
      last_line: 227,
      last_column: 51,
      range: [
        10625,
        10632,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_BODY'",
    yylloc: {
      first_line: 227,
      first_column: 51,
      last_line: 227,
      last_column: 64,
      range: [
        10632,
        10645,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';       ',
    yylloc: {
      first_line: 227,
      first_column: 64,
      last_line: 227,
      last_column: 72,
      range: [
        10645,
        10653,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// keep empty lines as-is inside action code blocks.',
    yylloc: {
      first_line: 227,
      first_column: 72,
      last_line: 227,
      last_column: 124,
      range: [
        10653,
        10705,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 227,
      first_column: 124,
      last_line: 228,
      last_column: 40,
      range: [
        10705,
        10746,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '}',
    yylloc: {
      first_line: 228,
      first_column: 40,
      last_line: 228,
      last_column: 41,
      range: [
        10746,
        10747,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ' else ',
    yylloc: {
      first_line: 228,
      first_column: 41,
      last_line: 228,
      last_column: 47,
      range: [
        10747,
        10753,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '{',
    yylloc: {
      first_line: 228,
      first_column: 47,
      last_line: 228,
      last_column: 48,
      range: [
        10753,
        10754,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 228,
      first_column: 48,
      last_line: 229,
      last_column: 44,
      range: [
        10754,
        10799,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// end of action code chunk; allow parent mode to see this mode-terminating linebreak too.',
    yylloc: {
      first_line: 229,
      first_column: 44,
      last_line: 229,
      last_column: 134,
      range: [
        10799,
        10889,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 229,
      first_column: 134,
      last_line: 230,
      last_column: 44,
      range: [
        10889,
        10934,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.popState();',
    yylloc: {
      first_line: 230,
      first_column: 44,
      last_line: 230,
      last_column: 60,
      range: [
        10934,
        10950,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 230,
      first_column: 60,
      last_line: 231,
      last_column: 44,
      range: [
        10950,
        10995,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.unput(yytext);',
    yylloc: {
      first_line: 231,
      first_column: 44,
      last_line: 231,
      last_column: 63,
      range: [
        10995,
        11014,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 231,
      first_column: 63,
      last_line: 232,
      last_column: 44,
      range: [
        11014,
        11059,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "// yytext = '';    --- ommitted as this is the side-effect of .unput(yytext) already!",
    yylloc: {
      first_line: 232,
      first_column: 44,
      last_line: 232,
      last_column: 129,
      range: [
        11059,
        11144,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 232,
      first_column: 129,
      last_line: 233,
      last_column: 44,
      range: [
        11144,
        11189,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 233,
      first_column: 44,
      last_line: 233,
      last_column: 51,
      range: [
        11189,
        11196,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_END'",
    yylloc: {
      first_line: 233,
      first_column: 51,
      last_line: 233,
      last_column: 63,
      range: [
        11196,
        11208,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 233,
      first_column: 63,
      last_line: 233,
      last_column: 64,
      range: [
        11208,
        11209,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 233,
      first_column: 64,
      last_line: 234,
      last_column: 40,
      range: [
        11209,
        11250,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '}',
    yylloc: {
      first_line: 234,
      first_column: 40,
      last_line: 234,
      last_column: 41,
      range: [
        11250,
        11251,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 234,
      first_column: 41,
      last_line: 234,
      last_column: 41,
      range: [
        11251,
        11251,
      ],
    },
  },
  {
    id: 17,
    token: '"$"',
    yytext: '<<EOF>>',
    yylloc: {
      first_line: 235,
      first_column: 0,
      last_line: 235,
      last_column: 7,
      range: [
        11252,
        11259,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                 ',
    yylloc: {
      first_line: 235,
      first_column: 7,
      last_line: 235,
      last_column: 40,
      range: [
        11259,
        11292,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.include_command_allowed = false;',
    yylloc: {
      first_line: 235,
      first_column: 40,
      last_line: 235,
      last_column: 75,
      range: [
        11292,
        11327,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 235,
      first_column: 75,
      last_line: 236,
      last_column: 40,
      range: [
        11327,
        11368,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'if (yy.depth !== 0) ',
    yylloc: {
      first_line: 236,
      first_column: 40,
      last_line: 236,
      last_column: 60,
      range: [
        11368,
        11388,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '{',
    yylloc: {
      first_line: 236,
      first_column: 60,
      last_line: 236,
      last_column: 61,
      range: [
        11388,
        11389,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 236,
      first_column: 61,
      last_line: 237,
      last_column: 44,
      range: [
        11389,
        11434,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 237,
      first_column: 44,
      last_line: 237,
      last_column: 62,
      range: [
        11434,
        11452,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                                missing ${yy.depth} closing curly braces in lexer rule action block.

                                                Note: the action code chunk may be too complex for jison to parse
                                                easily; we suggest you wrap the action code chunk in '%{...%}'
                                                to help jison grok more or less complex action code chunks.

                                                  Erroneous area:
                                                ${this.prettyPrintRange(yylloc)}
                                            \``,
    yylloc: {
      first_line: 237,
      first_column: 62,
      last_line: 246,
      last_column: 45,
      range: [
        11452,
        12098,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 246,
      first_column: 45,
      last_line: 246,
      last_column: 47,
      range: [
        12098,
        12100,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 246,
      first_column: 47,
      last_line: 247,
      last_column: 44,
      range: [
        12100,
        12145,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 247,
      first_column: 44,
      last_line: 247,
      last_column: 51,
      range: [
        12145,
        12152,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'BRACKET_MISSING'",
    yylloc: {
      first_line: 247,
      first_column: 51,
      last_line: 247,
      last_column: 68,
      range: [
        12152,
        12169,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 247,
      first_column: 68,
      last_line: 247,
      last_column: 69,
      range: [
        12169,
        12170,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 247,
      first_column: 69,
      last_line: 248,
      last_column: 40,
      range: [
        12170,
        12211,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '}',
    yylloc: {
      first_line: 248,
      first_column: 40,
      last_line: 248,
      last_column: 41,
      range: [
        12211,
        12212,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 248,
      first_column: 41,
      last_line: 249,
      last_column: 40,
      range: [
        12212,
        12253,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.popState();',
    yylloc: {
      first_line: 249,
      first_column: 40,
      last_line: 249,
      last_column: 56,
      range: [
        12253,
        12269,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 249,
      first_column: 56,
      last_line: 250,
      last_column: 40,
      range: [
        12269,
        12310,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yytext = ',
    yylloc: {
      first_line: 250,
      first_column: 40,
      last_line: 250,
      last_column: 49,
      range: [
        12310,
        12319,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "''",
    yylloc: {
      first_line: 250,
      first_column: 49,
      last_line: 250,
      last_column: 51,
      range: [
        12319,
        12321,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 250,
      first_column: 51,
      last_line: 250,
      last_column: 52,
      range: [
        12321,
        12322,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 250,
      first_column: 52,
      last_line: 251,
      last_column: 40,
      range: [
        12322,
        12363,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 251,
      first_column: 40,
      last_line: 251,
      last_column: 47,
      range: [
        12363,
        12370,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_END'",
    yylloc: {
      first_line: 251,
      first_column: 47,
      last_line: 251,
      last_column: 59,
      range: [
        12370,
        12382,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 251,
      first_column: 59,
      last_line: 251,
      last_column: 60,
      range: [
        12382,
        12383,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 251,
      first_column: 60,
      last_line: 251,
      last_column: 60,
      range: [
        12383,
        12383,
      ],
    },
  },
  {
    id: 5,
    token: '"}"',
    yytext: '}',
    yylloc: {
      first_line: 253,
      first_column: 0,
      last_line: 253,
      last_column: 1,
      range: [
        12385,
        12386,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 331,
      first_column: 0,
      last_line: 331,
      last_column: 1,
      range: [
        15650,
        15651,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'INITIAL',
    yylloc: {
      first_line: 331,
      first_column: 1,
      last_line: 331,
      last_column: 8,
      range: [
        15651,
        15658,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 331,
      first_column: 8,
      last_line: 331,
      last_column: 9,
      range: [
        15658,
        15659,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'rules',
    yylloc: {
      first_line: 331,
      first_column: 9,
      last_line: 331,
      last_column: 14,
      range: [
        15659,
        15664,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 331,
      first_column: 14,
      last_line: 331,
      last_column: 15,
      range: [
        15664,
        15665,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'code',
    yylloc: {
      first_line: 331,
      first_column: 15,
      last_line: 331,
      last_column: 19,
      range: [
        15665,
        15669,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 331,
      first_column: 19,
      last_line: 331,
      last_column: 20,
      range: [
        15669,
        15670,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'options',
    yylloc: {
      first_line: 331,
      first_column: 20,
      last_line: 331,
      last_column: 27,
      range: [
        15670,
        15677,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 331,
      first_column: 27,
      last_line: 331,
      last_column: 27,
      range: [
        15677,
        15677,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 331,
      first_column: 27,
      last_line: 331,
      last_column: 28,
      range: [
        15677,
        15678,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 331,
      first_column: 28,
      last_line: 331,
      last_column: 29,
      range: [
        15678,
        15679,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '%\\{',
    yylloc: {
      first_line: 331,
      first_column: 29,
      last_line: 331,
      last_column: 32,
      range: [
        15679,
        15682,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 331,
      first_column: 32,
      last_line: 331,
      last_column: 33,
      range: [
        15682,
        15683,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\{',
    yylloc: {
      first_line: 331,
      first_column: 33,
      last_line: 331,
      last_column: 35,
      range: [
        15683,
        15685,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 331,
      first_column: 35,
      last_line: 331,
      last_column: 36,
      range: [
        15685,
        15686,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '{',
    yylloc: {
      first_line: 332,
      first_column: 0,
      last_line: 332,
      last_column: 36,
      range: [
        15687,
        15723,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '{',
    yylloc: {
      first_line: 332,
      first_column: 36,
      last_line: 332,
      last_column: 37,
      range: [
        15723,
        15724,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 332,
      first_column: 37,
      last_line: 333,
      last_column: 40,
      range: [
        15724,
        15765,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.depth = 0;',
    yylloc: {
      first_line: 333,
      first_column: 40,
      last_line: 333,
      last_column: 53,
      range: [
        15765,
        15778,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 333,
      first_column: 53,
      last_line: 334,
      last_column: 40,
      range: [
        15778,
        15819,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.include_command_allowed = false;',
    yylloc: {
      first_line: 334,
      first_column: 40,
      last_line: 334,
      last_column: 75,
      range: [
        15819,
        15854,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 334,
      first_column: 75,
      last_line: 335,
      last_column: 40,
      range: [
        15854,
        15895,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `//this.pushState('action');   <-- not needed as we'll consume the entire action code chunk all at once in here`,
    yylloc: {
      first_line: 335,
      first_column: 40,
      last_line: 335,
      last_column: 150,
      range: [
        15895,
        16005,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n',
    yylloc: {
      first_line: 335,
      first_column: 150,
      last_line: 336,
      last_column: 0,
      range: [
        16005,
        16006,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 336,
      first_column: 0,
      last_line: 337,
      last_column: 40,
      range: [
        16006,
        16047,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'let marker = yytext;',
    yylloc: {
      first_line: 337,
      first_column: 40,
      last_line: 337,
      last_column: 60,
      range: [
        16047,
        16067,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n',
    yylloc: {
      first_line: 337,
      first_column: 60,
      last_line: 338,
      last_column: 0,
      range: [
        16067,
        16068,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 338,
      first_column: 0,
      last_line: 339,
      last_column: 40,
      range: [
        16068,
        16109,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// check whether this `%{` marker was located at the start of the line:',
    yylloc: {
      first_line: 339,
      first_column: 40,
      last_line: 339,
      last_column: 111,
      range: [
        16109,
        16180,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 339,
      first_column: 111,
      last_line: 340,
      last_column: 40,
      range: [
        16180,
        16221,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "// if it is, we treat it as a different token to signal the grammar we've",
    yylloc: {
      first_line: 340,
      first_column: 40,
      last_line: 340,
      last_column: 113,
      range: [
        16221,
        16294,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 340,
      first_column: 113,
      last_line: 341,
      last_column: 40,
      range: [
        16294,
        16335,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// got an action which stands on its own, i.e. is not a rule action, %code',
    yylloc: {
      first_line: 341,
      first_column: 40,
      last_line: 341,
      last_column: 114,
      range: [
        16335,
        16409,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 341,
      first_column: 114,
      last_line: 342,
      last_column: 40,
      range: [
        16409,
        16450,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// section, etc...',
    yylloc: {
      first_line: 342,
      first_column: 40,
      last_line: 342,
      last_column: 58,
      range: [
        16450,
        16468,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 342,
      first_column: 58,
      last_line: 343,
      last_column: 40,
      range: [
        16468,
        16509,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "//let precedingStr = this.pastInput(1,2).replace(/[\\r\\n]/g, '\\n');",
    yylloc: {
      first_line: 343,
      first_column: 40,
      last_line: 343,
      last_column: 106,
      range: [
        16509,
        16575,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 343,
      first_column: 106,
      last_line: 344,
      last_column: 40,
      range: [
        16575,
        16616,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '//let precedingStr = this.matched.substr(-this.match.length - 1, 1);',
    yylloc: {
      first_line: 344,
      first_column: 40,
      last_line: 344,
      last_column: 108,
      range: [
        16616,
        16684,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 344,
      first_column: 108,
      last_line: 345,
      last_column: 40,
      range: [
        16684,
        16725,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'let precedingStr = this.matched[this.matched.length - this.match.length - 1];',
    yylloc: {
      first_line: 345,
      first_column: 40,
      last_line: 345,
      last_column: 117,
      range: [
        16725,
        16802,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n',
    yylloc: {
      first_line: 345,
      first_column: 117,
      last_line: 346,
      last_column: 0,
      range: [
        16802,
        16803,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 346,
      first_column: 0,
      last_line: 347,
      last_column: 40,
      range: [
        16803,
        16844,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'let atSOL = (!precedingStr ',
    yylloc: {
      first_line: 347,
      first_column: 40,
      last_line: 347,
      last_column: 67,
      range: [
        16844,
        16871,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '/* @ Start Of File */',
    yylloc: {
      first_line: 347,
      first_column: 67,
      last_line: 347,
      last_column: 88,
      range: [
        16871,
        16892,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ' || precedingStr === ',
    yylloc: {
      first_line: 347,
      first_column: 88,
      last_line: 347,
      last_column: 109,
      range: [
        16892,
        16913,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'\\n'",
    yylloc: {
      first_line: 347,
      first_column: 109,
      last_line: 347,
      last_column: 113,
      range: [
        16913,
        16917,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 347,
      first_column: 113,
      last_line: 347,
      last_column: 115,
      range: [
        16917,
        16919,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n',
    yylloc: {
      first_line: 347,
      first_column: 115,
      last_line: 348,
      last_column: 0,
      range: [
        16919,
        16920,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 348,
      first_column: 0,
      last_line: 349,
      last_column: 40,
      range: [
        16920,
        16961,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// Construct the proper lexer regex for any possible `%{...%}`, `{{...}}` or what have we here?',
    yylloc: {
      first_line: 349,
      first_column: 40,
      last_line: 349,
      last_column: 135,
      range: [
        16961,
        17056,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 349,
      first_column: 135,
      last_line: 350,
      last_column: 40,
      range: [
        17056,
        17097,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'const match = helpers.setupDelimitedActionChunkMatcher(marker, this);',
    yylloc: {
      first_line: 350,
      first_column: 40,
      last_line: 350,
      last_column: 109,
      range: [
        17097,
        17166,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n',
    yylloc: {
      first_line: 350,
      first_column: 109,
      last_line: 351,
      last_column: 0,
      range: [
        17166,
        17167,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 351,
      first_column: 0,
      last_line: 352,
      last_column: 40,
      range: [
        17167,
        17208,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// Writing the wrong end marker is a common user mistake, we can',
    yylloc: {
      first_line: 352,
      first_column: 40,
      last_line: 352,
      last_column: 104,
      range: [
        17208,
        17272,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 352,
      first_column: 104,
      last_line: 353,
      last_column: 40,
      range: [
        17272,
        17313,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// easily look ahead and check for it now and report a proper hint',
    yylloc: {
      first_line: 353,
      first_column: 40,
      last_line: 353,
      last_column: 106,
      range: [
        17313,
        17379,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 353,
      first_column: 106,
      last_line: 354,
      last_column: 40,
      range: [
        17379,
        17420,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// to cover this failure mode in a more helpful manner.',
    yylloc: {
      first_line: 354,
      first_column: 40,
      last_line: 354,
      last_column: 95,
      range: [
        17420,
        17475,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 354,
      first_column: 95,
      last_line: 355,
      last_column: 40,
      range: [
        17475,
        17516,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'let remaining = this.lookAhead();',
    yylloc: {
      first_line: 355,
      first_column: 40,
      last_line: 355,
      last_column: 73,
      range: [
        17516,
        17549,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 355,
      first_column: 73,
      last_line: 356,
      last_column: 40,
      range: [
        17549,
        17590,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'let m = match(remaining);',
    yylloc: {
      first_line: 356,
      first_column: 40,
      last_line: 356,
      last_column: 65,
      range: [
        17590,
        17615,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n',
    yylloc: {
      first_line: 356,
      first_column: 65,
      last_line: 357,
      last_column: 0,
      range: [
        17615,
        17616,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 357,
      first_column: 0,
      last_line: 358,
      last_column: 40,
      range: [
        17616,
        17657,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// move the lexer position forward as well:',
    yylloc: {
      first_line: 358,
      first_column: 40,
      last_line: 358,
      last_column: 83,
      range: [
        17657,
        17700,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 358,
      first_column: 83,
      last_line: 359,
      last_column: 40,
      range: [
        17700,
        17741,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '//',
    yylloc: {
      first_line: 359,
      first_column: 40,
      last_line: 359,
      last_column: 42,
      range: [
        17741,
        17743,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 359,
      first_column: 42,
      last_line: 360,
      last_column: 40,
      range: [
        17743,
        17784,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// WARNING: this will modity yytext, hence we must set our own `yytext`',
    yylloc: {
      first_line: 360,
      first_column: 40,
      last_line: 360,
      last_column: 111,
      range: [
        17784,
        17855,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 360,
      first_column: 111,
      last_line: 361,
      last_column: 40,
      range: [
        17855,
        17896,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// *afterwards*: see the statement after next!',
    yylloc: {
      first_line: 361,
      first_column: 40,
      last_line: 361,
      last_column: 86,
      range: [
        17896,
        17942,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 361,
      first_column: 86,
      last_line: 362,
      last_column: 40,
      range: [
        17942,
        17983,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.consume(m.shiftCount);',
    yylloc: {
      first_line: 362,
      first_column: 40,
      last_line: 362,
      last_column: 67,
      range: [
        17983,
        18010,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n',
    yylloc: {
      first_line: 362,
      first_column: 67,
      last_line: 363,
      last_column: 0,
      range: [
        18010,
        18011,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 363,
      first_column: 0,
      last_line: 364,
      last_column: 40,
      range: [
        18011,
        18052,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// pick up the extraced action block itself:',
    yylloc: {
      first_line: 364,
      first_column: 40,
      last_line: 364,
      last_column: 84,
      range: [
        18052,
        18096,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 364,
      first_column: 84,
      last_line: 365,
      last_column: 40,
      range: [
        18096,
        18137,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yytext = m;',
    yylloc: {
      first_line: 365,
      first_column: 40,
      last_line: 365,
      last_column: 51,
      range: [
        18137,
        18148,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n',
    yylloc: {
      first_line: 365,
      first_column: 51,
      last_line: 366,
      last_column: 0,
      range: [
        18148,
        18149,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 366,
      first_column: 0,
      last_line: 367,
      last_column: 40,
      range: [
        18149,
        18190,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'if (m.fault) ',
    yylloc: {
      first_line: 367,
      first_column: 40,
      last_line: 367,
      last_column: 53,
      range: [
        18190,
        18203,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '{',
    yylloc: {
      first_line: 367,
      first_column: 53,
      last_line: 367,
      last_column: 54,
      range: [
        18203,
        18204,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 367,
      first_column: 54,
      last_line: 368,
      last_column: 44,
      range: [
        18204,
        18249,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 368,
      first_column: 44,
      last_line: 368,
      last_column: 62,
      range: [
        18249,
        18267,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                                ${m.fault}

                                                  Erroneous area:
                                                ${this.prettyPrintRange(yylloc)}
                                            \``,
    yylloc: {
      first_line: 368,
      first_column: 62,
      last_line: 373,
      last_column: 45,
      range: [
        18267,
        18521,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 373,
      first_column: 45,
      last_line: 373,
      last_column: 47,
      range: [
        18521,
        18523,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 373,
      first_column: 47,
      last_line: 374,
      last_column: 44,
      range: [
        18523,
        18568,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 374,
      first_column: 44,
      last_line: 374,
      last_column: 51,
      range: [
        18568,
        18575,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'UNTERMINATED_ACTION_BLOCK'",
    yylloc: {
      first_line: 374,
      first_column: 51,
      last_line: 374,
      last_column: 78,
      range: [
        18575,
        18602,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 374,
      first_column: 78,
      last_line: 374,
      last_column: 79,
      range: [
        18602,
        18603,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 374,
      first_column: 79,
      last_line: 375,
      last_column: 40,
      range: [
        18603,
        18644,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '}',
    yylloc: {
      first_line: 375,
      first_column: 40,
      last_line: 375,
      last_column: 41,
      range: [
        18644,
        18645,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n',
    yylloc: {
      first_line: 375,
      first_column: 41,
      last_line: 376,
      last_column: 0,
      range: [
        18645,
        18646,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 376,
      first_column: 0,
      last_line: 377,
      last_column: 40,
      range: [
        18646,
        18687,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'if (atSOL) ',
    yylloc: {
      first_line: 377,
      first_column: 40,
      last_line: 377,
      last_column: 51,
      range: [
        18687,
        18698,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '{',
    yylloc: {
      first_line: 377,
      first_column: 51,
      last_line: 377,
      last_column: 52,
      range: [
        18698,
        18699,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                            ',
    yylloc: {
      first_line: 377,
      first_column: 52,
      last_line: 378,
      last_column: 44,
      range: [
        18699,
        18744,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 378,
      first_column: 44,
      last_line: 378,
      last_column: 51,
      range: [
        18744,
        18751,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ENTIRE_ACTION_AT_SOL'",
    yylloc: {
      first_line: 378,
      first_column: 51,
      last_line: 378,
      last_column: 73,
      range: [
        18751,
        18773,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 378,
      first_column: 73,
      last_line: 378,
      last_column: 74,
      range: [
        18773,
        18774,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 378,
      first_column: 74,
      last_line: 379,
      last_column: 40,
      range: [
        18774,
        18815,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '}',
    yylloc: {
      first_line: 379,
      first_column: 40,
      last_line: 379,
      last_column: 41,
      range: [
        18815,
        18816,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 379,
      first_column: 41,
      last_line: 380,
      last_column: 40,
      range: [
        18816,
        18857,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 380,
      first_column: 40,
      last_line: 380,
      last_column: 47,
      range: [
        18857,
        18864,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ENTIRE_ACTION'",
    yylloc: {
      first_line: 380,
      first_column: 47,
      last_line: 380,
      last_column: 62,
      range: [
        18864,
        18879,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 380,
      first_column: 62,
      last_line: 380,
      last_column: 63,
      range: [
        18879,
        18880,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                    ',
    yylloc: {
      first_line: 380,
      first_column: 63,
      last_line: 381,
      last_column: 36,
      range: [
        18880,
        18917,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '}',
    yylloc: {
      first_line: 381,
      first_column: 36,
      last_line: 381,
      last_column: 37,
      range: [
        18917,
        18918,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 381,
      first_column: 37,
      last_line: 381,
      last_column: 37,
      range: [
        18918,
        18918,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"->"',
    yylloc: {
      first_line: 384,
      first_column: 0,
      last_line: 384,
      last_column: 4,
      range: [
        18921,
        18925,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                    ',
    yylloc: {
      first_line: 384,
      first_column: 4,
      last_line: 384,
      last_column: 40,
      range: [
        18925,
        18961,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.depth = 0;',
    yylloc: {
      first_line: 384,
      first_column: 40,
      last_line: 384,
      last_column: 53,
      range: [
        18961,
        18974,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 384,
      first_column: 53,
      last_line: 385,
      last_column: 40,
      range: [
        18974,
        19015,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.include_command_allowed = false;',
    yylloc: {
      first_line: 385,
      first_column: 40,
      last_line: 385,
      last_column: 75,
      range: [
        19015,
        19050,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 385,
      first_column: 75,
      last_line: 386,
      last_column: 40,
      range: [
        19050,
        19091,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 386,
      first_column: 40,
      last_line: 386,
      last_column: 55,
      range: [
        19091,
        19106,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'action'",
    yylloc: {
      first_line: 386,
      first_column: 55,
      last_line: 386,
      last_column: 63,
      range: [
        19106,
        19114,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 386,
      first_column: 63,
      last_line: 386,
      last_column: 65,
      range: [
        19114,
        19116,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 386,
      first_column: 65,
      last_line: 387,
      last_column: 40,
      range: [
        19116,
        19157,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 387,
      first_column: 40,
      last_line: 387,
      last_column: 47,
      range: [
        19157,
        19164,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ARROW_ACTION_START'",
    yylloc: {
      first_line: 387,
      first_column: 47,
      last_line: 387,
      last_column: 67,
      range: [
        19164,
        19184,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 387,
      first_column: 67,
      last_line: 387,
      last_column: 68,
      range: [
        19184,
        19185,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 387,
      first_column: 68,
      last_line: 387,
      last_column: 68,
      range: [
        19185,
        19185,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"→"',
    yylloc: {
      first_line: 388,
      first_column: 0,
      last_line: 388,
      last_column: 3,
      range: [
        19186,
        19189,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 388,
      first_column: 3,
      last_line: 388,
      last_column: 40,
      range: [
        19189,
        19226,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.depth = 0;',
    yylloc: {
      first_line: 388,
      first_column: 40,
      last_line: 388,
      last_column: 53,
      range: [
        19226,
        19239,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 388,
      first_column: 53,
      last_line: 389,
      last_column: 40,
      range: [
        19239,
        19280,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.include_command_allowed = false;',
    yylloc: {
      first_line: 389,
      first_column: 40,
      last_line: 389,
      last_column: 75,
      range: [
        19280,
        19315,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 389,
      first_column: 75,
      last_line: 390,
      last_column: 40,
      range: [
        19315,
        19356,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 390,
      first_column: 40,
      last_line: 390,
      last_column: 55,
      range: [
        19356,
        19371,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'action'",
    yylloc: {
      first_line: 390,
      first_column: 55,
      last_line: 390,
      last_column: 63,
      range: [
        19371,
        19379,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 390,
      first_column: 63,
      last_line: 390,
      last_column: 65,
      range: [
        19379,
        19381,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 390,
      first_column: 65,
      last_line: 391,
      last_column: 40,
      range: [
        19381,
        19422,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 391,
      first_column: 40,
      last_line: 391,
      last_column: 47,
      range: [
        19422,
        19429,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ARROW_ACTION_START'",
    yylloc: {
      first_line: 391,
      first_column: 47,
      last_line: 391,
      last_column: 67,
      range: [
        19429,
        19449,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 391,
      first_column: 67,
      last_line: 391,
      last_column: 68,
      range: [
        19449,
        19450,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 391,
      first_column: 68,
      last_line: 391,
      last_column: 68,
      range: [
        19450,
        19450,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"=>"',
    yylloc: {
      first_line: 392,
      first_column: 0,
      last_line: 392,
      last_column: 4,
      range: [
        19451,
        19455,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                    ',
    yylloc: {
      first_line: 392,
      first_column: 4,
      last_line: 392,
      last_column: 40,
      range: [
        19455,
        19491,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.depth = 0;',
    yylloc: {
      first_line: 392,
      first_column: 40,
      last_line: 392,
      last_column: 53,
      range: [
        19491,
        19504,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 392,
      first_column: 53,
      last_line: 393,
      last_column: 40,
      range: [
        19504,
        19545,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.include_command_allowed = false;',
    yylloc: {
      first_line: 393,
      first_column: 40,
      last_line: 393,
      last_column: 75,
      range: [
        19545,
        19580,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 393,
      first_column: 75,
      last_line: 394,
      last_column: 40,
      range: [
        19580,
        19621,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 394,
      first_column: 40,
      last_line: 394,
      last_column: 55,
      range: [
        19621,
        19636,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'action'",
    yylloc: {
      first_line: 394,
      first_column: 55,
      last_line: 394,
      last_column: 63,
      range: [
        19636,
        19644,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 394,
      first_column: 63,
      last_line: 394,
      last_column: 65,
      range: [
        19644,
        19646,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 394,
      first_column: 65,
      last_line: 395,
      last_column: 40,
      range: [
        19646,
        19687,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 395,
      first_column: 40,
      last_line: 395,
      last_column: 47,
      range: [
        19687,
        19694,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ARROW_ACTION_START'",
    yylloc: {
      first_line: 395,
      first_column: 47,
      last_line: 395,
      last_column: 67,
      range: [
        19694,
        19714,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 395,
      first_column: 67,
      last_line: 395,
      last_column: 68,
      range: [
        19714,
        19715,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 395,
      first_column: 68,
      last_line: 395,
      last_column: 68,
      range: [
        19715,
        19715,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 444,
      first_column: 0,
      last_line: 444,
      last_column: 1,
      range: [
        22574,
        22575,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'rules',
    yylloc: {
      first_line: 444,
      first_column: 1,
      last_line: 444,
      last_column: 6,
      range: [
        22575,
        22580,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 444,
      first_column: 6,
      last_line: 444,
      last_column: 6,
      range: [
        22580,
        22580,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 444,
      first_column: 6,
      last_line: 444,
      last_column: 7,
      range: [
        22580,
        22581,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{WS}',
    yylloc: {
      first_line: 444,
      first_column: 7,
      last_line: 444,
      last_column: 11,
      range: [
        22581,
        22585,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 444,
      first_column: 11,
      last_line: 444,
      last_column: 12,
      range: [
        22585,
        22586,
      ],
    },
  },
  {
    id: 44,
    token: '"/!"',
    yytext: '/!',
    yylloc: {
      first_line: 444,
      first_column: 12,
      last_line: 444,
      last_column: 14,
      range: [
        22586,
        22588,
      ],
    },
  },
  {
    id: 43,
    token: '"SPECIAL_GROUP"',
    yytext: '(?:',
    yylloc: {
      first_line: 444,
      first_column: 14,
      last_line: 444,
      last_column: 17,
      range: [
        22588,
        22591,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"{{"',
    yylloc: {
      first_line: 444,
      first_column: 17,
      last_line: 444,
      last_column: 21,
      range: [
        22591,
        22595,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 444,
      first_column: 21,
      last_line: 444,
      last_column: 22,
      range: [
        22595,
        22596,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"|"',
    yylloc: {
      first_line: 444,
      first_column: 22,
      last_line: 444,
      last_column: 25,
      range: [
        22596,
        22599,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 444,
      first_column: 25,
      last_line: 444,
      last_column: 26,
      range: [
        22599,
        22600,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%"',
    yylloc: {
      first_line: 444,
      first_column: 26,
      last_line: 444,
      last_column: 29,
      range: [
        22600,
        22603,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 444,
      first_column: 29,
      last_line: 444,
      last_column: 30,
      range: [
        22603,
        22604,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"->"',
    yylloc: {
      first_line: 444,
      first_column: 30,
      last_line: 444,
      last_column: 34,
      range: [
        22604,
        22608,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 444,
      first_column: 34,
      last_line: 444,
      last_column: 35,
      range: [
        22608,
        22609,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"=>"',
    yylloc: {
      first_line: 444,
      first_column: 35,
      last_line: 444,
      last_column: 39,
      range: [
        22609,
        22613,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 444,
      first_column: 39,
      last_line: 444,
      last_column: 40,
      range: [
        22613,
        22614,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"→"',
    yylloc: {
      first_line: 444,
      first_column: 40,
      last_line: 444,
      last_column: 43,
      range: [
        22614,
        22617,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 444,
      first_column: 43,
      last_line: 444,
      last_column: 44,
      range: [
        22617,
        22618,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{WS}',
    yylloc: {
      first_line: 444,
      first_column: 44,
      last_line: 444,
      last_column: 48,
      range: [
        22618,
        22622,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 444,
      first_column: 48,
      last_line: 444,
      last_column: 49,
      range: [
        22622,
        22623,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 444,
      first_column: 49,
      last_line: 444,
      last_column: 53,
      range: [
        22623,
        22627,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 444,
      first_column: 53,
      last_line: 444,
      last_column: 54,
      range: [
        22627,
        22628,
      ],
    },
  },
  {
    id: 23,
    token: '"UNTERMINATED_ACTION_BLOCK"',
    yytext: {
      errStr: `Lexical error on line 510: 
                                                
TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO 

Confusingly terminated action code block. We're expecting the
'}}' end marker to go with the given start marker.
Regrettably, it does not exist in the remainder of the input.


Erroneous area:
                                                442: // Update: when we're inside a *scoped rule block*, then lexer rules MAY be indented!
443: 
444: <rules>{WS}+/!(?:"{{"|"|"|"%"|"->"|"=>"|"→"|{WS}|{BR})
445:                                         {{
^^^..........................................^^
446:                                             // look back beyond match: if this is an *indentation* from the
^^^..^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     (...continued...)
---  (---------------)
509:                                             // else: ignore whitespace before a rule regex: *indentation* in a scope block.
^^^..^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
510:                                         }}
^^^..^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
511: 
512: <rules>"%%"                             this.popState();
`,
      recoverable: false,
      text: `{{
                                            // look back beyond match: if this is an *indentation* from the
                                            // start of the line, then we won't consider this a action code block start
                                            // but rather the start of an *indented* lexer rule regex.
                                            //
                                            // The quickest way to find out if a NL (NewLine) went just before is to
                                            // check our start column in \`yylloc\`.
                                            //
                                            // ## EXTRA ##:
                                            //
                                            // We only permit rule indentation inside a "start condition" scope block.
                                            // 
                                            // > Dev Notes:
                                            // >
                                            // > Allowing it anywhere would permit a lex spec file to look like a total
                                            // > mess. The 0110, etc. tests in /lex-parser/ allow indentation anywhere
                                            // > because we don't have an active parser there, hence the classic yacc/bison
                                            // > style "lexer hack" via the \`yy\` shared instance (\`yy.__inside_scoped_ruleset__\`)
                                            // > will not work in those tests YET.
                                            // > HOWEVER, when you inspect the same tests' results as run in /jison-lex/
                                            // > you'll notice the \`lex.y\` grammar kicking in and rejecting several of 
                                            // > those tests as they contain indented lexer rules WITHOUT an encompassing
                                            // > start condition scope.
                                            // 
                                            // PLUS we apply this HEURISTIC: when the 'indentation level' is TWO TABS or
                                            // 8 SPACES (1 TAB counts for 4 spaces) or more, it's considered as 
                                            // 'double indented' and automatically treated as action block source code.

                                            if (yy.__inside_scoped_ruleset__ === false || yylloc.first_column > 0 || /^ {8}/.test(yytext.replace(/\\t/g, '    '))) {
                                                yy.depth = 0;
                                                yy.include_command_allowed = true;
                                                this.pushState('action');

                                                // Do a bit of magic that's useful for the parser when we
                                                // call \`trimActionCode()\` in there to perform a bit of
                                                // rough initial action code chunk cleanup:
                                                // when we start the action block -- hence *delimit* the
                                                // action block -- with a plain old '{' brace, we can
                                                // throw that one and its counterpart out safely without
                                                // damaging the action code in any way.
                                                //
                                                // In order to be able to detect that, we look ahead
                                                // now and see whether or not the rule's regex with the fancy
                                                // '/!' postcondition check actually hit a '{', which
                                                // is the only action code block starter we cannot
                                                // detect explicitly using any of the '%{.*?%}' lexer
                                                // rules you've seen further above.
                                                //
                                                // Thanks to this rule's regex, we DO know that the
                                                // first look-ahead character will be a non-whitespace
                                                // character, which would either be an action code block
                                                // delimiter *or* a comment starter. In the latter case
                                                // we just throw up our hands and leave code trimming
                                                // and analysis to the more advanced systems which
                                                // follow after \`trimActionCode()\` has passed once we
                                                // get to the parser productions which process this
                                                // upcoming action code block.
                                                let la = this.lookAhead();
                                                if (la[0] === '{') {
                                                    yytext = '{';           // hint the parser
                                                }

                                                return 'ACTION_START';
                                            }
                                            // else: ignore whitespace before a rule regex: *indentation* in a scope block.
                                        }}`,
      token: null,
      line: 509,
      loc: {
        first_line: 445,
        first_column: 40,
        last_line: 510,
        last_column: 42,
        range: [
          22669,
          28347,
        ],
      },
      yy: {
        depth: 0,
        include_command_allowed: false,
        __inside_condition_set__: false,
      },
      lexer: {
        EOF: 1,
        ERROR: 2,
        __error_infos: [
          {
            errStr: `Lexical error on line 510: 
                                                
TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO 

Confusingly terminated action code block. We're expecting the
'}}' end marker to go with the given start marker.
Regrettably, it does not exist in the remainder of the input.


Erroneous area:
                                                442: // Update: when we're inside a *scoped rule block*, then lexer rules MAY be indented!
443: 
444: <rules>{WS}+/!(?:"{{"|"|"|"%"|"->"|"=>"|"→"|{WS}|{BR})
445:                                         {{
^^^..........................................^^
446:                                             // look back beyond match: if this is an *indentation* from the
^^^..^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     (...continued...)
---  (---------------)
509:                                             // else: ignore whitespace before a rule regex: *indentation* in a scope block.
^^^..^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
510:                                         }}
^^^..^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
511: 
512: <rules>"%%"                             this.popState();
`,
            recoverable: false,
            text: `{{
                                            // look back beyond match: if this is an *indentation* from the
                                            // start of the line, then we won't consider this a action code block start
                                            // but rather the start of an *indented* lexer rule regex.
                                            //
                                            // The quickest way to find out if a NL (NewLine) went just before is to
                                            // check our start column in \`yylloc\`.
                                            //
                                            // ## EXTRA ##:
                                            //
                                            // We only permit rule indentation inside a "start condition" scope block.
                                            // 
                                            // > Dev Notes:
                                            // >
                                            // > Allowing it anywhere would permit a lex spec file to look like a total
                                            // > mess. The 0110, etc. tests in /lex-parser/ allow indentation anywhere
                                            // > because we don't have an active parser there, hence the classic yacc/bison
                                            // > style "lexer hack" via the \`yy\` shared instance (\`yy.__inside_scoped_ruleset__\`)
                                            // > will not work in those tests YET.
                                            // > HOWEVER, when you inspect the same tests' results as run in /jison-lex/
                                            // > you'll notice the \`lex.y\` grammar kicking in and rejecting several of 
                                            // > those tests as they contain indented lexer rules WITHOUT an encompassing
                                            // > start condition scope.
                                            // 
                                            // PLUS we apply this HEURISTIC: when the 'indentation level' is TWO TABS or
                                            // 8 SPACES (1 TAB counts for 4 spaces) or more, it's considered as 
                                            // 'double indented' and automatically treated as action block source code.

                                            if (yy.__inside_scoped_ruleset__ === false || yylloc.first_column > 0 || /^ {8}/.test(yytext.replace(/\\t/g, '    '))) {
                                                yy.depth = 0;
                                                yy.include_command_allowed = true;
                                                this.pushState('action');

                                                // Do a bit of magic that's useful for the parser when we
                                                // call \`trimActionCode()\` in there to perform a bit of
                                                // rough initial action code chunk cleanup:
                                                // when we start the action block -- hence *delimit* the
                                                // action block -- with a plain old '{' brace, we can
                                                // throw that one and its counterpart out safely without
                                                // damaging the action code in any way.
                                                //
                                                // In order to be able to detect that, we look ahead
                                                // now and see whether or not the rule's regex with the fancy
                                                // '/!' postcondition check actually hit a '{', which
                                                // is the only action code block starter we cannot
                                                // detect explicitly using any of the '%{.*?%}' lexer
                                                // rules you've seen further above.
                                                //
                                                // Thanks to this rule's regex, we DO know that the
                                                // first look-ahead character will be a non-whitespace
                                                // character, which would either be an action code block
                                                // delimiter *or* a comment starter. In the latter case
                                                // we just throw up our hands and leave code trimming
                                                // and analysis to the more advanced systems which
                                                // follow after \`trimActionCode()\` has passed once we
                                                // get to the parser productions which process this
                                                // upcoming action code block.
                                                let la = this.lookAhead();
                                                if (la[0] === '{') {
                                                    yytext = '{';           // hint the parser
                                                }

                                                return 'ACTION_START';
                                            }
                                            // else: ignore whitespace before a rule regex: *indentation* in a scope block.
                                        }}`,
            token: null,
            line: 509,
            loc: {
              first_line: 445,
              first_column: 40,
              last_line: 510,
              last_column: 42,
              range: [
                22669,
                28347,
              ],
            },
            yy: {
              depth: 0,
              include_command_allowed: false,
              __inside_condition_set__: false,
            },
            lexer: '[lexer]',
            isLexerError: true,
            yyErrorInvoked: true,
            isLexerBacktrackingNotSupportedError: false,
            isLexerInternalError: false,
            extra_error_attributes: null,
            lexerHasAlreadyForwardedCursorBy1: false,
          },
        ],
        __decompressed: true,
        done: true,
        _backtrack: false,
        _input: '',
        _more: false,
        _signaled_error_token: false,
        _clear_state: 0,
        conditionStack: [
          'INITIAL',
          'code',
        ],
        match: '',
        matched: `//
// title: full JISON-GHO lexer spec
// 
// ...
//



%code imports %{
  import helpers from '../helpers-lib';
%}



ASCII_LETTER                            [a-zA-z]
// \\p{Alphabetic} already includes [a-zA-z], hence we don't need to merge
// with {UNICODE_LETTER} (though jison has code to optimize if you *did*
// include the \`[a-zA-Z]\` anyway):
UNICODE_LETTER                          [\\p{Alphabetic}]
ALPHA                                   [{UNICODE_LETTER}_]
DIGIT                                   [\\p{Number}]
WHITESPACE                              [\\s\\r\\n\\p{Separator}]
ALNUM                                   [{ALPHA}{DIGIT}]

NAME                                    [{ALPHA}](?:[{ALNUM}-]*{ALNUM})?
ID                                      [{ALPHA}]{ALNUM}*
DECIMAL_NUMBER                          [1-9][0-9]*
HEX_NUMBER                              "0"[xX][0-9a-fA-F]+
BR                                      \\r\\n|\\n|\\r
// WhiteSpace MUST NOT match CR/LF and the regex \`\\s\` DOES, so we cannot use
// that one directly. Instead we define the {WS} macro here:
WS                                      [^\\S\\r\\n]

// Quoted string content: support *escaped* quotes inside strings:
QUOTED_STRING_CONTENT                   (?:\\\\\\'|\\\\[^\\']|[^\\\\\\'\\r\\n])*
DOUBLEQUOTED_STRING_CONTENT             (?:\\\\\\"|\\\\[^\\"]|[^\\\\\\"\\r\\n])*
// backquoted ES6/ES2017 string templates MAY span multiple lines:
ES2017_STRING_CONTENT                   (?:\\\\\\\`|\\\\[^\\\`]|[^\\\\\\\`])*

// Accept any non-regex-special character as a direct literal without
// the need to put quotes around it:
ANY_LITERAL_CHAR                        [^\\s\\r\\n<>\\[\\](){}.*+?:!=|%\\/\\\\^$,\\'\\"\\\`;]



%s rules macro
%x code options action set



%options easy_keyword_rules
%options ranges
%options xregexp



%%

// Comments should be gobbled and discarded anywhere
// *except* the code/action blocks:
<INITIAL,macro,options,rules>"//"[^\\r\\n]*
                                        /* skip single-line comment */
<INITIAL,macro,options,rules>"/*"[^]*?"*/"
                                        /* skip multi-line comment */


//===================== <action> section start =============================
<action>{

// Here we recognize the action code blocks in a grammar parser spec, including those chunks of
// user-defined action code which are wrapped in \`%{...%}\` or \`{{...}}\`.
//
// These \`%{...%}\` and \`{{...}}\` chunks are special in that *anything
// **except the given 'end marker' (\`%}\` and \`}}\` respectively)** may
// exist within the markers: those contents will be copied verbatim.
//
// Note the 'fringe case' where one or more of those end markers
// is an integral part of your action code: you then have the choice to
// either use the other chunk format *or* not wrap [that part of] your
// code in any special marker block, but rely on the lexer rules for
// parsing a regular \`{...}\` JavaScript code chunk instead.
//
// Thus these won't lex/parse correctly:
//
// \`%{ return '%}'; %}\`
// \`{{ return '{{}}'; }}\`
// \`{{ return '%{ {{ }} %}'; }}\`
//
// while these would:
//
// \`{{ return '%}'; }}\`
// \`%{ return '{{}}'; %}\`
// \`{ return '%{ {{ }} %}'; }\`
// \`{ return '%}'; }\`
// \`{ return '{{}}'; }\`
//
// Since 0.6.5 we also allow another approach, which can be used instead:
// 'repeated \`{\` markers', which is like the \`%{...%}\` and \`{{...}}\` in that
// anything that's not the corresponding end marker is accepted as content
// as far as the lexer is concerned (the parser will want to check the validity
// of the entire action code block before using it as part of the generated
// lexer/parser kernel code though), e.g. these would lex as valid chunks:
//
// \`%{{ return '%}'; %}}\`
// \`{{{ return '{{}}'; }}}\`
// \`{{{ return '%{ {{ }} %}'; }}}\`
// \`%{{{ return ['%}','%}}']; %}}}\`
//
// To speed up the lexer and keep things simple, we test these lexer rules
// *only when we're sure to match them*, while we use an advanced
// feature of the lexer kernel by *generating the proper lexer rule regex on the fly*
// at the moment when we find we need it: for this we employ some
// intimate knowledge of the lexer kernel which will be generated for this
// lexer spec: for this we only the lexer rule for \`%{...%}\` to exist, as
// we will pick up that one and modify it on the fly as the need occurs.
//

"%include"                              if (yy.include_command_allowed) {
                                            // This is an include instruction in place of (part of) an action:
                                            this.pushState('options');
                                            return 'INCLUDE';
                                        } else {
                                            // TODO
                                            yyerror(rmCommonWS\`
                                                %include statements must occur on a line on their own and cannot occur inside an action code block.
                                                Its use is not permitted at this position.

                                                  Erroneous area:
                                                ${this.prettyPrintRange(yylloc)}
                                            \`);
                                            return 'INCLUDE_PLACEMENT_ERROR';
                                        }

"/*"[^]*?"*/"                           //yy.include_command_allowed = false; -- doesn't impact include-allowed state
                                        return 'ACTION_BODY';
"//".*                                  yy.include_command_allowed = false;
                                        return 'ACTION_BODY';

// make sure to terminate before the rule section ends,
// which is announced by \`%%\`:
"%%"                                    if (yy.depth === 0) {
                                            this.popState();
                                            this.unput(yytext);
                                            // yytext = '';    --- ommitted as this is the side-effect of .unput(yytext) already!
                                            return 'ACTION_END';
                                        } else {
                                            return 'ACTION_BODY';
                                        }

// regexp in action code handling:
//
// simply scan using an Esprima-equivalent regex scanner: when the next
// bit turns out to be a regex, assume it is one and pass it on.
//
// To prevent trouble with confusing this with a divide operator,
// only accept regexes which at least start with a non-whitespace
// character, otherwise we can bet it's a divide operator most
// probably.
"/"/\\s                                  return 'ACTION_BODY';       // most probably a \`/\` divide operator.
"/".*
                                        yy.include_command_allowed = false;
                                        let l = scanRegExp(yytext);
                                        if (l > 0) {
                                            this.unput(yytext.substring(l));
                                            yytext = yytext.substring(0, l);
                                        } else {
                                            // assume it's a division operator:
                                            this.unput(yytext.substring(1));
                                            yytext = yytext[0];
                                        }
                                        return 'ACTION_BODY';

\\"{DOUBLEQUOTED_STRING_CONTENT}\\"   |
\\'{QUOTED_STRING_CONTENT}\\'         |
\\\`{ES2017_STRING_CONTENT}\\\`
                                        yy.include_command_allowed = false;
                                        return 'ACTION_BODY';

// Gobble an entire line of code unless there's chance there's
// a regex, string, comment, {...} block start or end brace or sentinel
// in it: then only gobble everything up to that particular
// character and let the lexer handle that one, and what follows,
// in the round. Meanwhile we have us some action code pass on.
[^/"'\`\\{\\}{BR}]+                        yy.include_command_allowed = false;
                                        return 'ACTION_BODY';

"{"                                     yy.depth++;
                                        yy.include_command_allowed = false;
                                        return 'ACTION_BODY';
"}"                                     yy.include_command_allowed = false;
                                        if (yy.depth <= 0) {
                                            yyerror(rmCommonWS\`
                                                too many closing curly braces in lexer rule action block.

                                                Note: the action code chunk may be too complex for jison to parse
                                                easily; we suggest you wrap the action code chunk in '%{...%}'
                                                to help jison grok more or less complex action code chunks.

                                                  Erroneous area:
                                                ${this.prettyPrintRange(yylloc)}
                                            \`);
                                            return 'BRACKET_SURPLUS';
                                        } else {
                                            yy.depth--;
                                        }
                                        return 'ACTION_BODY';

// Note that lexer options & commands should be at the start-of-line, i.e.
// without leading whitespace. The only lexer command which we do accept
// here after the last indent is \`%include\`, which is considered (part
// of) the rule's action code block.
//
// Note that this rule is constructed to detect "some content follows on the next line":
// as long as this condition applies, we assume the action code block is continuing.
// Hence an *empty* line would signal the end of the action code block via the later {BR}
// rule below! 
// That 'empty' separating line which ends the action block MAY contain (trailing) whitespace.
//
{BR}{WS}+/!(?:{WS}|{BR})
                                        yy.include_command_allowed = true;
                                        return 'ACTION_BODY';           // keep empty lines as-is inside action code blocks.

{WS}+                                   return 'ACTION_BODY';

{BR}                                    if (yy.depth > 0) {
                                            yy.include_command_allowed = true;
                                            return 'ACTION_BODY';       // keep empty lines as-is inside action code blocks.
                                        } else {
                                            // end of action code chunk; allow parent mode to see this mode-terminating linebreak too.
                                            this.popState();
                                            this.unput(yytext);
                                            // yytext = '';    --- ommitted as this is the side-effect of .unput(yytext) already!
                                            return 'ACTION_END';
                                        }
<<EOF>>                                 yy.include_command_allowed = false;
                                        if (yy.depth !== 0) {
                                            yyerror(rmCommonWS\`
                                                missing ${yy.depth} closing curly braces in lexer rule action block.

                                                Note: the action code chunk may be too complex for jison to parse
                                                easily; we suggest you wrap the action code chunk in '%{...%}'
                                                to help jison grok more or less complex action code chunks.

                                                  Erroneous area:
                                                ${this.prettyPrintRange(yylloc)}
                                            \`);
                                            return 'BRACKET_MISSING';
                                        }
                                        this.popState();
                                        yytext = '';
                                        return 'ACTION_END';

}
//===================== <action> section end =============================



//
// Recognize any of these action code start markers:
// \`%{\`, \`{{\`, \`%{{\`, \`{{{\`, \`%{{{\`, ...
// and consume the *entire* action code block in one fell swoop.
//
// ---
//
// Here we recognize those action code blocks in a grammar parser spec
// which are wrapped in \`%{...%}\` or \`{{...}}\`.
//
// These \`%{...%}\` and \`{{...}}\` chunks are special in that *anything*
// **except the given 'end marker' (\`%}\` and \`}}\` respectively)** may
// exist within the markers: those contents will be copied verbatim.
//
// Note the 'fringe case' where one or more of those end markers
// is an integral part of your action code: you then have the choice to
// either use the other chunk format *or* not wrap [that part of] your
// code in any special marker block, but rely on the lexer rules for
// parsing a regular \`{...}\` JavaScript code chunk instead.
//
// Thus these won't lex/parse correctly:
//
// \`%{ return '%}'; %}\`
// \`{{ return '{{}}'; }}\`
// \`{{ return '%{ {{ }} %}'; }}\`
//
// while these would:
//
// \`{{ return '%}'; }}\`
// \`%{ return '{{}}'; %}\`
// \`{ return '%{ {{ }} %}'; }\`
// \`{ return '%}'; }\`
// \`{ return '{{}}'; }\`
//
// Since 0.6.5 we also allow another approach, which can be used instead:
// 'repeated \`{\` markers', which is like the \`%{...%}\` and \`{{...}}\` in that
// anything that's not the corresponding end marker is accepted as content
// as far as the lexer is concerned (the parser will want to check the validity
// of the entire action code block before using it as part of the generated
// lexer/parser kernel code though), e.g. these would lex as valid chunks:
//
// \`%{{ return '%}'; %}}\`
// \`{{{ return '{{}}'; }}}\`
// \`{{{ return '%{ {{ }} %}'; }}}\`
// \`%{{{ return ['%}','%}}']; %}}}\`
//
// To speed up the lexer and keep things simple, we test these lexer rules
// *only when we're pretty sure to match them*, where we *generate the 
// proper lexer regex on the fly* at the moment when we find we need it
// by invoking the \`setupDelimitedActionChunkMatcher()\` helpers API.
//
// The \`setupDelimitedActionChunkMatcher()\` API includes caching any 
// generated matcher in the current lexer instance, which persists for 
// the entire lifetime of the lexer instance. Thus, once generated, each 
// matcher will be available very quickly every time it is requested.
//
// The 0.7.0 lexer kernel includes a new \`consume(N)\` API, which helps 
// to advance the internal state (yylloc, etc.) once we have extracted
// the code chunk we seek, further simplifying the approach where a
// lexer rule regex is used to recognize the 'leader'/'heading' of a
// text chunk, where the action code then can employ various techniques 
// to extract the bulk of the input token, without having to resort to
// the costly \`lexer.input()\` API which is inherited from lex/flex and 
// only proceeds one character at a time. 
//
// Best practices would instead employ the \`lexer.lookahead()\` API and/or 
// \`lexer.consume(N)\`.
//
// Aside: 
// you will find another approach, using a lexer rule regex which gobbles 
// 'too much input' via \`.*\`, where the part trailing the extracted token 
// is then pushed back into the lexer kernel by way of \`lexer.unput(str)\`.
//
<INITIAL,rules,code,options>[%\\{]\\{+
                                    {
                                        yy.depth = 0;
                                        yy.include_command_allowed = false;
                                        //this.pushState('action');   <-- not needed as we'll consume the entire action code chunk all at once in here

                                        let marker = yytext;

                                        // check whether this \`%{\` marker was located at the start of the line:
                                        // if it is, we treat it as a different token to signal the grammar we've
                                        // got an action which stands on its own, i.e. is not a rule action, %code
                                        // section, etc...
                                        //let precedingStr = this.pastInput(1,2).replace(/[\\r\\n]/g, '\\n');
                                        //let precedingStr = this.matched.substr(-this.match.length - 1, 1);
                                        let precedingStr = this.matched[this.matched.length - this.match.length - 1];

                                        let atSOL = (!precedingStr /* @ Start Of File */ || precedingStr === '\\n');

                                        // Construct the proper lexer regex for any possible \`%{...%}\`, \`{{...}}\` or what have we here?
                                        const match = helpers.setupDelimitedActionChunkMatcher(marker, this);

                                        // Writing the wrong end marker is a common user mistake, we can
                                        // easily look ahead and check for it now and report a proper hint
                                        // to cover this failure mode in a more helpful manner.
                                        let remaining = this.lookAhead();
                                        let m = match(remaining);

                                        // move the lexer position forward as well:
                                        //
                                        // WARNING: this will modity yytext, hence we must set our own \`yytext\`
                                        // *afterwards*: see the statement after next!
                                        this.consume(m.shiftCount);

                                        // pick up the extraced action block itself:
                                        yytext = m;

                                        if (m.fault) {
                                            yyerror(rmCommonWS\`
                                                ${m.fault}

                                                  Erroneous area:
                                                ${this.prettyPrintRange(yylloc)}
                                            \`);
                                            return 'UNTERMINATED_ACTION_BLOCK';
                                        }

                                        if (atSOL) {
                                            return 'ENTIRE_ACTION_AT_SOL';
                                        }
                                        return 'ENTIRE_ACTION';
                                    }


"->"                                    yy.depth = 0;
                                        yy.include_command_allowed = false;
                                        this.pushState('action');
                                        return 'ARROW_ACTION_START';
"→"                                     yy.depth = 0;
                                        yy.include_command_allowed = false;
                                        this.pushState('action');
                                        return 'ARROW_ACTION_START';
"=>"                                    yy.depth = 0;
                                        yy.include_command_allowed = false;
                                        this.pushState('action');
                                        return 'ARROW_ACTION_START';


//
// The start marker recognition rule is "specially made" as we want to recognize
// \`{{\` markers as special markers, just like \`%{\`,
// while we also want to recognize \`{\` markers, but only while we are parsing lexer
// match rules.
// Meanwhile, the \`<rules>{WS}+/!(?:"|"|"%"|"->"|"=>"|"→"|{WS}|{BR})\` rule here
// had to be done this way to allow other modes to recognize indented \`{...}\`
// simple wrapped action code, while it now has been written as
// \`<rules>{WS}+/!(?:"{{"|"|"|"%"|"->"|"=>"|"→"|{WS}|{BR})\` to prevent the lexer
// from entering 'action' mode on the leading whitespace alone, thus turning \`{{...}}\` into the equivalent of
// \`{ { ... } }\`, which would **not** produce the same result as then we then won't be able
// to apply the patched \`%{...%}\` grab-all-at-once rule near the top of this file.
// (See also the code in the \`setupDelimitedActionChunkLexerRegex()\` function: with
// \`{{\` we intend to reap the same benefits as we do when using \`%{\` and friends,
// while we want \`{\` to act as a regular flavor curly brace everywhere.
//
// To accomplish that, we have to have this particular post-condition check set
// in this rule so we don't steal the \`[%\\{]\\{+\` rule's thunder when we hit upon
// whitespace-leaded \`{{\`: that rule must match the \`{{\` during the next round, while
// we now only ignore/skip the leading whitespace using another simple lexer
// rule further below.
//
// Now for some other notes:
//
// ACTION code chunks follow rules and are generally indented and
// may not start with the '%' character which is special to the JISON lex language itself:
// - \`%\` can start options, commands, etc., e.g. \`%include\` or \`%options\`,
//   of which only \`%include\` is allowed inside an action chunk (and recognized in another rule in this lexer).
// - \`|\` starts a rule alternative, never a chunk of action code.
// - \`%%\` delimits a lexer spec section and should always be placed at the start
//   of a new line, as are most other lexer spec entities.
// - also don't forget about the arrows: those should be lexed via whispace-skip and then
//   matching one of the rules above in the next \`lex()\` call.
//
// The \`{WS}\` and \`{BR}\` chunks in the postcondition of the lexer regex below is there to prevent
// it from matching all the whitepace up to, but not including, the last whitespace
// character on the line and consequently triggering the 'action' mode unwantedly.
// Writing this one was hard, while the same can be accomplished with some extra
// action code which calls \`upcomingInput()\`, \`unput()\` and \`reject()\` lexer kernel APIs,
// but we have decided to do it this way for educational purposes: this is the classic
// way to write non-trivial lexer specs and sometimes it's bloody tough. [GHo]
//
// ---
// 
// Update: when we're inside a *scoped rule block*, then lexer rules MAY be indented!

<rules>{WS}+/!(?:"{{"|"|"|"%"|"->"|"=>"|"→"|{WS}|{BR})
                                        {{
                                            // look back beyond match: if this is an *indentation* from the
                                            // start of the line, then we won't consider this a action code block start
                                            // but rather the start of an *indented* lexer rule regex.
                                            //
                                            // The quickest way to find out if a NL (NewLine) went just before is to
                                            // check our start column in \`yylloc\`.
                                            //
                                            // ## EXTRA ##:
                                            //
                                            // We only permit rule indentation inside a "start condition" scope block.
                                            // 
                                            // > Dev Notes:
                                            // >
                                            // > Allowing it anywhere would permit a lex spec file to look like a total
                                            // > mess. The 0110, etc. tests in /lex-parser/ allow indentation anywhere
                                            // > because we don't have an active parser there, hence the classic yacc/bison
                                            // > style "lexer hack" via the \`yy\` shared instance (\`yy.__inside_scoped_ruleset__\`)
                                            // > will not work in those tests YET.
                                            // > HOWEVER, when you inspect the same tests' results as run in /jison-lex/
                                            // > you'll notice the \`lex.y\` grammar kicking in and rejecting several of 
                                            // > those tests as they contain indented lexer rules WITHOUT an encompassing
                                            // > start condition scope.
                                            // 
                                            // PLUS we apply this HEURISTIC: when the 'indentation level' is TWO TABS or
                                            // 8 SPACES (1 TAB counts for 4 spaces) or more, it's considered as 
                                            // 'double indented' and automatically treated as action block source code.

                                            if (yy.__inside_scoped_ruleset__ === false || yylloc.first_column > 0 || /^ {8}/.test(yytext.replace(/\\t/g, '    '))) {
                                                yy.depth = 0;
                                                yy.include_command_allowed = true;
                                                this.pushState('action');

                                                // Do a bit of magic that's useful for the parser when we
                                                // call \`trimActionCode()\` in there to perform a bit of
                                                // rough initial action code chunk cleanup:
                                                // when we start the action block -- hence *delimit* the
                                                // action block -- with a plain old '{' brace, we can
                                                // throw that one and its counterpart out safely without
                                                // damaging the action code in any way.
                                                //
                                                // In order to be able to detect that, we look ahead
                                                // now and see whether or not the rule's regex with the fancy
                                                // '/!' postcondition check actually hit a '{', which
                                                // is the only action code block starter we cannot
                                                // detect explicitly using any of the '%{.*?%}' lexer
                                                // rules you've seen further above.
                                                //
                                                // Thanks to this rule's regex, we DO know that the
                                                // first look-ahead character will be a non-whitespace
                                                // character, which would either be an action code block
                                                // delimiter *or* a comment starter. In the latter case
                                                // we just throw up our hands and leave code trimming
                                                // and analysis to the more advanced systems which
                                                // follow after \`trimActionCode()\` has passed once we
                                                // get to the parser productions which process this
                                                // upcoming action code block.
                                                let la = this.lookAhead();
                                                if (la[0] === '{') {
                                                    yytext = '{';           // hint the parser
                                                }

                                                return 'ACTION_START';
                                            }
                                            // else: ignore whitespace before a rule regex: *indentation* in a scope block.
                                        }}

<rules>"%%"                             this.popState();
                                        this.pushState('code');
                                        return '%%';
// Also support those lexers which don't have a trailing code section
// by faking a '%%' sentinel and an empty code section following that
// one:
<rules><<EOF>>                          this.popState();
                                        this.pushState('code');
                                        return '%%';


//===================== <options> section start =============================
<options>{

"="                                     return '=';

\\"{DOUBLEQUOTED_STRING_CONTENT}\\"       return 'OPTION_STRING';
\\'{QUOTED_STRING_CONTENT}\\'             return 'OPTION_STRING';
\\\`{ES2017_STRING_CONTENT}\\\`             return 'OPTION_STRING';

// make sure to terminate before the section ends,
// which is announced by \`%%\`, \`|\` or \`;\`:
"%%"|"|"|";"                            this.popState();
                                        this.unput(yytext);
                                        return 'OPTIONS_END';

<<EOF>>                                 this.popState();
                                        return 'OPTIONS_END';

// some options may be followed by an action block or \`%include\`d action block:
// when this happens, let the parser cope by stacking an 'action' mode inside
// the 'options' mode.
// This is necessary to get a different lexer token stream for these two scenarios,
// which are functionally different:
//
//     1:  %code option(s)... %{ action %}
//
//     2:  %code option(s)...
//         %{ action %}
//
// NOTE: we do not worry about *deep nesting* 'action' and 'options' modes
// via \`%include\` lexing, e.g.:
//
//     %code option(s)... %include 2nd_level_option(s) %include(illegal!) 3rd_level...
//
// While the lexer may not object (and thus *incorrectly reset \`yy.depth\` to
// ZERO(0) in the inner \`%include\` lex action above, for example!) the grammar/parser
// should be able to check against this eventuality and barf an appropriately
// formulated hairball. <wink>
//
"%include"                              yy.depth = 0;
                                        yy.include_command_allowed = true;
                                        this.pushState('action');
                                        // push the parsed '%include' back into the input-to-parse
                                        // to trigger the \`<action>\` state to re-parse it
                                        // and issue the desired follow-up token: 'INCLUDE':
                                        this.unput(yytext);
                                        return 'ACTION_START';

// The 'options' mode also serves to lex condition lists and a few other things...
// We don't mind and allow the lexer to be 'dumb' here as the parser will
// catch any abuse / incorrect input and report accordingly.
">"                                     this.popState();
                                        this.unput(yytext);
                                        return 'OPTIONS_END';
","                                     return ',';
"*"                                     return '*';

// The 'options' mode also serves to lex extended \`%token\` specs a la bison:
"<"{ID}">"                              yytext = this.matches[1];
                                        return 'TOKEN_TYPE';

{HEX_NUMBER}(?![{ANY_LITERAL_CHAR}])
                                        yytext = parseInt(yytext, 16); 
                                        return 'INTEGER';

-?{DECIMAL_NUMBER}(?![{ANY_LITERAL_CHAR}])
                                        yytext = parseInt(yytext, 10); 
                                        return 'INTEGER';

{ANY_LITERAL_CHAR}+                     return 'OPTION_VALUE';

/* skip leading whitespace on the next line of input, when followed by more option data */
{BR}{WS}+(?=\\S)                         /* ignore */
/* otherwise the EOL marks the end of the options statement */
{BR}                                    %{
                                            // lexer rule condition sets can only be terminated by a '>':
                                            if (!yy.__inside_condition_set__) {
                                                this.popState();
                                                this.unput(yytext);
                                                return 'OPTIONS_END';
                                            } 
                                            /* else: ignore */
                                        %}
{WS}+                                   /* skip whitespace */

}
//===================== <options> section end =============================



<INITIAL>{ID}                           this.pushState('macro');
                                        return 'MACRO_NAME';

<macro>{BR}+                            this.popState();
                                        this.unput(yytext);
                                        return 'MACRO_END';

// Also support the rare 'custom lexer without a \`%%\` + rules':
<macro><<EOF>>                          this.popState();
                                        this.unput(yytext);
                                        return 'MACRO_END';

{BR}+                                   /* skip newlines */
{WS}+                                   /* skip whitespace */

\\"{DOUBLEQUOTED_STRING_CONTENT}\\"       return 'STRING_LIT';
\\'{QUOTED_STRING_CONTENT}\\'             return 'STRING_LIT';
\\\`{ES2017_STRING_CONTENT}\\\`             return 'STRING_LIT';

// Accept any non-regex-special character as a direct literal without
// the need to put quotes around it:
{ANY_LITERAL_CHAR}+                     // accept any non-regex, non-lex, non-string-delim,
                                        // non-escape-starter, non-space character as-is
                                        return 'CHARACTER_LIT';

"["                                     this.pushState('set');
                                        return 'REGEX_SET_START';
"|"                                     return '|';

// see also: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
"(?:"                                   return 'SPECIAL_GROUP';
"(?="                                   return 'SPECIAL_GROUP';
"(?!"                                   return 'SPECIAL_GROUP';
// regex lookbehind prepwork: see also https://github.com/tc39/proposal-regexp-lookbehind
"(?<="                                  return 'SPECIAL_GROUP';
"(?<!"                                  return 'SPECIAL_GROUP';

"("                                     return '(';
")"                                     return ')';
"+"                                     return '+';
"*"                                     return '*';
"?"                                     return '?';
"^"                                     return '^';
","                                     return ',';
"<<EOF>>"                               return '$';

"<"                                     %{
                                            // '<' can only start a condition when it's at the very start of a regex rule or {...} regex rule set.
                                            // Either way, '<' must be at the start of the line, or it cannot be a condition starter but only
                                            // serve as a literal character in a regex.
                                            if (yylloc.first_column === 0) {
                                                yy.__inside_condition_set__ = true;
                                                this.pushState('options');
                                                return '<';
                                            }
                                            return 'CHARACTER_LIT';
                                        %}
">"                                     %{
                                            if (yy.__inside_condition_set__) {
                                                yy.__inside_condition_set__ = false;
                                                return '>';
                                            }
                                            return 'CHARACTER_LIT';
                                        %}

"/!"                                    return '/!';                    // treated as \`(?!atom)\`
"/"                                     return '/';                     // treated as \`(?=atom)\`
"\\\\"(?:[sSbBwWdDpP]|[rfntv\\\\*+()${}|[\\]\\/.^?])
                                        return 'REGEX_SPECIAL_CHAR';
"\\\\"(?:([0-7]{1,3})|c([A-Z])|x([0-9a-fA-F]{2})|u([0-9a-fA-F]{4})|u\\{([0-9a-fA-F]{1,8})\\})
                                        %{
                                            let m = this.matches;
                                            yytext = NaN;
                                            if (m[1]) {
                                                // [1]: octal char: \`\\012\` --> \\x0A
                                                let v = parseInt(m[1], 8);
                                                yytext = v;
                                            }
                                            else if (m[2]) {
                                                // [2]: CONTROL char: \`\\cA\` --> \\u0001
                                                let v = m[2].charCodeAt(0) - 64;
                                                yytext = v;
                                            }
                                            else if (m[3]) {
                                                // [3]: hex char: \`\\x41\` --> A
                                                let v = parseInt(m[3], 16);
                                                yytext = v;
                                            }
                                            else if (m[4]) {
                                                // [4]: unicode/UTS2 char: \`\\u03c0\` --> PI
                                                let v = parseInt(m[4], 16);
                                                yytext = v;
                                            }
                                            else if (m[5]) {
                                                // [5]: unicode code point: \`\\u{00003c0}\` --> PI
                                                let v = parseInt(m[5], 16);
                                                yytext = v;
                                            }
                                            return 'ESCAPED_CHAR';
                                        %}
"\\\\".                                   yytext = yytext.substring(1);
                                        return 'CHARACTER_LIT';
"$"                                     return '$';
"."                                     return '.';
"%option"[s]?                           this.pushState('options');
                                        return 'OPTIONS';
"%s"                                    this.pushState('options');
                                        return 'START_INC';
"%x"                                    this.pushState('options');
                                        return 'START_EXC';

"%code"                                 this.pushState('options');
                                        return 'INIT_CODE';
"%import"                               this.pushState('options');
                                        return 'IMPORT';
"%pointer"                              return 'FLEX_POINTER_MODE';
"%array"                                return 'FLEX_ARRAY_MODE';

<INITIAL,rules,code>"%include"          %{
                                            yy.depth = 0;
                                            yy.include_command_allowed = true;

                                            // check whether this \`%include\` command was located at the start of the line:
                                            // if it is, we treat it as a different token to signal the grammar we've
                                            // got an action which stands on its own.
                                            let precedingStr = this.matched[this.matched.length - this.match.length - 1];

                                            let atSOL = (!precedingStr /* @ Start Of File */ || precedingStr === '\\n');

                                            this.pushState('action');
                                            // push the parsed '%include' back into the input-to-parse
                                            // to trigger the \`<action>\` state to re-parse it
                                            // and issue the desired follow-up token: 'INCLUDE':
                                            this.unput(yytext);

                                            // and allow the next lexer round to match and execute the suitable lexer rule(s) to parse this incoming action code block.
                                            if (atSOL) {
                                                return 'ACTION_START_AT_SOL';
                                            }
                                            return 'ACTION_START';
                                        %}

<INITIAL,rules,code>"%"{NAME}([^\\r\\n]*)
                                        %{
                                            /* ignore unrecognized decl */
                                            this.warn(rmCommonWS\`
                                                ignoring unsupported lexer option ${dquote(yytext)}
                                                while lexing in ${dquote(this.topState())} state.

                                                  Erroneous area:
                                                ${this.prettyPrintRange(yylloc)}
                                            \`);
                                            yytext = {
                                                name: this.matches[1],              // {NAME}
                                                value: this.matches[2].trim()       // optional value/parameters
                                            };
                                            return 'UNKNOWN_DECL';
                                        %}

"%%"                                    this.pushState('rules');
                                        return '%%';

"{"\\d+(","\\s*\\d+|",")?"}"               return 'RANGE_REGEX';
"{"{ID}"}"                              return 'NAME_BRACE';
<set,options>"{"{ID}"}"                 return 'NAME_BRACE';
"{"                                     return '{';
"}"                                     return '}';

//===================== <set> section start =============================
<set>{

// We don't bother decoding escaped characters inside a regex [...] set as those will
// be converted anyway (and without any fuss) once we feed the regex into a XRegExp
// instance in the engine.
// The only thing we must bother about is the user using NAME_BRACE macro expansions
// inside a regex [...] set, hence the special exclusion of '{' here:
(?:"\\\\"[^{BR}]|[^\\]\\{{BR}])+            return 'REGEX_SET';
"{"                                     return 'REGEX_SET';
"]"                                     this.popState();
                                        return 'REGEX_SET_END';

{BR}                                    %{
                                            this.popState();
                                            this.unput(yytext);
                                            yyerror(rmCommonWS\`
                                                regex [...] sets cannot span multiple lines.

                                                If you want a CR/LF to be part of a regex set, you can simply
                                                specify those as character escapes '\\\\r' and '\\\\n'.

                                                  Erroneous area:
                                                ${this.prettyPrintRange(yylloc)}
                                            \`);
                                            return 'UNTERMINATED_REGEX_SET';
                                        %}
<<EOF>>                                 this.popState();
                                        yyerror(rmCommonWS\`
                                            The regex [...] set has not been properly terminated by ']'.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \`);
                                        return 'UNTERMINATED_REGEX_SET';

}
//===================== <set> section end =============================

// in the trailing CODE block, only accept these \`%include\` macros when
// they appear at the start of a line and make sure the rest of lexer
// regexes account for this one so it'll match that way only:
<code>(?:[^%{BR}][^{BR}]*{BR}+)+        return 'TRAILING_CODE_CHUNK';      // shortcut to grab a large bite at once when we're sure not to encounter any \`%include\` in there at start-of-line.
<code>[^{BR}]*{BR}+                     return 'TRAILING_CODE_CHUNK';
<code>[^{BR}]+                          return 'TRAILING_CODE_CHUNK';      // the bit of CODE just before EOF...


// detect and report unterminated string constants ASAP
// for 'action', 'options', but also for other lexer conditions:
//
// these error catching rules fix https://github.com/GerHobbelt/jison/issues/13
<action>\\"                              yyerror(rmCommonWS\`
                                            unterminated string constant in lexer rule action block.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \`);
                                        return 'UNTERMINATED_STRING_ERROR';
<action>\\'                              yyerror(rmCommonWS\`
                                            unterminated string constant in lexer rule action block.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \`);
                                        return 'UNTERMINATED_STRING_ERROR';
<action>\\\`                              yyerror(rmCommonWS\`
                                            unterminated string constant in lexer rule action block.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \`);
                                        return 'UNTERMINATED_STRING_ERROR';

<options>\\"                             yyerror(rmCommonWS\`
                                            unterminated string constant in %options entry.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \`);
                                        return 'UNTERMINATED_STRING_ERROR';
<options>\\'                             yyerror(rmCommonWS\`
                                            unterminated string constant in %options entry.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \`);
                                        return 'UNTERMINATED_STRING_ERROR';
<options>\\\`                             yyerror(rmCommonWS\`
                                            unterminated string constant in %options entry.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \`);
                                        return 'UNTERMINATED_STRING_ERROR';

<*>\\"                                   let rules = (this.topState() === 'macro' ? 'macro\\'s' : this.topState());
                                        yyerror(rmCommonWS\`
                                            unterminated string constant encountered while lexing
                                            ${rules}.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \`);
                                        return 'UNTERMINATED_STRING_ERROR';
<*>\\'                                   let rules = (this.topState() === 'macro' ? 'macro\\'s' : this.topState());
                                        yyerror(rmCommonWS\`
                                            unterminated string constant encountered while lexing
                                            ${rules}.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \`);
                                        return 'UNTERMINATED_STRING_ERROR';
<*>\\\`                                   let rules = (this.topState() === 'macro' ? 'macro\\'s' : this.topState());
                                        yyerror(rmCommonWS\`
                                            unterminated string constant encountered while lexing
                                            ${rules}.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \`);
                                        return 'UNTERMINATED_STRING_ERROR';


<macro,rules>.                          /* b0rk on bad characters */
                                        let rules = (this.topState() === 'macro' ? 'macro\\'s' : this.topState());
                                        yyerror(rmCommonWS\`
                                            unsupported lexer input encountered while lexing
                                            ${rules} (i.e. jison lex regexes) in ${dquote(this.topState())} state.

                                            NOTE: When you want this input to be interpreted as a LITERAL part
                                                  of a lex rule regex, you MUST enclose it in double or
                                                  single quotes.

                                                  If not, then know that this input is not accepted as a valid
                                                  regex expression here in jison-lex ${rules}.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \`);
                                        return 'error';

<options>.                              yyerror(rmCommonWS\`
                                            unsupported lexer input: ${dquote(yytext)}
                                            while lexing in ${dquote(this.topState())} state.

                                            If this input was intentional, you might want to put quotes around
                                            it; any JavaScript string quoting style is accepted (single quotes,
                                            double quotes *or* backtick quotes a la ES6 string templates).

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \`);
                                        return 'error';

<*>.                                    %{
                                            /* b0rk on bad characters */
                                            yyerror(rmCommonWS\`
                                                unsupported lexer input: ${dquote(yytext)}
                                                while lexing in ${dquote(this.topState())} state.

                                                  Erroneous area:
                                                ${this.prettyPrintRange(yylloc)}
                                            \`);
                                            return 'error';
                                        %}

<*><<EOF>>                              return 'EOF';

%%


const rmCommonWS = helpers.rmCommonWS;
const dquote     = helpers.dquote;
const scanRegExp = helpers.scanRegExp;










lexer.warn = function l_warn() {
    if (this.yy && this.yy.parser && typeof this.yy.parser.warn === 'function') {
        return this.yy.parser.warn.apply(this, arguments);
    } else {
        console.warn.apply(console, arguments);
    }
};

lexer.log = function l_log() {
    if (this.yy && this.yy.parser && typeof this.yy.parser.log === 'function') {
        return this.yy.parser.log.apply(this, arguments);
    } else {
        console.log.apply(console, arguments);
    }
};
`,
        matches: false,
        yytext: '',
        offset: 53597,
        base_position: 0,
        yyleng: 0,
        yylineno: 980,
        yylloc: {
          first_line: 981,
          first_column: 0,
          last_line: 981,
          last_column: 0,
          range: [
            53597,
            53597,
          ],
        },
        CRLF_Re: {
          re: '/\\r\\n?|\\n/',
          source: '\\r\\n?|\\n',
          flags: '',
        },
        options: {
          xregexp: true,
          ranges: true,
          trackPosition: true,
          easy_keyword_rules: true,
        },
        yy: {
          depth: 0,
          include_command_allowed: false,
          __inside_condition_set__: false,
        },
        __entire_action_block_matchers__: {},
      },
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 25250,
        yytext: {
          fault: `
TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO 

Confusingly terminated action code block. We're expecting the
'}}' end marker to go with the given start marker.
Regrettably, it does not exist in the remainder of the input.
`,
          srcCode: `
                                            // look back beyond match: if this is an *indentation* from the
                                            // start of the line, then we won't consider this a action code block start
                                            // but rather the start of an *indented* lexer rule regex.
                                            //
                                            // The quickest way to find out if a NL (NewLine) went just before is to
                                            // check our start column in \`yylloc\`.
                                            //
                                            // ## EXTRA ##:
                                            //
                                            // We only permit rule indentation inside a "start condition" scope block.
                                            // 
                                            // > Dev Notes:
                                            // >
                                            // > Allowing it anywhere would permit a lex spec file to look like a total
                                            // > mess. The 0110, etc. tests in /lex-parser/ allow indentation anywhere
                                            // > because we don't have an active parser there, hence the classic yacc/bison
                                            // > style "lexer hack" via the \`yy\` shared instance (\`yy.__inside_scoped_ruleset__\`)
                                            // > will not work in those tests YET.
                                            // > HOWEVER, when you inspect the same tests' results as run in /jison-lex/
                                            // > you'll notice the \`lex.y\` grammar kicking in and rejecting several of 
                                            // > those tests as they contain indented lexer rules WITHOUT an encompassing
                                            // > start condition scope.
                                            // 
                                            // PLUS we apply this HEURISTIC: when the 'indentation level' is TWO TABS or
                                            // 8 SPACES (1 TAB counts for 4 spaces) or more, it's considered as 
                                            // 'double indented' and automatically treated as action block source code.

                                            if (yy.__inside_scoped_ruleset__ === false || yylloc.first_column > 0 || /^ {8}/.test(yytext.replace(/\\t/g, '    '))) {
                                                yy.depth = 0;
                                                yy.include_command_allowed = true;
                                                this.pushState('action');

                                                // Do a bit of magic that's useful for the parser when we
                                                // call \`trimActionCode()\` in there to perform a bit of
                                                // rough initial action code chunk cleanup:
                                                // when we start the action block -- hence *delimit* the
                                                // action block -- with a plain old '{' brace, we can
                                                // throw that one and its counterpart out safely without
                                                // damaging the action code in any way.
                                                //
                                                // In order to be able to detect that, we look ahead
                                                // now and see whether or not the rule's regex with the fancy
                                                // '/!' postcondition check actually hit a '{', which
                                                // is the only action code block starter we cannot
                                                // detect explicitly using any of the '%{.*?%}' lexer
                                                // rules you've seen further above.
                                                //
                                                // Thanks to this rule's regex, we DO know that the
                                                // first look-ahead character will be a non-whitespace
                                                // character, which would either be an action code block
                                                // delimiter *or* a comment starter. In the latter case
                                                // we just throw up our hands and leave code trimming
                                                // and analysis to the more advanced systems which
                                                // follow after \`trimActionCode()\` has passed once we
                                                // get to the parser productions which process this
                                                // upcoming action code block.
                                                let la = this.lookAhead();
                                                if (la[0] === '{') {
                                                    yytext = '{';           // hint the parser
                                                }

                                                return 'ACTION_START';
                                            }
                                            // else: ignore whitespace before a rule regex: *indentation* in a scope block.
                                        `,
          shiftCount: 5676,
          action_start_marker: '{{',
          action_end_marker: '}}',
        },
        yyleng: 5678,
        matches: [
          '{{',
        ],
        activeCondition: 'rules',
        conditionStackDepth: 2,
      },
    },
    yylloc: {
      first_line: 445,
      first_column: 40,
      last_line: 510,
      last_column: 42,
      range: [
        22669,
        28347,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 512,
      first_column: 0,
      last_line: 512,
      last_column: 1,
      range: [
        28349,
        28350,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'rules',
    yylloc: {
      first_line: 512,
      first_column: 1,
      last_line: 512,
      last_column: 6,
      range: [
        28350,
        28355,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 512,
      first_column: 6,
      last_line: 512,
      last_column: 6,
      range: [
        28355,
        28355,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 512,
      first_column: 6,
      last_line: 512,
      last_column: 7,
      range: [
        28355,
        28356,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%%"',
    yylloc: {
      first_line: 512,
      first_column: 7,
      last_line: 512,
      last_column: 11,
      range: [
        28356,
        28360,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                             ',
    yylloc: {
      first_line: 512,
      first_column: 11,
      last_line: 512,
      last_column: 40,
      range: [
        28360,
        28389,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.popState();',
    yylloc: {
      first_line: 512,
      first_column: 40,
      last_line: 512,
      last_column: 56,
      range: [
        28389,
        28405,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 512,
      first_column: 56,
      last_line: 513,
      last_column: 40,
      range: [
        28405,
        28446,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 513,
      first_column: 40,
      last_line: 513,
      last_column: 55,
      range: [
        28446,
        28461,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'code'",
    yylloc: {
      first_line: 513,
      first_column: 55,
      last_line: 513,
      last_column: 61,
      range: [
        28461,
        28467,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 513,
      first_column: 61,
      last_line: 513,
      last_column: 63,
      range: [
        28467,
        28469,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 513,
      first_column: 63,
      last_line: 514,
      last_column: 40,
      range: [
        28469,
        28510,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 514,
      first_column: 40,
      last_line: 514,
      last_column: 47,
      range: [
        28510,
        28517,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'%%'",
    yylloc: {
      first_line: 514,
      first_column: 47,
      last_line: 514,
      last_column: 51,
      range: [
        28517,
        28521,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 514,
      first_column: 51,
      last_line: 514,
      last_column: 52,
      range: [
        28521,
        28522,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 514,
      first_column: 52,
      last_line: 514,
      last_column: 52,
      range: [
        28522,
        28522,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 518,
      first_column: 0,
      last_line: 518,
      last_column: 1,
      range: [
        28671,
        28672,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'rules',
    yylloc: {
      first_line: 518,
      first_column: 1,
      last_line: 518,
      last_column: 6,
      range: [
        28672,
        28677,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 518,
      first_column: 6,
      last_line: 518,
      last_column: 6,
      range: [
        28677,
        28677,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 518,
      first_column: 6,
      last_line: 518,
      last_column: 7,
      range: [
        28677,
        28678,
      ],
    },
  },
  {
    id: 17,
    token: '"$"',
    yytext: '<<EOF>>',
    yylloc: {
      first_line: 518,
      first_column: 7,
      last_line: 518,
      last_column: 14,
      range: [
        28678,
        28685,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                          ',
    yylloc: {
      first_line: 518,
      first_column: 14,
      last_line: 518,
      last_column: 40,
      range: [
        28685,
        28711,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.popState();',
    yylloc: {
      first_line: 518,
      first_column: 40,
      last_line: 518,
      last_column: 56,
      range: [
        28711,
        28727,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 518,
      first_column: 56,
      last_line: 519,
      last_column: 40,
      range: [
        28727,
        28768,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 519,
      first_column: 40,
      last_line: 519,
      last_column: 55,
      range: [
        28768,
        28783,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'code'",
    yylloc: {
      first_line: 519,
      first_column: 55,
      last_line: 519,
      last_column: 61,
      range: [
        28783,
        28789,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 519,
      first_column: 61,
      last_line: 519,
      last_column: 63,
      range: [
        28789,
        28791,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 519,
      first_column: 63,
      last_line: 520,
      last_column: 40,
      range: [
        28791,
        28832,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 520,
      first_column: 40,
      last_line: 520,
      last_column: 47,
      range: [
        28832,
        28839,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'%%'",
    yylloc: {
      first_line: 520,
      first_column: 47,
      last_line: 520,
      last_column: 51,
      range: [
        28839,
        28843,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 520,
      first_column: 51,
      last_line: 520,
      last_column: 52,
      range: [
        28843,
        28844,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 520,
      first_column: 52,
      last_line: 520,
      last_column: 52,
      range: [
        28844,
        28844,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 524,
      first_column: 0,
      last_line: 524,
      last_column: 1,
      range: [
        28925,
        28926,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'options',
    yylloc: {
      first_line: 524,
      first_column: 1,
      last_line: 524,
      last_column: 8,
      range: [
        28926,
        28933,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 524,
      first_column: 8,
      last_line: 524,
      last_column: 8,
      range: [
        28933,
        28933,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 524,
      first_column: 8,
      last_line: 524,
      last_column: 9,
      range: [
        28933,
        28934,
      ],
    },
  },
  {
    id: 4,
    token: '"{"',
    yytext: '{',
    yylloc: {
      first_line: 524,
      first_column: 9,
      last_line: 524,
      last_column: 10,
      range: [
        28934,
        28935,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"="',
    yylloc: {
      first_line: 526,
      first_column: 0,
      last_line: 526,
      last_column: 3,
      range: [
        28937,
        28940,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 526,
      first_column: 3,
      last_line: 526,
      last_column: 40,
      range: [
        28940,
        28977,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 526,
      first_column: 40,
      last_line: 526,
      last_column: 47,
      range: [
        28977,
        28984,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'='",
    yylloc: {
      first_line: 526,
      first_column: 47,
      last_line: 526,
      last_column: 50,
      range: [
        28984,
        28987,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 526,
      first_column: 50,
      last_line: 526,
      last_column: 51,
      range: [
        28987,
        28988,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 526,
      first_column: 51,
      last_line: 526,
      last_column: 51,
      range: [
        28988,
        28988,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '"',
    yylloc: {
      first_line: 528,
      first_column: 0,
      last_line: 528,
      last_column: 2,
      range: [
        28990,
        28992,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{DOUBLEQUOTED_STRING_CONTENT}',
    yylloc: {
      first_line: 528,
      first_column: 2,
      last_line: 528,
      last_column: 31,
      range: [
        28992,
        29021,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '"',
    yylloc: {
      first_line: 528,
      first_column: 31,
      last_line: 528,
      last_column: 33,
      range: [
        29021,
        29023,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '       ',
    yylloc: {
      first_line: 528,
      first_column: 33,
      last_line: 528,
      last_column: 40,
      range: [
        29023,
        29030,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 528,
      first_column: 40,
      last_line: 528,
      last_column: 47,
      range: [
        29030,
        29037,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'OPTION_STRING'",
    yylloc: {
      first_line: 528,
      first_column: 47,
      last_line: 528,
      last_column: 62,
      range: [
        29037,
        29052,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 528,
      first_column: 62,
      last_line: 528,
      last_column: 63,
      range: [
        29052,
        29053,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 528,
      first_column: 63,
      last_line: 528,
      last_column: 63,
      range: [
        29053,
        29053,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: "'",
    yylloc: {
      first_line: 529,
      first_column: 0,
      last_line: 529,
      last_column: 2,
      range: [
        29054,
        29056,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{QUOTED_STRING_CONTENT}',
    yylloc: {
      first_line: 529,
      first_column: 2,
      last_line: 529,
      last_column: 25,
      range: [
        29056,
        29079,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: "'",
    yylloc: {
      first_line: 529,
      first_column: 25,
      last_line: 529,
      last_column: 27,
      range: [
        29079,
        29081,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '             ',
    yylloc: {
      first_line: 529,
      first_column: 27,
      last_line: 529,
      last_column: 40,
      range: [
        29081,
        29094,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 529,
      first_column: 40,
      last_line: 529,
      last_column: 47,
      range: [
        29094,
        29101,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'OPTION_STRING'",
    yylloc: {
      first_line: 529,
      first_column: 47,
      last_line: 529,
      last_column: 62,
      range: [
        29101,
        29116,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 529,
      first_column: 62,
      last_line: 529,
      last_column: 63,
      range: [
        29116,
        29117,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 529,
      first_column: 63,
      last_line: 529,
      last_column: 63,
      range: [
        29117,
        29117,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '`',
    yylloc: {
      first_line: 530,
      first_column: 0,
      last_line: 530,
      last_column: 2,
      range: [
        29118,
        29120,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ES2017_STRING_CONTENT}',
    yylloc: {
      first_line: 530,
      first_column: 2,
      last_line: 530,
      last_column: 25,
      range: [
        29120,
        29143,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '`',
    yylloc: {
      first_line: 530,
      first_column: 25,
      last_line: 530,
      last_column: 27,
      range: [
        29143,
        29145,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '             ',
    yylloc: {
      first_line: 530,
      first_column: 27,
      last_line: 530,
      last_column: 40,
      range: [
        29145,
        29158,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 530,
      first_column: 40,
      last_line: 530,
      last_column: 47,
      range: [
        29158,
        29165,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'OPTION_STRING'",
    yylloc: {
      first_line: 530,
      first_column: 47,
      last_line: 530,
      last_column: 62,
      range: [
        29165,
        29180,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 530,
      first_column: 62,
      last_line: 530,
      last_column: 63,
      range: [
        29180,
        29181,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 530,
      first_column: 63,
      last_line: 530,
      last_column: 63,
      range: [
        29181,
        29181,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%%"',
    yylloc: {
      first_line: 534,
      first_column: 0,
      last_line: 534,
      last_column: 4,
      range: [
        29277,
        29281,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 534,
      first_column: 4,
      last_line: 534,
      last_column: 5,
      range: [
        29281,
        29282,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"|"',
    yylloc: {
      first_line: 534,
      first_column: 5,
      last_line: 534,
      last_column: 8,
      range: [
        29282,
        29285,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 534,
      first_column: 8,
      last_line: 534,
      last_column: 9,
      range: [
        29285,
        29286,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '";"',
    yylloc: {
      first_line: 534,
      first_column: 9,
      last_line: 534,
      last_column: 12,
      range: [
        29286,
        29289,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                            ',
    yylloc: {
      first_line: 534,
      first_column: 12,
      last_line: 534,
      last_column: 40,
      range: [
        29289,
        29317,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.popState();',
    yylloc: {
      first_line: 534,
      first_column: 40,
      last_line: 534,
      last_column: 56,
      range: [
        29317,
        29333,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 534,
      first_column: 56,
      last_line: 535,
      last_column: 40,
      range: [
        29333,
        29374,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.unput(yytext);',
    yylloc: {
      first_line: 535,
      first_column: 40,
      last_line: 535,
      last_column: 59,
      range: [
        29374,
        29393,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 535,
      first_column: 59,
      last_line: 536,
      last_column: 40,
      range: [
        29393,
        29434,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 536,
      first_column: 40,
      last_line: 536,
      last_column: 47,
      range: [
        29434,
        29441,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'OPTIONS_END'",
    yylloc: {
      first_line: 536,
      first_column: 47,
      last_line: 536,
      last_column: 60,
      range: [
        29441,
        29454,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 536,
      first_column: 60,
      last_line: 536,
      last_column: 61,
      range: [
        29454,
        29455,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 536,
      first_column: 61,
      last_line: 536,
      last_column: 61,
      range: [
        29455,
        29455,
      ],
    },
  },
  {
    id: 17,
    token: '"$"',
    yytext: '<<EOF>>',
    yylloc: {
      first_line: 538,
      first_column: 0,
      last_line: 538,
      last_column: 7,
      range: [
        29457,
        29464,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                 ',
    yylloc: {
      first_line: 538,
      first_column: 7,
      last_line: 538,
      last_column: 40,
      range: [
        29464,
        29497,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.popState();',
    yylloc: {
      first_line: 538,
      first_column: 40,
      last_line: 538,
      last_column: 56,
      range: [
        29497,
        29513,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 538,
      first_column: 56,
      last_line: 539,
      last_column: 40,
      range: [
        29513,
        29554,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 539,
      first_column: 40,
      last_line: 539,
      last_column: 47,
      range: [
        29554,
        29561,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'OPTIONS_END'",
    yylloc: {
      first_line: 539,
      first_column: 47,
      last_line: 539,
      last_column: 60,
      range: [
        29561,
        29574,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 539,
      first_column: 60,
      last_line: 539,
      last_column: 61,
      range: [
        29574,
        29575,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 539,
      first_column: 61,
      last_line: 539,
      last_column: 61,
      range: [
        29575,
        29575,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%include"',
    yylloc: {
      first_line: 562,
      first_column: 0,
      last_line: 562,
      last_column: 10,
      range: [
        30460,
        30470,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                              ',
    yylloc: {
      first_line: 562,
      first_column: 10,
      last_line: 562,
      last_column: 40,
      range: [
        30470,
        30500,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.depth = 0;',
    yylloc: {
      first_line: 562,
      first_column: 40,
      last_line: 562,
      last_column: 53,
      range: [
        30500,
        30513,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 562,
      first_column: 53,
      last_line: 563,
      last_column: 40,
      range: [
        30513,
        30554,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yy.include_command_allowed = true;',
    yylloc: {
      first_line: 563,
      first_column: 40,
      last_line: 563,
      last_column: 74,
      range: [
        30554,
        30588,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 563,
      first_column: 74,
      last_line: 564,
      last_column: 40,
      range: [
        30588,
        30629,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 564,
      first_column: 40,
      last_line: 564,
      last_column: 55,
      range: [
        30629,
        30644,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'action'",
    yylloc: {
      first_line: 564,
      first_column: 55,
      last_line: 564,
      last_column: 63,
      range: [
        30644,
        30652,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 564,
      first_column: 63,
      last_line: 564,
      last_column: 65,
      range: [
        30652,
        30654,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 564,
      first_column: 65,
      last_line: 565,
      last_column: 40,
      range: [
        30654,
        30695,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "// push the parsed '%include' back into the input-to-parse",
    yylloc: {
      first_line: 565,
      first_column: 40,
      last_line: 565,
      last_column: 98,
      range: [
        30695,
        30753,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 565,
      first_column: 98,
      last_line: 566,
      last_column: 40,
      range: [
        30753,
        30794,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// to trigger the `<action>` state to re-parse it',
    yylloc: {
      first_line: 566,
      first_column: 40,
      last_line: 566,
      last_column: 89,
      range: [
        30794,
        30843,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 566,
      first_column: 89,
      last_line: 567,
      last_column: 40,
      range: [
        30843,
        30884,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "// and issue the desired follow-up token: 'INCLUDE':",
    yylloc: {
      first_line: 567,
      first_column: 40,
      last_line: 567,
      last_column: 92,
      range: [
        30884,
        30936,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 567,
      first_column: 92,
      last_line: 568,
      last_column: 40,
      range: [
        30936,
        30977,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.unput(yytext);',
    yylloc: {
      first_line: 568,
      first_column: 40,
      last_line: 568,
      last_column: 59,
      range: [
        30977,
        30996,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 568,
      first_column: 59,
      last_line: 569,
      last_column: 40,
      range: [
        30996,
        31037,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 569,
      first_column: 40,
      last_line: 569,
      last_column: 47,
      range: [
        31037,
        31044,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'ACTION_START'",
    yylloc: {
      first_line: 569,
      first_column: 47,
      last_line: 569,
      last_column: 61,
      range: [
        31044,
        31058,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 569,
      first_column: 61,
      last_line: 569,
      last_column: 62,
      range: [
        31058,
        31059,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 569,
      first_column: 62,
      last_line: 569,
      last_column: 62,
      range: [
        31059,
        31059,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '">"',
    yylloc: {
      first_line: 574,
      first_column: 0,
      last_line: 574,
      last_column: 3,
      range: [
        31279,
        31282,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 574,
      first_column: 3,
      last_line: 574,
      last_column: 40,
      range: [
        31282,
        31319,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.popState();',
    yylloc: {
      first_line: 574,
      first_column: 40,
      last_line: 574,
      last_column: 56,
      range: [
        31319,
        31335,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 574,
      first_column: 56,
      last_line: 575,
      last_column: 40,
      range: [
        31335,
        31376,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.unput(yytext);',
    yylloc: {
      first_line: 575,
      first_column: 40,
      last_line: 575,
      last_column: 59,
      range: [
        31376,
        31395,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 575,
      first_column: 59,
      last_line: 576,
      last_column: 40,
      range: [
        31395,
        31436,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 576,
      first_column: 40,
      last_line: 576,
      last_column: 47,
      range: [
        31436,
        31443,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'OPTIONS_END'",
    yylloc: {
      first_line: 576,
      first_column: 47,
      last_line: 576,
      last_column: 60,
      range: [
        31443,
        31456,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 576,
      first_column: 60,
      last_line: 576,
      last_column: 61,
      range: [
        31456,
        31457,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 576,
      first_column: 61,
      last_line: 576,
      last_column: 61,
      range: [
        31457,
        31457,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '","',
    yylloc: {
      first_line: 577,
      first_column: 0,
      last_line: 577,
      last_column: 3,
      range: [
        31458,
        31461,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 577,
      first_column: 3,
      last_line: 577,
      last_column: 40,
      range: [
        31461,
        31498,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 577,
      first_column: 40,
      last_line: 577,
      last_column: 47,
      range: [
        31498,
        31505,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "','",
    yylloc: {
      first_line: 577,
      first_column: 47,
      last_line: 577,
      last_column: 50,
      range: [
        31505,
        31508,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 577,
      first_column: 50,
      last_line: 577,
      last_column: 51,
      range: [
        31508,
        31509,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 577,
      first_column: 51,
      last_line: 577,
      last_column: 51,
      range: [
        31509,
        31509,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"*"',
    yylloc: {
      first_line: 578,
      first_column: 0,
      last_line: 578,
      last_column: 3,
      range: [
        31510,
        31513,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 578,
      first_column: 3,
      last_line: 578,
      last_column: 40,
      range: [
        31513,
        31550,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 578,
      first_column: 40,
      last_line: 578,
      last_column: 47,
      range: [
        31550,
        31557,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'*'",
    yylloc: {
      first_line: 578,
      first_column: 47,
      last_line: 578,
      last_column: 50,
      range: [
        31557,
        31560,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 578,
      first_column: 50,
      last_line: 578,
      last_column: 51,
      range: [
        31560,
        31561,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 578,
      first_column: 51,
      last_line: 578,
      last_column: 51,
      range: [
        31561,
        31561,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"<"',
    yylloc: {
      first_line: 581,
      first_column: 0,
      last_line: 581,
      last_column: 3,
      range: [
        31640,
        31643,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ID}',
    yylloc: {
      first_line: 581,
      first_column: 3,
      last_line: 581,
      last_column: 7,
      range: [
        31643,
        31647,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '">"',
    yylloc: {
      first_line: 581,
      first_column: 7,
      last_line: 581,
      last_column: 10,
      range: [
        31647,
        31650,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                              ',
    yylloc: {
      first_line: 581,
      first_column: 10,
      last_line: 581,
      last_column: 40,
      range: [
        31650,
        31680,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yytext = this.matches[1];',
    yylloc: {
      first_line: 581,
      first_column: 40,
      last_line: 581,
      last_column: 65,
      range: [
        31680,
        31705,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 581,
      first_column: 65,
      last_line: 582,
      last_column: 40,
      range: [
        31705,
        31746,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 582,
      first_column: 40,
      last_line: 582,
      last_column: 47,
      range: [
        31746,
        31753,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'TOKEN_TYPE'",
    yylloc: {
      first_line: 582,
      first_column: 47,
      last_line: 582,
      last_column: 59,
      range: [
        31753,
        31765,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 582,
      first_column: 59,
      last_line: 582,
      last_column: 60,
      range: [
        31765,
        31766,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 582,
      first_column: 60,
      last_line: 582,
      last_column: 60,
      range: [
        31766,
        31766,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{HEX_NUMBER}',
    yylloc: {
      first_line: 584,
      first_column: 0,
      last_line: 584,
      last_column: 12,
      range: [
        31768,
        31780,
      ],
    },
  },
  {
    id: 43,
    token: '"SPECIAL_GROUP"',
    yytext: '(?!',
    yylloc: {
      first_line: 584,
      first_column: 12,
      last_line: 584,
      last_column: 15,
      range: [
        31780,
        31783,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 584,
      first_column: 15,
      last_line: 584,
      last_column: 16,
      range: [
        31783,
        31784,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ANY_LITERAL_CHAR}',
    yylloc: {
      first_line: 584,
      first_column: 16,
      last_line: 584,
      last_column: 34,
      range: [
        31784,
        31802,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 584,
      first_column: 34,
      last_line: 584,
      last_column: 35,
      range: [
        31802,
        31803,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 584,
      first_column: 35,
      last_line: 584,
      last_column: 36,
      range: [
        31803,
        31804,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                        ',
    yylloc: {
      first_line: 585,
      first_column: 0,
      last_line: 585,
      last_column: 40,
      range: [
        31805,
        31845,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yytext = parseInt(yytext, 16); ',
    yylloc: {
      first_line: 585,
      first_column: 40,
      last_line: 585,
      last_column: 71,
      range: [
        31845,
        31876,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 585,
      first_column: 71,
      last_line: 586,
      last_column: 40,
      range: [
        31876,
        31917,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 586,
      first_column: 40,
      last_line: 586,
      last_column: 47,
      range: [
        31917,
        31924,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'INTEGER'",
    yylloc: {
      first_line: 586,
      first_column: 47,
      last_line: 586,
      last_column: 56,
      range: [
        31924,
        31933,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 586,
      first_column: 56,
      last_line: 586,
      last_column: 57,
      range: [
        31933,
        31934,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 586,
      first_column: 57,
      last_line: 586,
      last_column: 57,
      range: [
        31934,
        31934,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '-',
    yylloc: {
      first_line: 588,
      first_column: 0,
      last_line: 588,
      last_column: 1,
      range: [
        31936,
        31937,
      ],
    },
  },
  {
    id: 12,
    token: '"?"',
    yytext: '?',
    yylloc: {
      first_line: 588,
      first_column: 1,
      last_line: 588,
      last_column: 2,
      range: [
        31937,
        31938,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{DECIMAL_NUMBER}',
    yylloc: {
      first_line: 588,
      first_column: 2,
      last_line: 588,
      last_column: 18,
      range: [
        31938,
        31954,
      ],
    },
  },
  {
    id: 43,
    token: '"SPECIAL_GROUP"',
    yytext: '(?!',
    yylloc: {
      first_line: 588,
      first_column: 18,
      last_line: 588,
      last_column: 21,
      range: [
        31954,
        31957,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 588,
      first_column: 21,
      last_line: 588,
      last_column: 22,
      range: [
        31957,
        31958,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ANY_LITERAL_CHAR}',
    yylloc: {
      first_line: 588,
      first_column: 22,
      last_line: 588,
      last_column: 40,
      range: [
        31958,
        31976,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 588,
      first_column: 40,
      last_line: 588,
      last_column: 41,
      range: [
        31976,
        31977,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 588,
      first_column: 41,
      last_line: 588,
      last_column: 42,
      range: [
        31977,
        31978,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                        ',
    yylloc: {
      first_line: 589,
      first_column: 0,
      last_line: 589,
      last_column: 40,
      range: [
        31979,
        32019,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yytext = parseInt(yytext, 10); ',
    yylloc: {
      first_line: 589,
      first_column: 40,
      last_line: 589,
      last_column: 71,
      range: [
        32019,
        32050,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 589,
      first_column: 71,
      last_line: 590,
      last_column: 40,
      range: [
        32050,
        32091,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 590,
      first_column: 40,
      last_line: 590,
      last_column: 47,
      range: [
        32091,
        32098,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'INTEGER'",
    yylloc: {
      first_line: 590,
      first_column: 47,
      last_line: 590,
      last_column: 56,
      range: [
        32098,
        32107,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 590,
      first_column: 56,
      last_line: 590,
      last_column: 57,
      range: [
        32107,
        32108,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 590,
      first_column: 57,
      last_line: 590,
      last_column: 57,
      range: [
        32108,
        32108,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ANY_LITERAL_CHAR}',
    yylloc: {
      first_line: 592,
      first_column: 0,
      last_line: 592,
      last_column: 18,
      range: [
        32110,
        32128,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 592,
      first_column: 18,
      last_line: 592,
      last_column: 19,
      range: [
        32128,
        32129,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                     ',
    yylloc: {
      first_line: 592,
      first_column: 19,
      last_line: 592,
      last_column: 40,
      range: [
        32129,
        32150,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 592,
      first_column: 40,
      last_line: 592,
      last_column: 47,
      range: [
        32150,
        32157,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'OPTION_VALUE'",
    yylloc: {
      first_line: 592,
      first_column: 47,
      last_line: 592,
      last_column: 61,
      range: [
        32157,
        32171,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 592,
      first_column: 61,
      last_line: 592,
      last_column: 62,
      range: [
        32171,
        32172,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 592,
      first_column: 62,
      last_line: 592,
      last_column: 62,
      range: [
        32172,
        32172,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 595,
      first_column: 0,
      last_line: 595,
      last_column: 4,
      range: [
        32265,
        32269,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{WS}',
    yylloc: {
      first_line: 595,
      first_column: 4,
      last_line: 595,
      last_column: 8,
      range: [
        32269,
        32273,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 595,
      first_column: 8,
      last_line: 595,
      last_column: 9,
      range: [
        32273,
        32274,
      ],
    },
  },
  {
    id: 43,
    token: '"SPECIAL_GROUP"',
    yytext: '(?=',
    yylloc: {
      first_line: 595,
      first_column: 9,
      last_line: 595,
      last_column: 12,
      range: [
        32274,
        32277,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\S',
    yylloc: {
      first_line: 595,
      first_column: 12,
      last_line: 595,
      last_column: 14,
      range: [
        32277,
        32279,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 595,
      first_column: 14,
      last_line: 595,
      last_column: 15,
      range: [
        32279,
        32280,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                         ',
    yylloc: {
      first_line: 595,
      first_column: 15,
      last_line: 595,
      last_column: 40,
      range: [
        32280,
        32305,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '/* ignore */',
    yylloc: {
      first_line: 595,
      first_column: 40,
      last_line: 595,
      last_column: 52,
      range: [
        32305,
        32317,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 595,
      first_column: 52,
      last_line: 595,
      last_column: 52,
      range: [
        32317,
        32317,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 597,
      first_column: 0,
      last_line: 597,
      last_column: 4,
      range: [
        32381,
        32385,
      ],
    },
  },
  {
    id: 37,
    token: '"ENTIRE_ACTION"',
    yytext: {
      srcCode: `
                                            // lexer rule condition sets can only be terminated by a '>':
                                            if (!yy.__inside_condition_set__) {
                                                this.popState();
                                                this.unput(yytext);
                                                return 'OPTIONS_END';
                                            } 
                                            /* else: ignore */
                                        `,
      shiftCount: 542,
      action_start_marker: '%{',
      action_end_marker: '%}',
    },
    yylloc: {
      first_line: 597,
      first_column: 40,
      last_line: 605,
      last_column: 42,
      range: [
        32421,
        32965,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{WS}',
    yylloc: {
      first_line: 606,
      first_column: 0,
      last_line: 606,
      last_column: 4,
      range: [
        32966,
        32970,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 606,
      first_column: 4,
      last_line: 606,
      last_column: 5,
      range: [
        32970,
        32971,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                   ',
    yylloc: {
      first_line: 606,
      first_column: 5,
      last_line: 606,
      last_column: 40,
      range: [
        32971,
        33006,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '/* skip whitespace */',
    yylloc: {
      first_line: 606,
      first_column: 40,
      last_line: 606,
      last_column: 61,
      range: [
        33006,
        33027,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 606,
      first_column: 61,
      last_line: 606,
      last_column: 61,
      range: [
        33027,
        33027,
      ],
    },
  },
  {
    id: 5,
    token: '"}"',
    yytext: '}',
    yylloc: {
      first_line: 608,
      first_column: 0,
      last_line: 608,
      last_column: 1,
      range: [
        33029,
        33030,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 613,
      first_column: 0,
      last_line: 613,
      last_column: 1,
      range: [
        33110,
        33111,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'INITIAL',
    yylloc: {
      first_line: 613,
      first_column: 1,
      last_line: 613,
      last_column: 8,
      range: [
        33111,
        33118,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 613,
      first_column: 8,
      last_line: 613,
      last_column: 8,
      range: [
        33118,
        33118,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 613,
      first_column: 8,
      last_line: 613,
      last_column: 9,
      range: [
        33118,
        33119,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ID}',
    yylloc: {
      first_line: 613,
      first_column: 9,
      last_line: 613,
      last_column: 13,
      range: [
        33119,
        33123,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                           ',
    yylloc: {
      first_line: 613,
      first_column: 13,
      last_line: 613,
      last_column: 40,
      range: [
        33123,
        33150,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 613,
      first_column: 40,
      last_line: 613,
      last_column: 55,
      range: [
        33150,
        33165,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'macro'",
    yylloc: {
      first_line: 613,
      first_column: 55,
      last_line: 613,
      last_column: 62,
      range: [
        33165,
        33172,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 613,
      first_column: 62,
      last_line: 613,
      last_column: 64,
      range: [
        33172,
        33174,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 613,
      first_column: 64,
      last_line: 614,
      last_column: 40,
      range: [
        33174,
        33215,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 614,
      first_column: 40,
      last_line: 614,
      last_column: 47,
      range: [
        33215,
        33222,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'MACRO_NAME'",
    yylloc: {
      first_line: 614,
      first_column: 47,
      last_line: 614,
      last_column: 59,
      range: [
        33222,
        33234,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 614,
      first_column: 59,
      last_line: 614,
      last_column: 60,
      range: [
        33234,
        33235,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 614,
      first_column: 60,
      last_line: 614,
      last_column: 60,
      range: [
        33235,
        33235,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 616,
      first_column: 0,
      last_line: 616,
      last_column: 1,
      range: [
        33237,
        33238,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'macro',
    yylloc: {
      first_line: 616,
      first_column: 1,
      last_line: 616,
      last_column: 6,
      range: [
        33238,
        33243,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 616,
      first_column: 6,
      last_line: 616,
      last_column: 6,
      range: [
        33243,
        33243,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 616,
      first_column: 6,
      last_line: 616,
      last_column: 7,
      range: [
        33243,
        33244,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 616,
      first_column: 7,
      last_line: 616,
      last_column: 11,
      range: [
        33244,
        33248,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 616,
      first_column: 11,
      last_line: 616,
      last_column: 12,
      range: [
        33248,
        33249,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                            ',
    yylloc: {
      first_line: 616,
      first_column: 12,
      last_line: 616,
      last_column: 40,
      range: [
        33249,
        33277,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.popState();',
    yylloc: {
      first_line: 616,
      first_column: 40,
      last_line: 616,
      last_column: 56,
      range: [
        33277,
        33293,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 616,
      first_column: 56,
      last_line: 617,
      last_column: 40,
      range: [
        33293,
        33334,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.unput(yytext);',
    yylloc: {
      first_line: 617,
      first_column: 40,
      last_line: 617,
      last_column: 59,
      range: [
        33334,
        33353,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 617,
      first_column: 59,
      last_line: 618,
      last_column: 40,
      range: [
        33353,
        33394,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 618,
      first_column: 40,
      last_line: 618,
      last_column: 47,
      range: [
        33394,
        33401,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'MACRO_END'",
    yylloc: {
      first_line: 618,
      first_column: 47,
      last_line: 618,
      last_column: 58,
      range: [
        33401,
        33412,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 618,
      first_column: 58,
      last_line: 618,
      last_column: 59,
      range: [
        33412,
        33413,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 618,
      first_column: 59,
      last_line: 618,
      last_column: 59,
      range: [
        33413,
        33413,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 621,
      first_column: 0,
      last_line: 621,
      last_column: 1,
      range: [
        33479,
        33480,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'macro',
    yylloc: {
      first_line: 621,
      first_column: 1,
      last_line: 621,
      last_column: 6,
      range: [
        33480,
        33485,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 621,
      first_column: 6,
      last_line: 621,
      last_column: 6,
      range: [
        33485,
        33485,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 621,
      first_column: 6,
      last_line: 621,
      last_column: 7,
      range: [
        33485,
        33486,
      ],
    },
  },
  {
    id: 17,
    token: '"$"',
    yytext: '<<EOF>>',
    yylloc: {
      first_line: 621,
      first_column: 7,
      last_line: 621,
      last_column: 14,
      range: [
        33486,
        33493,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                          ',
    yylloc: {
      first_line: 621,
      first_column: 14,
      last_line: 621,
      last_column: 40,
      range: [
        33493,
        33519,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.popState();',
    yylloc: {
      first_line: 621,
      first_column: 40,
      last_line: 621,
      last_column: 56,
      range: [
        33519,
        33535,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 621,
      first_column: 56,
      last_line: 622,
      last_column: 40,
      range: [
        33535,
        33576,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.unput(yytext);',
    yylloc: {
      first_line: 622,
      first_column: 40,
      last_line: 622,
      last_column: 59,
      range: [
        33576,
        33595,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 622,
      first_column: 59,
      last_line: 623,
      last_column: 40,
      range: [
        33595,
        33636,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 623,
      first_column: 40,
      last_line: 623,
      last_column: 47,
      range: [
        33636,
        33643,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'MACRO_END'",
    yylloc: {
      first_line: 623,
      first_column: 47,
      last_line: 623,
      last_column: 58,
      range: [
        33643,
        33654,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 623,
      first_column: 58,
      last_line: 623,
      last_column: 59,
      range: [
        33654,
        33655,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 623,
      first_column: 59,
      last_line: 623,
      last_column: 59,
      range: [
        33655,
        33655,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 625,
      first_column: 0,
      last_line: 625,
      last_column: 4,
      range: [
        33657,
        33661,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 625,
      first_column: 4,
      last_line: 625,
      last_column: 5,
      range: [
        33661,
        33662,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                   ',
    yylloc: {
      first_line: 625,
      first_column: 5,
      last_line: 625,
      last_column: 40,
      range: [
        33662,
        33697,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '/* skip newlines */',
    yylloc: {
      first_line: 625,
      first_column: 40,
      last_line: 625,
      last_column: 59,
      range: [
        33697,
        33716,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 625,
      first_column: 59,
      last_line: 625,
      last_column: 59,
      range: [
        33716,
        33716,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{WS}',
    yylloc: {
      first_line: 626,
      first_column: 0,
      last_line: 626,
      last_column: 4,
      range: [
        33717,
        33721,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 626,
      first_column: 4,
      last_line: 626,
      last_column: 5,
      range: [
        33721,
        33722,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                   ',
    yylloc: {
      first_line: 626,
      first_column: 5,
      last_line: 626,
      last_column: 40,
      range: [
        33722,
        33757,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '/* skip whitespace */',
    yylloc: {
      first_line: 626,
      first_column: 40,
      last_line: 626,
      last_column: 61,
      range: [
        33757,
        33778,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 626,
      first_column: 61,
      last_line: 626,
      last_column: 61,
      range: [
        33778,
        33778,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '"',
    yylloc: {
      first_line: 628,
      first_column: 0,
      last_line: 628,
      last_column: 2,
      range: [
        33780,
        33782,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{DOUBLEQUOTED_STRING_CONTENT}',
    yylloc: {
      first_line: 628,
      first_column: 2,
      last_line: 628,
      last_column: 31,
      range: [
        33782,
        33811,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '"',
    yylloc: {
      first_line: 628,
      first_column: 31,
      last_line: 628,
      last_column: 33,
      range: [
        33811,
        33813,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '       ',
    yylloc: {
      first_line: 628,
      first_column: 33,
      last_line: 628,
      last_column: 40,
      range: [
        33813,
        33820,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 628,
      first_column: 40,
      last_line: 628,
      last_column: 47,
      range: [
        33820,
        33827,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'STRING_LIT'",
    yylloc: {
      first_line: 628,
      first_column: 47,
      last_line: 628,
      last_column: 59,
      range: [
        33827,
        33839,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 628,
      first_column: 59,
      last_line: 628,
      last_column: 60,
      range: [
        33839,
        33840,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 628,
      first_column: 60,
      last_line: 628,
      last_column: 60,
      range: [
        33840,
        33840,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: "'",
    yylloc: {
      first_line: 629,
      first_column: 0,
      last_line: 629,
      last_column: 2,
      range: [
        33841,
        33843,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{QUOTED_STRING_CONTENT}',
    yylloc: {
      first_line: 629,
      first_column: 2,
      last_line: 629,
      last_column: 25,
      range: [
        33843,
        33866,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: "'",
    yylloc: {
      first_line: 629,
      first_column: 25,
      last_line: 629,
      last_column: 27,
      range: [
        33866,
        33868,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '             ',
    yylloc: {
      first_line: 629,
      first_column: 27,
      last_line: 629,
      last_column: 40,
      range: [
        33868,
        33881,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 629,
      first_column: 40,
      last_line: 629,
      last_column: 47,
      range: [
        33881,
        33888,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'STRING_LIT'",
    yylloc: {
      first_line: 629,
      first_column: 47,
      last_line: 629,
      last_column: 59,
      range: [
        33888,
        33900,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 629,
      first_column: 59,
      last_line: 629,
      last_column: 60,
      range: [
        33900,
        33901,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 629,
      first_column: 60,
      last_line: 629,
      last_column: 60,
      range: [
        33901,
        33901,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '`',
    yylloc: {
      first_line: 630,
      first_column: 0,
      last_line: 630,
      last_column: 2,
      range: [
        33902,
        33904,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ES2017_STRING_CONTENT}',
    yylloc: {
      first_line: 630,
      first_column: 2,
      last_line: 630,
      last_column: 25,
      range: [
        33904,
        33927,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '`',
    yylloc: {
      first_line: 630,
      first_column: 25,
      last_line: 630,
      last_column: 27,
      range: [
        33927,
        33929,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '             ',
    yylloc: {
      first_line: 630,
      first_column: 27,
      last_line: 630,
      last_column: 40,
      range: [
        33929,
        33942,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 630,
      first_column: 40,
      last_line: 630,
      last_column: 47,
      range: [
        33942,
        33949,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'STRING_LIT'",
    yylloc: {
      first_line: 630,
      first_column: 47,
      last_line: 630,
      last_column: 59,
      range: [
        33949,
        33961,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 630,
      first_column: 59,
      last_line: 630,
      last_column: 60,
      range: [
        33961,
        33962,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 630,
      first_column: 60,
      last_line: 630,
      last_column: 60,
      range: [
        33962,
        33962,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ANY_LITERAL_CHAR}',
    yylloc: {
      first_line: 634,
      first_column: 0,
      last_line: 634,
      last_column: 18,
      range: [
        34071,
        34089,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 634,
      first_column: 18,
      last_line: 634,
      last_column: 19,
      range: [
        34089,
        34090,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                     ',
    yylloc: {
      first_line: 634,
      first_column: 19,
      last_line: 634,
      last_column: 40,
      range: [
        34090,
        34111,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// accept any non-regex, non-lex, non-string-delim,',
    yylloc: {
      first_line: 634,
      first_column: 40,
      last_line: 634,
      last_column: 91,
      range: [
        34111,
        34162,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 634,
      first_column: 91,
      last_line: 635,
      last_column: 40,
      range: [
        34162,
        34203,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// non-escape-starter, non-space character as-is',
    yylloc: {
      first_line: 635,
      first_column: 40,
      last_line: 635,
      last_column: 88,
      range: [
        34203,
        34251,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 635,
      first_column: 88,
      last_line: 636,
      last_column: 40,
      range: [
        34251,
        34292,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 636,
      first_column: 40,
      last_line: 636,
      last_column: 47,
      range: [
        34292,
        34299,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'CHARACTER_LIT'",
    yylloc: {
      first_line: 636,
      first_column: 47,
      last_line: 636,
      last_column: 62,
      range: [
        34299,
        34314,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 636,
      first_column: 62,
      last_line: 636,
      last_column: 63,
      range: [
        34314,
        34315,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 636,
      first_column: 63,
      last_line: 636,
      last_column: 63,
      range: [
        34315,
        34315,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"["',
    yylloc: {
      first_line: 638,
      first_column: 0,
      last_line: 638,
      last_column: 3,
      range: [
        34317,
        34320,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 638,
      first_column: 3,
      last_line: 638,
      last_column: 40,
      range: [
        34320,
        34357,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 638,
      first_column: 40,
      last_line: 638,
      last_column: 55,
      range: [
        34357,
        34372,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'set'",
    yylloc: {
      first_line: 638,
      first_column: 55,
      last_line: 638,
      last_column: 60,
      range: [
        34372,
        34377,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 638,
      first_column: 60,
      last_line: 638,
      last_column: 62,
      range: [
        34377,
        34379,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 638,
      first_column: 62,
      last_line: 639,
      last_column: 40,
      range: [
        34379,
        34420,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 639,
      first_column: 40,
      last_line: 639,
      last_column: 47,
      range: [
        34420,
        34427,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'REGEX_SET_START'",
    yylloc: {
      first_line: 639,
      first_column: 47,
      last_line: 639,
      last_column: 64,
      range: [
        34427,
        34444,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 639,
      first_column: 64,
      last_line: 639,
      last_column: 65,
      range: [
        34444,
        34445,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 639,
      first_column: 65,
      last_line: 639,
      last_column: 65,
      range: [
        34445,
        34445,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"|"',
    yylloc: {
      first_line: 640,
      first_column: 0,
      last_line: 640,
      last_column: 3,
      range: [
        34446,
        34449,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 640,
      first_column: 3,
      last_line: 640,
      last_column: 40,
      range: [
        34449,
        34486,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 640,
      first_column: 40,
      last_line: 640,
      last_column: 47,
      range: [
        34486,
        34493,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'|'",
    yylloc: {
      first_line: 640,
      first_column: 47,
      last_line: 640,
      last_column: 50,
      range: [
        34493,
        34496,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 640,
      first_column: 50,
      last_line: 640,
      last_column: 51,
      range: [
        34496,
        34497,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 640,
      first_column: 51,
      last_line: 640,
      last_column: 51,
      range: [
        34497,
        34497,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"(?:"',
    yylloc: {
      first_line: 643,
      first_column: 0,
      last_line: 643,
      last_column: 5,
      range: [
        34594,
        34599,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                   ',
    yylloc: {
      first_line: 643,
      first_column: 5,
      last_line: 643,
      last_column: 40,
      range: [
        34599,
        34634,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 643,
      first_column: 40,
      last_line: 643,
      last_column: 47,
      range: [
        34634,
        34641,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'SPECIAL_GROUP'",
    yylloc: {
      first_line: 643,
      first_column: 47,
      last_line: 643,
      last_column: 62,
      range: [
        34641,
        34656,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 643,
      first_column: 62,
      last_line: 643,
      last_column: 63,
      range: [
        34656,
        34657,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 643,
      first_column: 63,
      last_line: 643,
      last_column: 63,
      range: [
        34657,
        34657,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"(?="',
    yylloc: {
      first_line: 644,
      first_column: 0,
      last_line: 644,
      last_column: 5,
      range: [
        34658,
        34663,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                   ',
    yylloc: {
      first_line: 644,
      first_column: 5,
      last_line: 644,
      last_column: 40,
      range: [
        34663,
        34698,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 644,
      first_column: 40,
      last_line: 644,
      last_column: 47,
      range: [
        34698,
        34705,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'SPECIAL_GROUP'",
    yylloc: {
      first_line: 644,
      first_column: 47,
      last_line: 644,
      last_column: 62,
      range: [
        34705,
        34720,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 644,
      first_column: 62,
      last_line: 644,
      last_column: 63,
      range: [
        34720,
        34721,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 644,
      first_column: 63,
      last_line: 644,
      last_column: 63,
      range: [
        34721,
        34721,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"(?!"',
    yylloc: {
      first_line: 645,
      first_column: 0,
      last_line: 645,
      last_column: 5,
      range: [
        34722,
        34727,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                   ',
    yylloc: {
      first_line: 645,
      first_column: 5,
      last_line: 645,
      last_column: 40,
      range: [
        34727,
        34762,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 645,
      first_column: 40,
      last_line: 645,
      last_column: 47,
      range: [
        34762,
        34769,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'SPECIAL_GROUP'",
    yylloc: {
      first_line: 645,
      first_column: 47,
      last_line: 645,
      last_column: 62,
      range: [
        34769,
        34784,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 645,
      first_column: 62,
      last_line: 645,
      last_column: 63,
      range: [
        34784,
        34785,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 645,
      first_column: 63,
      last_line: 645,
      last_column: 63,
      range: [
        34785,
        34785,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"(?<="',
    yylloc: {
      first_line: 647,
      first_column: 0,
      last_line: 647,
      last_column: 6,
      range: [
        34876,
        34882,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                  ',
    yylloc: {
      first_line: 647,
      first_column: 6,
      last_line: 647,
      last_column: 40,
      range: [
        34882,
        34916,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 647,
      first_column: 40,
      last_line: 647,
      last_column: 47,
      range: [
        34916,
        34923,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'SPECIAL_GROUP'",
    yylloc: {
      first_line: 647,
      first_column: 47,
      last_line: 647,
      last_column: 62,
      range: [
        34923,
        34938,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 647,
      first_column: 62,
      last_line: 647,
      last_column: 63,
      range: [
        34938,
        34939,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 647,
      first_column: 63,
      last_line: 647,
      last_column: 63,
      range: [
        34939,
        34939,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"(?<!"',
    yylloc: {
      first_line: 648,
      first_column: 0,
      last_line: 648,
      last_column: 6,
      range: [
        34940,
        34946,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                  ',
    yylloc: {
      first_line: 648,
      first_column: 6,
      last_line: 648,
      last_column: 40,
      range: [
        34946,
        34980,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 648,
      first_column: 40,
      last_line: 648,
      last_column: 47,
      range: [
        34980,
        34987,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'SPECIAL_GROUP'",
    yylloc: {
      first_line: 648,
      first_column: 47,
      last_line: 648,
      last_column: 62,
      range: [
        34987,
        35002,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 648,
      first_column: 62,
      last_line: 648,
      last_column: 63,
      range: [
        35002,
        35003,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 648,
      first_column: 63,
      last_line: 648,
      last_column: 63,
      range: [
        35003,
        35003,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"("',
    yylloc: {
      first_line: 650,
      first_column: 0,
      last_line: 650,
      last_column: 3,
      range: [
        35005,
        35008,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 650,
      first_column: 3,
      last_line: 650,
      last_column: 40,
      range: [
        35008,
        35045,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 650,
      first_column: 40,
      last_line: 650,
      last_column: 47,
      range: [
        35045,
        35052,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'('",
    yylloc: {
      first_line: 650,
      first_column: 47,
      last_line: 650,
      last_column: 50,
      range: [
        35052,
        35055,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 650,
      first_column: 50,
      last_line: 650,
      last_column: 51,
      range: [
        35055,
        35056,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 650,
      first_column: 51,
      last_line: 650,
      last_column: 51,
      range: [
        35056,
        35056,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '")"',
    yylloc: {
      first_line: 651,
      first_column: 0,
      last_line: 651,
      last_column: 3,
      range: [
        35057,
        35060,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 651,
      first_column: 3,
      last_line: 651,
      last_column: 40,
      range: [
        35060,
        35097,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 651,
      first_column: 40,
      last_line: 651,
      last_column: 47,
      range: [
        35097,
        35104,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "')'",
    yylloc: {
      first_line: 651,
      first_column: 47,
      last_line: 651,
      last_column: 50,
      range: [
        35104,
        35107,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 651,
      first_column: 50,
      last_line: 651,
      last_column: 51,
      range: [
        35107,
        35108,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 651,
      first_column: 51,
      last_line: 651,
      last_column: 51,
      range: [
        35108,
        35108,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"+"',
    yylloc: {
      first_line: 652,
      first_column: 0,
      last_line: 652,
      last_column: 3,
      range: [
        35109,
        35112,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 652,
      first_column: 3,
      last_line: 652,
      last_column: 40,
      range: [
        35112,
        35149,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 652,
      first_column: 40,
      last_line: 652,
      last_column: 47,
      range: [
        35149,
        35156,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'+'",
    yylloc: {
      first_line: 652,
      first_column: 47,
      last_line: 652,
      last_column: 50,
      range: [
        35156,
        35159,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 652,
      first_column: 50,
      last_line: 652,
      last_column: 51,
      range: [
        35159,
        35160,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 652,
      first_column: 51,
      last_line: 652,
      last_column: 51,
      range: [
        35160,
        35160,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"*"',
    yylloc: {
      first_line: 653,
      first_column: 0,
      last_line: 653,
      last_column: 3,
      range: [
        35161,
        35164,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 653,
      first_column: 3,
      last_line: 653,
      last_column: 40,
      range: [
        35164,
        35201,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 653,
      first_column: 40,
      last_line: 653,
      last_column: 47,
      range: [
        35201,
        35208,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'*'",
    yylloc: {
      first_line: 653,
      first_column: 47,
      last_line: 653,
      last_column: 50,
      range: [
        35208,
        35211,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 653,
      first_column: 50,
      last_line: 653,
      last_column: 51,
      range: [
        35211,
        35212,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 653,
      first_column: 51,
      last_line: 653,
      last_column: 51,
      range: [
        35212,
        35212,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"?"',
    yylloc: {
      first_line: 654,
      first_column: 0,
      last_line: 654,
      last_column: 3,
      range: [
        35213,
        35216,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 654,
      first_column: 3,
      last_line: 654,
      last_column: 40,
      range: [
        35216,
        35253,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 654,
      first_column: 40,
      last_line: 654,
      last_column: 47,
      range: [
        35253,
        35260,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'?'",
    yylloc: {
      first_line: 654,
      first_column: 47,
      last_line: 654,
      last_column: 50,
      range: [
        35260,
        35263,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 654,
      first_column: 50,
      last_line: 654,
      last_column: 51,
      range: [
        35263,
        35264,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 654,
      first_column: 51,
      last_line: 654,
      last_column: 51,
      range: [
        35264,
        35264,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"^"',
    yylloc: {
      first_line: 655,
      first_column: 0,
      last_line: 655,
      last_column: 3,
      range: [
        35265,
        35268,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 655,
      first_column: 3,
      last_line: 655,
      last_column: 40,
      range: [
        35268,
        35305,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 655,
      first_column: 40,
      last_line: 655,
      last_column: 47,
      range: [
        35305,
        35312,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'^'",
    yylloc: {
      first_line: 655,
      first_column: 47,
      last_line: 655,
      last_column: 50,
      range: [
        35312,
        35315,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 655,
      first_column: 50,
      last_line: 655,
      last_column: 51,
      range: [
        35315,
        35316,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 655,
      first_column: 51,
      last_line: 655,
      last_column: 51,
      range: [
        35316,
        35316,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '","',
    yylloc: {
      first_line: 656,
      first_column: 0,
      last_line: 656,
      last_column: 3,
      range: [
        35317,
        35320,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 656,
      first_column: 3,
      last_line: 656,
      last_column: 40,
      range: [
        35320,
        35357,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 656,
      first_column: 40,
      last_line: 656,
      last_column: 47,
      range: [
        35357,
        35364,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "','",
    yylloc: {
      first_line: 656,
      first_column: 47,
      last_line: 656,
      last_column: 50,
      range: [
        35364,
        35367,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 656,
      first_column: 50,
      last_line: 656,
      last_column: 51,
      range: [
        35367,
        35368,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 656,
      first_column: 51,
      last_line: 656,
      last_column: 51,
      range: [
        35368,
        35368,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"<<EOF>>"',
    yylloc: {
      first_line: 657,
      first_column: 0,
      last_line: 657,
      last_column: 9,
      range: [
        35369,
        35378,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                               ',
    yylloc: {
      first_line: 657,
      first_column: 9,
      last_line: 657,
      last_column: 40,
      range: [
        35378,
        35409,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 657,
      first_column: 40,
      last_line: 657,
      last_column: 47,
      range: [
        35409,
        35416,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'$'",
    yylloc: {
      first_line: 657,
      first_column: 47,
      last_line: 657,
      last_column: 50,
      range: [
        35416,
        35419,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 657,
      first_column: 50,
      last_line: 657,
      last_column: 51,
      range: [
        35419,
        35420,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 657,
      first_column: 51,
      last_line: 657,
      last_column: 51,
      range: [
        35420,
        35420,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"<"',
    yylloc: {
      first_line: 659,
      first_column: 0,
      last_line: 659,
      last_column: 3,
      range: [
        35422,
        35425,
      ],
    },
  },
  {
    id: 37,
    token: '"ENTIRE_ACTION"',
    yytext: {
      srcCode: `
                                            // '<' can only start a condition when it's at the very start of a regex rule or {...} regex rule set.
                                            // Either way, '<' must be at the start of the line, or it cannot be a condition starter but only
                                            // serve as a literal character in a regex.
                                            if (yylloc.first_column === 0) {
                                                yy.__inside_condition_set__ = true;
                                                this.pushState('options');
                                                return '<';
                                            }
                                            return 'CHARACTER_LIT';
                                        `,
      shiftCount: 830,
      action_start_marker: '%{',
      action_end_marker: '%}',
    },
    yylloc: {
      first_line: 659,
      first_column: 40,
      last_line: 669,
      last_column: 42,
      range: [
        35462,
        36294,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '">"',
    yylloc: {
      first_line: 670,
      first_column: 0,
      last_line: 670,
      last_column: 3,
      range: [
        36295,
        36298,
      ],
    },
  },
  {
    id: 37,
    token: '"ENTIRE_ACTION"',
    yytext: {
      srcCode: `
                                            if (yy.__inside_condition_set__) {
                                                yy.__inside_condition_set__ = false;
                                                return '>';
                                            }
                                            return 'CHARACTER_LIT';
                                        `,
      shiftCount: 381,
      action_start_marker: '%{',
      action_end_marker: '%}',
    },
    yylloc: {
      first_line: 670,
      first_column: 40,
      last_line: 676,
      last_column: 42,
      range: [
        36335,
        36718,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"/!"',
    yylloc: {
      first_line: 678,
      first_column: 0,
      last_line: 678,
      last_column: 4,
      range: [
        36720,
        36724,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                    ',
    yylloc: {
      first_line: 678,
      first_column: 4,
      last_line: 678,
      last_column: 40,
      range: [
        36724,
        36760,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 678,
      first_column: 40,
      last_line: 678,
      last_column: 47,
      range: [
        36760,
        36767,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'/!'",
    yylloc: {
      first_line: 678,
      first_column: 47,
      last_line: 678,
      last_column: 51,
      range: [
        36767,
        36771,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';                    ',
    yylloc: {
      first_line: 678,
      first_column: 51,
      last_line: 678,
      last_column: 72,
      range: [
        36771,
        36792,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// treated as `(?!atom)`',
    yylloc: {
      first_line: 678,
      first_column: 72,
      last_line: 678,
      last_column: 96,
      range: [
        36792,
        36816,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 678,
      first_column: 96,
      last_line: 678,
      last_column: 96,
      range: [
        36816,
        36816,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"/"',
    yylloc: {
      first_line: 679,
      first_column: 0,
      last_line: 679,
      last_column: 3,
      range: [
        36817,
        36820,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 679,
      first_column: 3,
      last_line: 679,
      last_column: 40,
      range: [
        36820,
        36857,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 679,
      first_column: 40,
      last_line: 679,
      last_column: 47,
      range: [
        36857,
        36864,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'/'",
    yylloc: {
      first_line: 679,
      first_column: 47,
      last_line: 679,
      last_column: 50,
      range: [
        36864,
        36867,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';                     ',
    yylloc: {
      first_line: 679,
      first_column: 50,
      last_line: 679,
      last_column: 72,
      range: [
        36867,
        36889,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// treated as `(?=atom)`',
    yylloc: {
      first_line: 679,
      first_column: 72,
      last_line: 679,
      last_column: 96,
      range: [
        36889,
        36913,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 679,
      first_column: 96,
      last_line: 679,
      last_column: 96,
      range: [
        36913,
        36913,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"\\\\"',
    yylloc: {
      first_line: 680,
      first_column: 0,
      last_line: 680,
      last_column: 4,
      range: [
        36914,
        36918,
      ],
    },
  },
  {
    id: 43,
    token: '"SPECIAL_GROUP"',
    yytext: '(?:',
    yylloc: {
      first_line: 680,
      first_column: 4,
      last_line: 680,
      last_column: 7,
      range: [
        36918,
        36921,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 680,
      first_column: 7,
      last_line: 680,
      last_column: 8,
      range: [
        36921,
        36922,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: 'sSbBwWdDpP',
    yylloc: {
      first_line: 680,
      first_column: 8,
      last_line: 680,
      last_column: 18,
      range: [
        36922,
        36932,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 680,
      first_column: 18,
      last_line: 680,
      last_column: 19,
      range: [
        36932,
        36933,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 680,
      first_column: 19,
      last_line: 680,
      last_column: 20,
      range: [
        36933,
        36934,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 680,
      first_column: 20,
      last_line: 680,
      last_column: 21,
      range: [
        36934,
        36935,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: 'rfntv\\\\*+()$',
    yylloc: {
      first_line: 680,
      first_column: 21,
      last_line: 680,
      last_column: 33,
      range: [
        36935,
        36947,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '{',
    yylloc: {
      first_line: 680,
      first_column: 33,
      last_line: 680,
      last_column: 34,
      range: [
        36947,
        36948,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '}|[\\]\\/.^?',
    yylloc: {
      first_line: 680,
      first_column: 34,
      last_line: 680,
      last_column: 44,
      range: [
        36948,
        36958,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 680,
      first_column: 44,
      last_line: 680,
      last_column: 45,
      range: [
        36958,
        36959,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 680,
      first_column: 45,
      last_line: 680,
      last_column: 46,
      range: [
        36959,
        36960,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                        ',
    yylloc: {
      first_line: 681,
      first_column: 0,
      last_line: 681,
      last_column: 40,
      range: [
        36961,
        37001,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 681,
      first_column: 40,
      last_line: 681,
      last_column: 47,
      range: [
        37001,
        37008,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'REGEX_SPECIAL_CHAR'",
    yylloc: {
      first_line: 681,
      first_column: 47,
      last_line: 681,
      last_column: 67,
      range: [
        37008,
        37028,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 681,
      first_column: 67,
      last_line: 681,
      last_column: 68,
      range: [
        37028,
        37029,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 681,
      first_column: 68,
      last_line: 681,
      last_column: 68,
      range: [
        37029,
        37029,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"\\\\"',
    yylloc: {
      first_line: 682,
      first_column: 0,
      last_line: 682,
      last_column: 4,
      range: [
        37030,
        37034,
      ],
    },
  },
  {
    id: 43,
    token: '"SPECIAL_GROUP"',
    yytext: '(?:',
    yylloc: {
      first_line: 682,
      first_column: 4,
      last_line: 682,
      last_column: 7,
      range: [
        37034,
        37037,
      ],
    },
  },
  {
    id: 8,
    token: '"("',
    yytext: '(',
    yylloc: {
      first_line: 682,
      first_column: 7,
      last_line: 682,
      last_column: 8,
      range: [
        37037,
        37038,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 682,
      first_column: 8,
      last_line: 682,
      last_column: 9,
      range: [
        37038,
        37039,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '0-7',
    yylloc: {
      first_line: 682,
      first_column: 9,
      last_line: 682,
      last_column: 12,
      range: [
        37039,
        37042,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 682,
      first_column: 12,
      last_line: 682,
      last_column: 13,
      range: [
        37042,
        37043,
      ],
    },
  },
  {
    id: 52,
    token: '"RANGE_REGEX"',
    yytext: '{1,3}',
    yylloc: {
      first_line: 682,
      first_column: 13,
      last_line: 682,
      last_column: 18,
      range: [
        37043,
        37048,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 682,
      first_column: 18,
      last_line: 682,
      last_column: 19,
      range: [
        37048,
        37049,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 682,
      first_column: 19,
      last_line: 682,
      last_column: 20,
      range: [
        37049,
        37050,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: 'c',
    yylloc: {
      first_line: 682,
      first_column: 20,
      last_line: 682,
      last_column: 21,
      range: [
        37050,
        37051,
      ],
    },
  },
  {
    id: 8,
    token: '"("',
    yytext: '(',
    yylloc: {
      first_line: 682,
      first_column: 21,
      last_line: 682,
      last_column: 22,
      range: [
        37051,
        37052,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 682,
      first_column: 22,
      last_line: 682,
      last_column: 23,
      range: [
        37052,
        37053,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: 'A-Z',
    yylloc: {
      first_line: 682,
      first_column: 23,
      last_line: 682,
      last_column: 26,
      range: [
        37053,
        37056,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 682,
      first_column: 26,
      last_line: 682,
      last_column: 27,
      range: [
        37056,
        37057,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 682,
      first_column: 27,
      last_line: 682,
      last_column: 28,
      range: [
        37057,
        37058,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 682,
      first_column: 28,
      last_line: 682,
      last_column: 29,
      range: [
        37058,
        37059,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: 'x',
    yylloc: {
      first_line: 682,
      first_column: 29,
      last_line: 682,
      last_column: 30,
      range: [
        37059,
        37060,
      ],
    },
  },
  {
    id: 8,
    token: '"("',
    yytext: '(',
    yylloc: {
      first_line: 682,
      first_column: 30,
      last_line: 682,
      last_column: 31,
      range: [
        37060,
        37061,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 682,
      first_column: 31,
      last_line: 682,
      last_column: 32,
      range: [
        37061,
        37062,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '0-9a-fA-F',
    yylloc: {
      first_line: 682,
      first_column: 32,
      last_line: 682,
      last_column: 41,
      range: [
        37062,
        37071,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 682,
      first_column: 41,
      last_line: 682,
      last_column: 42,
      range: [
        37071,
        37072,
      ],
    },
  },
  {
    id: 52,
    token: '"RANGE_REGEX"',
    yytext: '{2}',
    yylloc: {
      first_line: 682,
      first_column: 42,
      last_line: 682,
      last_column: 45,
      range: [
        37072,
        37075,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 682,
      first_column: 45,
      last_line: 682,
      last_column: 46,
      range: [
        37075,
        37076,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 682,
      first_column: 46,
      last_line: 682,
      last_column: 47,
      range: [
        37076,
        37077,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: 'u',
    yylloc: {
      first_line: 682,
      first_column: 47,
      last_line: 682,
      last_column: 48,
      range: [
        37077,
        37078,
      ],
    },
  },
  {
    id: 8,
    token: '"("',
    yytext: '(',
    yylloc: {
      first_line: 682,
      first_column: 48,
      last_line: 682,
      last_column: 49,
      range: [
        37078,
        37079,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 682,
      first_column: 49,
      last_line: 682,
      last_column: 50,
      range: [
        37079,
        37080,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '0-9a-fA-F',
    yylloc: {
      first_line: 682,
      first_column: 50,
      last_line: 682,
      last_column: 59,
      range: [
        37080,
        37089,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 682,
      first_column: 59,
      last_line: 682,
      last_column: 60,
      range: [
        37089,
        37090,
      ],
    },
  },
  {
    id: 52,
    token: '"RANGE_REGEX"',
    yytext: '{4}',
    yylloc: {
      first_line: 682,
      first_column: 60,
      last_line: 682,
      last_column: 63,
      range: [
        37090,
        37093,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 682,
      first_column: 63,
      last_line: 682,
      last_column: 64,
      range: [
        37093,
        37094,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 682,
      first_column: 64,
      last_line: 682,
      last_column: 65,
      range: [
        37094,
        37095,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: 'u',
    yylloc: {
      first_line: 682,
      first_column: 65,
      last_line: 682,
      last_column: 66,
      range: [
        37095,
        37096,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\{',
    yylloc: {
      first_line: 682,
      first_column: 66,
      last_line: 682,
      last_column: 68,
      range: [
        37096,
        37098,
      ],
    },
  },
  {
    id: 8,
    token: '"("',
    yytext: '(',
    yylloc: {
      first_line: 682,
      first_column: 68,
      last_line: 682,
      last_column: 69,
      range: [
        37098,
        37099,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 682,
      first_column: 69,
      last_line: 682,
      last_column: 70,
      range: [
        37099,
        37100,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '0-9a-fA-F',
    yylloc: {
      first_line: 682,
      first_column: 70,
      last_line: 682,
      last_column: 79,
      range: [
        37100,
        37109,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 682,
      first_column: 79,
      last_line: 682,
      last_column: 80,
      range: [
        37109,
        37110,
      ],
    },
  },
  {
    id: 52,
    token: '"RANGE_REGEX"',
    yytext: '{1,8}',
    yylloc: {
      first_line: 682,
      first_column: 80,
      last_line: 682,
      last_column: 85,
      range: [
        37110,
        37115,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 682,
      first_column: 85,
      last_line: 682,
      last_column: 86,
      range: [
        37115,
        37116,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\}',
    yylloc: {
      first_line: 682,
      first_column: 86,
      last_line: 682,
      last_column: 88,
      range: [
        37116,
        37118,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 682,
      first_column: 88,
      last_line: 682,
      last_column: 89,
      range: [
        37118,
        37119,
      ],
    },
  },
  {
    id: 37,
    token: '"ENTIRE_ACTION"',
    yytext: {
      srcCode: `
                                            let m = this.matches;
                                            yytext = NaN;
                                            if (m[1]) {
                                                // [1]: octal char: \`\\012\` --> \\x0A
                                                let v = parseInt(m[1], 8);
                                                yytext = v;
                                            }
                                            else if (m[2]) {
                                                // [2]: CONTROL char: \`\\cA\` --> \\u0001
                                                let v = m[2].charCodeAt(0) - 64;
                                                yytext = v;
                                            }
                                            else if (m[3]) {
                                                // [3]: hex char: \`\\x41\` --> A
                                                let v = parseInt(m[3], 16);
                                                yytext = v;
                                            }
                                            else if (m[4]) {
                                                // [4]: unicode/UTS2 char: \`\\u03c0\` --> PI
                                                let v = parseInt(m[4], 16);
                                                yytext = v;
                                            }
                                            else if (m[5]) {
                                                // [5]: unicode code point: \`\\u{00003c0}\` --> PI
                                                let v = parseInt(m[5], 16);
                                                yytext = v;
                                            }
                                            return 'ESCAPED_CHAR';
                                        `,
      shiftCount: 1886,
      action_start_marker: '%{',
      action_end_marker: '%}',
    },
    yylloc: {
      first_line: 683,
      first_column: 40,
      last_line: 712,
      last_column: 42,
      range: [
        37160,
        39048,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"\\\\"',
    yylloc: {
      first_line: 713,
      first_column: 0,
      last_line: 713,
      last_column: 4,
      range: [
        39049,
        39053,
      ],
    },
  },
  {
    id: 15,
    token: '"."',
    yytext: '.',
    yylloc: {
      first_line: 713,
      first_column: 4,
      last_line: 713,
      last_column: 5,
      range: [
        39053,
        39054,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                   ',
    yylloc: {
      first_line: 713,
      first_column: 5,
      last_line: 713,
      last_column: 40,
      range: [
        39054,
        39089,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yytext = yytext.substring(1);',
    yylloc: {
      first_line: 713,
      first_column: 40,
      last_line: 713,
      last_column: 69,
      range: [
        39089,
        39118,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 713,
      first_column: 69,
      last_line: 714,
      last_column: 40,
      range: [
        39118,
        39159,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 714,
      first_column: 40,
      last_line: 714,
      last_column: 47,
      range: [
        39159,
        39166,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'CHARACTER_LIT'",
    yylloc: {
      first_line: 714,
      first_column: 47,
      last_line: 714,
      last_column: 62,
      range: [
        39166,
        39181,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 714,
      first_column: 62,
      last_line: 714,
      last_column: 63,
      range: [
        39181,
        39182,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 714,
      first_column: 63,
      last_line: 714,
      last_column: 63,
      range: [
        39182,
        39182,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"$"',
    yylloc: {
      first_line: 715,
      first_column: 0,
      last_line: 715,
      last_column: 3,
      range: [
        39183,
        39186,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 715,
      first_column: 3,
      last_line: 715,
      last_column: 40,
      range: [
        39186,
        39223,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 715,
      first_column: 40,
      last_line: 715,
      last_column: 47,
      range: [
        39223,
        39230,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'$'",
    yylloc: {
      first_line: 715,
      first_column: 47,
      last_line: 715,
      last_column: 50,
      range: [
        39230,
        39233,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 715,
      first_column: 50,
      last_line: 715,
      last_column: 51,
      range: [
        39233,
        39234,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 715,
      first_column: 51,
      last_line: 715,
      last_column: 51,
      range: [
        39234,
        39234,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"."',
    yylloc: {
      first_line: 716,
      first_column: 0,
      last_line: 716,
      last_column: 3,
      range: [
        39235,
        39238,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 716,
      first_column: 3,
      last_line: 716,
      last_column: 40,
      range: [
        39238,
        39275,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 716,
      first_column: 40,
      last_line: 716,
      last_column: 47,
      range: [
        39275,
        39282,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'.'",
    yylloc: {
      first_line: 716,
      first_column: 47,
      last_line: 716,
      last_column: 50,
      range: [
        39282,
        39285,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 716,
      first_column: 50,
      last_line: 716,
      last_column: 51,
      range: [
        39285,
        39286,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 716,
      first_column: 51,
      last_line: 716,
      last_column: 51,
      range: [
        39286,
        39286,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%option"',
    yylloc: {
      first_line: 717,
      first_column: 0,
      last_line: 717,
      last_column: 9,
      range: [
        39287,
        39296,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 717,
      first_column: 9,
      last_line: 717,
      last_column: 10,
      range: [
        39296,
        39297,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: 's',
    yylloc: {
      first_line: 717,
      first_column: 10,
      last_line: 717,
      last_column: 11,
      range: [
        39297,
        39298,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 717,
      first_column: 11,
      last_line: 717,
      last_column: 12,
      range: [
        39298,
        39299,
      ],
    },
  },
  {
    id: 12,
    token: '"?"',
    yytext: '?',
    yylloc: {
      first_line: 717,
      first_column: 12,
      last_line: 717,
      last_column: 13,
      range: [
        39299,
        39300,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                           ',
    yylloc: {
      first_line: 717,
      first_column: 13,
      last_line: 717,
      last_column: 40,
      range: [
        39300,
        39327,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 717,
      first_column: 40,
      last_line: 717,
      last_column: 55,
      range: [
        39327,
        39342,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'options'",
    yylloc: {
      first_line: 717,
      first_column: 55,
      last_line: 717,
      last_column: 64,
      range: [
        39342,
        39351,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 717,
      first_column: 64,
      last_line: 717,
      last_column: 66,
      range: [
        39351,
        39353,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 717,
      first_column: 66,
      last_line: 718,
      last_column: 40,
      range: [
        39353,
        39394,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 718,
      first_column: 40,
      last_line: 718,
      last_column: 47,
      range: [
        39394,
        39401,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'OPTIONS'",
    yylloc: {
      first_line: 718,
      first_column: 47,
      last_line: 718,
      last_column: 56,
      range: [
        39401,
        39410,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 718,
      first_column: 56,
      last_line: 718,
      last_column: 57,
      range: [
        39410,
        39411,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 718,
      first_column: 57,
      last_line: 718,
      last_column: 57,
      range: [
        39411,
        39411,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%s"',
    yylloc: {
      first_line: 719,
      first_column: 0,
      last_line: 719,
      last_column: 4,
      range: [
        39412,
        39416,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                    ',
    yylloc: {
      first_line: 719,
      first_column: 4,
      last_line: 719,
      last_column: 40,
      range: [
        39416,
        39452,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 719,
      first_column: 40,
      last_line: 719,
      last_column: 55,
      range: [
        39452,
        39467,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'options'",
    yylloc: {
      first_line: 719,
      first_column: 55,
      last_line: 719,
      last_column: 64,
      range: [
        39467,
        39476,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 719,
      first_column: 64,
      last_line: 719,
      last_column: 66,
      range: [
        39476,
        39478,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 719,
      first_column: 66,
      last_line: 720,
      last_column: 40,
      range: [
        39478,
        39519,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 720,
      first_column: 40,
      last_line: 720,
      last_column: 47,
      range: [
        39519,
        39526,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'START_INC'",
    yylloc: {
      first_line: 720,
      first_column: 47,
      last_line: 720,
      last_column: 58,
      range: [
        39526,
        39537,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 720,
      first_column: 58,
      last_line: 720,
      last_column: 59,
      range: [
        39537,
        39538,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 720,
      first_column: 59,
      last_line: 720,
      last_column: 59,
      range: [
        39538,
        39538,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%x"',
    yylloc: {
      first_line: 721,
      first_column: 0,
      last_line: 721,
      last_column: 4,
      range: [
        39539,
        39543,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                    ',
    yylloc: {
      first_line: 721,
      first_column: 4,
      last_line: 721,
      last_column: 40,
      range: [
        39543,
        39579,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 721,
      first_column: 40,
      last_line: 721,
      last_column: 55,
      range: [
        39579,
        39594,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'options'",
    yylloc: {
      first_line: 721,
      first_column: 55,
      last_line: 721,
      last_column: 64,
      range: [
        39594,
        39603,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 721,
      first_column: 64,
      last_line: 721,
      last_column: 66,
      range: [
        39603,
        39605,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 721,
      first_column: 66,
      last_line: 722,
      last_column: 40,
      range: [
        39605,
        39646,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 722,
      first_column: 40,
      last_line: 722,
      last_column: 47,
      range: [
        39646,
        39653,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'START_EXC'",
    yylloc: {
      first_line: 722,
      first_column: 47,
      last_line: 722,
      last_column: 58,
      range: [
        39653,
        39664,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 722,
      first_column: 58,
      last_line: 722,
      last_column: 59,
      range: [
        39664,
        39665,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 722,
      first_column: 59,
      last_line: 722,
      last_column: 59,
      range: [
        39665,
        39665,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%code"',
    yylloc: {
      first_line: 724,
      first_column: 0,
      last_line: 724,
      last_column: 7,
      range: [
        39667,
        39674,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                 ',
    yylloc: {
      first_line: 724,
      first_column: 7,
      last_line: 724,
      last_column: 40,
      range: [
        39674,
        39707,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 724,
      first_column: 40,
      last_line: 724,
      last_column: 55,
      range: [
        39707,
        39722,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'options'",
    yylloc: {
      first_line: 724,
      first_column: 55,
      last_line: 724,
      last_column: 64,
      range: [
        39722,
        39731,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 724,
      first_column: 64,
      last_line: 724,
      last_column: 66,
      range: [
        39731,
        39733,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 724,
      first_column: 66,
      last_line: 725,
      last_column: 40,
      range: [
        39733,
        39774,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 725,
      first_column: 40,
      last_line: 725,
      last_column: 47,
      range: [
        39774,
        39781,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'INIT_CODE'",
    yylloc: {
      first_line: 725,
      first_column: 47,
      last_line: 725,
      last_column: 58,
      range: [
        39781,
        39792,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 725,
      first_column: 58,
      last_line: 725,
      last_column: 59,
      range: [
        39792,
        39793,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 725,
      first_column: 59,
      last_line: 725,
      last_column: 59,
      range: [
        39793,
        39793,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%import"',
    yylloc: {
      first_line: 726,
      first_column: 0,
      last_line: 726,
      last_column: 9,
      range: [
        39794,
        39803,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                               ',
    yylloc: {
      first_line: 726,
      first_column: 9,
      last_line: 726,
      last_column: 40,
      range: [
        39803,
        39834,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 726,
      first_column: 40,
      last_line: 726,
      last_column: 55,
      range: [
        39834,
        39849,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'options'",
    yylloc: {
      first_line: 726,
      first_column: 55,
      last_line: 726,
      last_column: 64,
      range: [
        39849,
        39858,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 726,
      first_column: 64,
      last_line: 726,
      last_column: 66,
      range: [
        39858,
        39860,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 726,
      first_column: 66,
      last_line: 727,
      last_column: 40,
      range: [
        39860,
        39901,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 727,
      first_column: 40,
      last_line: 727,
      last_column: 47,
      range: [
        39901,
        39908,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'IMPORT'",
    yylloc: {
      first_line: 727,
      first_column: 47,
      last_line: 727,
      last_column: 55,
      range: [
        39908,
        39916,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 727,
      first_column: 55,
      last_line: 727,
      last_column: 56,
      range: [
        39916,
        39917,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 727,
      first_column: 56,
      last_line: 727,
      last_column: 56,
      range: [
        39917,
        39917,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%pointer"',
    yylloc: {
      first_line: 728,
      first_column: 0,
      last_line: 728,
      last_column: 10,
      range: [
        39918,
        39928,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                              ',
    yylloc: {
      first_line: 728,
      first_column: 10,
      last_line: 728,
      last_column: 40,
      range: [
        39928,
        39958,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 728,
      first_column: 40,
      last_line: 728,
      last_column: 47,
      range: [
        39958,
        39965,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'FLEX_POINTER_MODE'",
    yylloc: {
      first_line: 728,
      first_column: 47,
      last_line: 728,
      last_column: 66,
      range: [
        39965,
        39984,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 728,
      first_column: 66,
      last_line: 728,
      last_column: 67,
      range: [
        39984,
        39985,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 728,
      first_column: 67,
      last_line: 728,
      last_column: 67,
      range: [
        39985,
        39985,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%array"',
    yylloc: {
      first_line: 729,
      first_column: 0,
      last_line: 729,
      last_column: 8,
      range: [
        39986,
        39994,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                ',
    yylloc: {
      first_line: 729,
      first_column: 8,
      last_line: 729,
      last_column: 40,
      range: [
        39994,
        40026,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 729,
      first_column: 40,
      last_line: 729,
      last_column: 47,
      range: [
        40026,
        40033,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'FLEX_ARRAY_MODE'",
    yylloc: {
      first_line: 729,
      first_column: 47,
      last_line: 729,
      last_column: 64,
      range: [
        40033,
        40050,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 729,
      first_column: 64,
      last_line: 729,
      last_column: 65,
      range: [
        40050,
        40051,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 729,
      first_column: 65,
      last_line: 729,
      last_column: 65,
      range: [
        40051,
        40051,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 731,
      first_column: 0,
      last_line: 731,
      last_column: 1,
      range: [
        40053,
        40054,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'INITIAL',
    yylloc: {
      first_line: 731,
      first_column: 1,
      last_line: 731,
      last_column: 8,
      range: [
        40054,
        40061,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 731,
      first_column: 8,
      last_line: 731,
      last_column: 9,
      range: [
        40061,
        40062,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'rules',
    yylloc: {
      first_line: 731,
      first_column: 9,
      last_line: 731,
      last_column: 14,
      range: [
        40062,
        40067,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 731,
      first_column: 14,
      last_line: 731,
      last_column: 15,
      range: [
        40067,
        40068,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'code',
    yylloc: {
      first_line: 731,
      first_column: 15,
      last_line: 731,
      last_column: 19,
      range: [
        40068,
        40072,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 731,
      first_column: 19,
      last_line: 731,
      last_column: 19,
      range: [
        40072,
        40072,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 731,
      first_column: 19,
      last_line: 731,
      last_column: 20,
      range: [
        40072,
        40073,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%include"',
    yylloc: {
      first_line: 731,
      first_column: 20,
      last_line: 731,
      last_column: 30,
      range: [
        40073,
        40083,
      ],
    },
  },
  {
    id: 37,
    token: '"ENTIRE_ACTION"',
    yytext: {
      srcCode: `
                                            yy.depth = 0;
                                            yy.include_command_allowed = true;

                                            // check whether this \`%include\` command was located at the start of the line:
                                            // if it is, we treat it as a different token to signal the grammar we've
                                            // got an action which stands on its own.
                                            let precedingStr = this.matched[this.matched.length - this.match.length - 1];

                                            let atSOL = (!precedingStr /* @ Start Of File */ || precedingStr === '\\n');

                                            this.pushState('action');
                                            // push the parsed '%include' back into the input-to-parse
                                            // to trigger the \`<action>\` state to re-parse it
                                            // and issue the desired follow-up token: 'INCLUDE':
                                            this.unput(yytext);

                                            // and allow the next lexer round to match and execute the suitable lexer rule(s) to parse this incoming action code block.
                                            if (atSOL) {
                                                return 'ACTION_START_AT_SOL';
                                            }
                                            return 'ACTION_START';
                                        `,
      shiftCount: 1597,
      action_start_marker: '%{',
      action_end_marker: '%}',
    },
    yylloc: {
      first_line: 731,
      first_column: 40,
      last_line: 753,
      last_column: 42,
      range: [
        40093,
        41692,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 755,
      first_column: 0,
      last_line: 755,
      last_column: 1,
      range: [
        41694,
        41695,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'INITIAL',
    yylloc: {
      first_line: 755,
      first_column: 1,
      last_line: 755,
      last_column: 8,
      range: [
        41695,
        41702,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 755,
      first_column: 8,
      last_line: 755,
      last_column: 9,
      range: [
        41702,
        41703,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'rules',
    yylloc: {
      first_line: 755,
      first_column: 9,
      last_line: 755,
      last_column: 14,
      range: [
        41703,
        41708,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 755,
      first_column: 14,
      last_line: 755,
      last_column: 15,
      range: [
        41708,
        41709,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'code',
    yylloc: {
      first_line: 755,
      first_column: 15,
      last_line: 755,
      last_column: 19,
      range: [
        41709,
        41713,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 755,
      first_column: 19,
      last_line: 755,
      last_column: 19,
      range: [
        41713,
        41713,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 755,
      first_column: 19,
      last_line: 755,
      last_column: 20,
      range: [
        41713,
        41714,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%"',
    yylloc: {
      first_line: 755,
      first_column: 20,
      last_line: 755,
      last_column: 23,
      range: [
        41714,
        41717,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{NAME}',
    yylloc: {
      first_line: 755,
      first_column: 23,
      last_line: 755,
      last_column: 29,
      range: [
        41717,
        41723,
      ],
    },
  },
  {
    id: 8,
    token: '"("',
    yytext: '(',
    yylloc: {
      first_line: 755,
      first_column: 29,
      last_line: 755,
      last_column: 30,
      range: [
        41723,
        41724,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 755,
      first_column: 30,
      last_line: 755,
      last_column: 31,
      range: [
        41724,
        41725,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^\\r\\n',
    yylloc: {
      first_line: 755,
      first_column: 31,
      last_line: 755,
      last_column: 36,
      range: [
        41725,
        41730,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 755,
      first_column: 36,
      last_line: 755,
      last_column: 37,
      range: [
        41730,
        41731,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 755,
      first_column: 37,
      last_line: 755,
      last_column: 38,
      range: [
        41731,
        41732,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 755,
      first_column: 38,
      last_line: 755,
      last_column: 39,
      range: [
        41732,
        41733,
      ],
    },
  },
  {
    id: 37,
    token: '"ENTIRE_ACTION"',
    yytext: {
      srcCode: `
                                            /* ignore unrecognized decl */
                                            this.warn(rmCommonWS\`
                                                ignoring unsupported lexer option ${dquote(yytext)}
                                                while lexing in ${dquote(this.topState())} state.

                                                  Erroneous area:
                                                ${this.prettyPrintRange(yylloc)}
                                            \`);
                                            yytext = {
                                                name: this.matches[1],              // {NAME}
                                                value: this.matches[2].trim()       // optional value/parameters
                                            };
                                            return 'UNKNOWN_DECL';
                                        `,
      shiftCount: 954,
      action_start_marker: '%{',
      action_end_marker: '%}',
    },
    yylloc: {
      first_line: 756,
      first_column: 40,
      last_line: 770,
      last_column: 42,
      range: [
        41774,
        42730,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"%%"',
    yylloc: {
      first_line: 772,
      first_column: 0,
      last_line: 772,
      last_column: 4,
      range: [
        42732,
        42736,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                    ',
    yylloc: {
      first_line: 772,
      first_column: 4,
      last_line: 772,
      last_column: 40,
      range: [
        42736,
        42772,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.pushState(',
    yylloc: {
      first_line: 772,
      first_column: 40,
      last_line: 772,
      last_column: 55,
      range: [
        42772,
        42787,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'rules'",
    yylloc: {
      first_line: 772,
      first_column: 55,
      last_line: 772,
      last_column: 62,
      range: [
        42787,
        42794,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 772,
      first_column: 62,
      last_line: 772,
      last_column: 64,
      range: [
        42794,
        42796,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 772,
      first_column: 64,
      last_line: 773,
      last_column: 40,
      range: [
        42796,
        42837,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 773,
      first_column: 40,
      last_line: 773,
      last_column: 47,
      range: [
        42837,
        42844,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'%%'",
    yylloc: {
      first_line: 773,
      first_column: 47,
      last_line: 773,
      last_column: 51,
      range: [
        42844,
        42848,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 773,
      first_column: 51,
      last_line: 773,
      last_column: 52,
      range: [
        42848,
        42849,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 773,
      first_column: 52,
      last_line: 773,
      last_column: 52,
      range: [
        42849,
        42849,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"{"',
    yylloc: {
      first_line: 775,
      first_column: 0,
      last_line: 775,
      last_column: 3,
      range: [
        42851,
        42854,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 775,
      first_column: 3,
      last_line: 775,
      last_column: 5,
      range: [
        42854,
        42856,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 775,
      first_column: 5,
      last_line: 775,
      last_column: 6,
      range: [
        42856,
        42857,
      ],
    },
  },
  {
    id: 8,
    token: '"("',
    yytext: '(',
    yylloc: {
      first_line: 775,
      first_column: 6,
      last_line: 775,
      last_column: 7,
      range: [
        42857,
        42858,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '","',
    yylloc: {
      first_line: 775,
      first_column: 7,
      last_line: 775,
      last_column: 10,
      range: [
        42858,
        42861,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\s',
    yylloc: {
      first_line: 775,
      first_column: 10,
      last_line: 775,
      last_column: 12,
      range: [
        42861,
        42863,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 775,
      first_column: 12,
      last_line: 775,
      last_column: 13,
      range: [
        42863,
        42864,
      ],
    },
  },
  {
    id: 45,
    token: '"REGEX_SPECIAL_CHAR"',
    yytext: '\\d',
    yylloc: {
      first_line: 775,
      first_column: 13,
      last_line: 775,
      last_column: 15,
      range: [
        42864,
        42866,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 775,
      first_column: 15,
      last_line: 775,
      last_column: 16,
      range: [
        42866,
        42867,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 775,
      first_column: 16,
      last_line: 775,
      last_column: 17,
      range: [
        42867,
        42868,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '","',
    yylloc: {
      first_line: 775,
      first_column: 17,
      last_line: 775,
      last_column: 20,
      range: [
        42868,
        42871,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 775,
      first_column: 20,
      last_line: 775,
      last_column: 21,
      range: [
        42871,
        42872,
      ],
    },
  },
  {
    id: 12,
    token: '"?"',
    yytext: '?',
    yylloc: {
      first_line: 775,
      first_column: 21,
      last_line: 775,
      last_column: 22,
      range: [
        42872,
        42873,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"}"',
    yylloc: {
      first_line: 775,
      first_column: 22,
      last_line: 775,
      last_column: 25,
      range: [
        42873,
        42876,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '               ',
    yylloc: {
      first_line: 775,
      first_column: 25,
      last_line: 775,
      last_column: 40,
      range: [
        42876,
        42891,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 775,
      first_column: 40,
      last_line: 775,
      last_column: 47,
      range: [
        42891,
        42898,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'RANGE_REGEX'",
    yylloc: {
      first_line: 775,
      first_column: 47,
      last_line: 775,
      last_column: 60,
      range: [
        42898,
        42911,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 775,
      first_column: 60,
      last_line: 775,
      last_column: 61,
      range: [
        42911,
        42912,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 775,
      first_column: 61,
      last_line: 775,
      last_column: 61,
      range: [
        42912,
        42912,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"{"',
    yylloc: {
      first_line: 776,
      first_column: 0,
      last_line: 776,
      last_column: 3,
      range: [
        42913,
        42916,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ID}',
    yylloc: {
      first_line: 776,
      first_column: 3,
      last_line: 776,
      last_column: 7,
      range: [
        42916,
        42920,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"}"',
    yylloc: {
      first_line: 776,
      first_column: 7,
      last_line: 776,
      last_column: 10,
      range: [
        42920,
        42923,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                              ',
    yylloc: {
      first_line: 776,
      first_column: 10,
      last_line: 776,
      last_column: 40,
      range: [
        42923,
        42953,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 776,
      first_column: 40,
      last_line: 776,
      last_column: 47,
      range: [
        42953,
        42960,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'NAME_BRACE'",
    yylloc: {
      first_line: 776,
      first_column: 47,
      last_line: 776,
      last_column: 59,
      range: [
        42960,
        42972,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 776,
      first_column: 59,
      last_line: 776,
      last_column: 60,
      range: [
        42972,
        42973,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 776,
      first_column: 60,
      last_line: 776,
      last_column: 60,
      range: [
        42973,
        42973,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 777,
      first_column: 0,
      last_line: 777,
      last_column: 1,
      range: [
        42974,
        42975,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'set',
    yylloc: {
      first_line: 777,
      first_column: 1,
      last_line: 777,
      last_column: 4,
      range: [
        42975,
        42978,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 777,
      first_column: 4,
      last_line: 777,
      last_column: 5,
      range: [
        42978,
        42979,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'options',
    yylloc: {
      first_line: 777,
      first_column: 5,
      last_line: 777,
      last_column: 12,
      range: [
        42979,
        42986,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 777,
      first_column: 12,
      last_line: 777,
      last_column: 12,
      range: [
        42986,
        42986,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 777,
      first_column: 12,
      last_line: 777,
      last_column: 13,
      range: [
        42986,
        42987,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"{"',
    yylloc: {
      first_line: 777,
      first_column: 13,
      last_line: 777,
      last_column: 16,
      range: [
        42987,
        42990,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{ID}',
    yylloc: {
      first_line: 777,
      first_column: 16,
      last_line: 777,
      last_column: 20,
      range: [
        42990,
        42994,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"}"',
    yylloc: {
      first_line: 777,
      first_column: 20,
      last_line: 777,
      last_column: 23,
      range: [
        42994,
        42997,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                 ',
    yylloc: {
      first_line: 777,
      first_column: 23,
      last_line: 777,
      last_column: 40,
      range: [
        42997,
        43014,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 777,
      first_column: 40,
      last_line: 777,
      last_column: 47,
      range: [
        43014,
        43021,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'NAME_BRACE'",
    yylloc: {
      first_line: 777,
      first_column: 47,
      last_line: 777,
      last_column: 59,
      range: [
        43021,
        43033,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 777,
      first_column: 59,
      last_line: 777,
      last_column: 60,
      range: [
        43033,
        43034,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 777,
      first_column: 60,
      last_line: 777,
      last_column: 60,
      range: [
        43034,
        43034,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"{"',
    yylloc: {
      first_line: 778,
      first_column: 0,
      last_line: 778,
      last_column: 3,
      range: [
        43035,
        43038,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 778,
      first_column: 3,
      last_line: 778,
      last_column: 40,
      range: [
        43038,
        43075,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 778,
      first_column: 40,
      last_line: 778,
      last_column: 47,
      range: [
        43075,
        43082,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'{'",
    yylloc: {
      first_line: 778,
      first_column: 47,
      last_line: 778,
      last_column: 50,
      range: [
        43082,
        43085,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 778,
      first_column: 50,
      last_line: 778,
      last_column: 51,
      range: [
        43085,
        43086,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 778,
      first_column: 51,
      last_line: 778,
      last_column: 51,
      range: [
        43086,
        43086,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"}"',
    yylloc: {
      first_line: 779,
      first_column: 0,
      last_line: 779,
      last_column: 3,
      range: [
        43087,
        43090,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 779,
      first_column: 3,
      last_line: 779,
      last_column: 40,
      range: [
        43090,
        43127,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 779,
      first_column: 40,
      last_line: 779,
      last_column: 47,
      range: [
        43127,
        43134,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'}'",
    yylloc: {
      first_line: 779,
      first_column: 47,
      last_line: 779,
      last_column: 50,
      range: [
        43134,
        43137,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 779,
      first_column: 50,
      last_line: 779,
      last_column: 51,
      range: [
        43137,
        43138,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 779,
      first_column: 51,
      last_line: 779,
      last_column: 51,
      range: [
        43138,
        43138,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 782,
      first_column: 0,
      last_line: 782,
      last_column: 1,
      range: [
        43214,
        43215,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'set',
    yylloc: {
      first_line: 782,
      first_column: 1,
      last_line: 782,
      last_column: 4,
      range: [
        43215,
        43218,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 782,
      first_column: 4,
      last_line: 782,
      last_column: 4,
      range: [
        43218,
        43218,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 782,
      first_column: 4,
      last_line: 782,
      last_column: 5,
      range: [
        43218,
        43219,
      ],
    },
  },
  {
    id: 4,
    token: '"{"',
    yytext: '{',
    yylloc: {
      first_line: 782,
      first_column: 5,
      last_line: 782,
      last_column: 6,
      range: [
        43219,
        43220,
      ],
    },
  },
  {
    id: 43,
    token: '"SPECIAL_GROUP"',
    yytext: '(?:',
    yylloc: {
      first_line: 789,
      first_column: 0,
      last_line: 789,
      last_column: 3,
      range: [
        43574,
        43577,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"\\\\"',
    yylloc: {
      first_line: 789,
      first_column: 3,
      last_line: 789,
      last_column: 7,
      range: [
        43577,
        43581,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 789,
      first_column: 7,
      last_line: 789,
      last_column: 8,
      range: [
        43581,
        43582,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^',
    yylloc: {
      first_line: 789,
      first_column: 8,
      last_line: 789,
      last_column: 9,
      range: [
        43582,
        43583,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 789,
      first_column: 9,
      last_line: 789,
      last_column: 13,
      range: [
        43583,
        43587,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 789,
      first_column: 13,
      last_line: 789,
      last_column: 14,
      range: [
        43587,
        43588,
      ],
    },
  },
  {
    id: 7,
    token: '"|"',
    yytext: '|',
    yylloc: {
      first_line: 789,
      first_column: 14,
      last_line: 789,
      last_column: 15,
      range: [
        43588,
        43589,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 789,
      first_column: 15,
      last_line: 789,
      last_column: 16,
      range: [
        43589,
        43590,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^\\]\\{',
    yylloc: {
      first_line: 789,
      first_column: 16,
      last_line: 789,
      last_column: 21,
      range: [
        43590,
        43595,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 789,
      first_column: 21,
      last_line: 789,
      last_column: 25,
      range: [
        43595,
        43599,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 789,
      first_column: 25,
      last_line: 789,
      last_column: 26,
      range: [
        43599,
        43600,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 789,
      first_column: 26,
      last_line: 789,
      last_column: 27,
      range: [
        43600,
        43601,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 789,
      first_column: 27,
      last_line: 789,
      last_column: 28,
      range: [
        43601,
        43602,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '            ',
    yylloc: {
      first_line: 789,
      first_column: 28,
      last_line: 789,
      last_column: 40,
      range: [
        43602,
        43614,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 789,
      first_column: 40,
      last_line: 789,
      last_column: 47,
      range: [
        43614,
        43621,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'REGEX_SET'",
    yylloc: {
      first_line: 789,
      first_column: 47,
      last_line: 789,
      last_column: 58,
      range: [
        43621,
        43632,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 789,
      first_column: 58,
      last_line: 789,
      last_column: 59,
      range: [
        43632,
        43633,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 789,
      first_column: 59,
      last_line: 789,
      last_column: 59,
      range: [
        43633,
        43633,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"{"',
    yylloc: {
      first_line: 790,
      first_column: 0,
      last_line: 790,
      last_column: 3,
      range: [
        43634,
        43637,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 790,
      first_column: 3,
      last_line: 790,
      last_column: 40,
      range: [
        43637,
        43674,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 790,
      first_column: 40,
      last_line: 790,
      last_column: 47,
      range: [
        43674,
        43681,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'REGEX_SET'",
    yylloc: {
      first_line: 790,
      first_column: 47,
      last_line: 790,
      last_column: 58,
      range: [
        43681,
        43692,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 790,
      first_column: 58,
      last_line: 790,
      last_column: 59,
      range: [
        43692,
        43693,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 790,
      first_column: 59,
      last_line: 790,
      last_column: 59,
      range: [
        43693,
        43693,
      ],
    },
  },
  {
    id: 53,
    token: '"STRING_LIT"',
    yytext: '"]"',
    yylloc: {
      first_line: 791,
      first_column: 0,
      last_line: 791,
      last_column: 3,
      range: [
        43694,
        43697,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                     ',
    yylloc: {
      first_line: 791,
      first_column: 3,
      last_line: 791,
      last_column: 40,
      range: [
        43697,
        43734,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.popState();',
    yylloc: {
      first_line: 791,
      first_column: 40,
      last_line: 791,
      last_column: 56,
      range: [
        43734,
        43750,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 791,
      first_column: 56,
      last_line: 792,
      last_column: 40,
      range: [
        43750,
        43791,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 792,
      first_column: 40,
      last_line: 792,
      last_column: 47,
      range: [
        43791,
        43798,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'REGEX_SET_END'",
    yylloc: {
      first_line: 792,
      first_column: 47,
      last_line: 792,
      last_column: 62,
      range: [
        43798,
        43813,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 792,
      first_column: 62,
      last_line: 792,
      last_column: 63,
      range: [
        43813,
        43814,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 792,
      first_column: 63,
      last_line: 792,
      last_column: 63,
      range: [
        43814,
        43814,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 794,
      first_column: 0,
      last_line: 794,
      last_column: 4,
      range: [
        43816,
        43820,
      ],
    },
  },
  {
    id: 37,
    token: '"ENTIRE_ACTION"',
    yytext: {
      srcCode: `
                                            this.popState();
                                            this.unput(yytext);
                                            yyerror(rmCommonWS\`
                                                regex [...] sets cannot span multiple lines.

                                                If you want a CR/LF to be part of a regex set, you can simply
                                                specify those as character escapes '\\\\r' and '\\\\n'.

                                                  Erroneous area:
                                                ${this.prettyPrintRange(yylloc)}
                                            \`);
                                            return 'UNTERMINATED_REGEX_SET';
                                        `,
      shiftCount: 809,
      action_start_marker: '%{',
      action_end_marker: '%}',
    },
    yylloc: {
      first_line: 794,
      first_column: 40,
      last_line: 807,
      last_column: 42,
      range: [
        43856,
        44667,
      ],
    },
  },
  {
    id: 17,
    token: '"$"',
    yytext: '<<EOF>>',
    yylloc: {
      first_line: 808,
      first_column: 0,
      last_line: 808,
      last_column: 7,
      range: [
        44668,
        44675,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                 ',
    yylloc: {
      first_line: 808,
      first_column: 7,
      last_line: 808,
      last_column: 40,
      range: [
        44675,
        44708,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'this.popState();',
    yylloc: {
      first_line: 808,
      first_column: 40,
      last_line: 808,
      last_column: 56,
      range: [
        44708,
        44724,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 808,
      first_column: 56,
      last_line: 809,
      last_column: 40,
      range: [
        44724,
        44765,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 809,
      first_column: 40,
      last_line: 809,
      last_column: 58,
      range: [
        44765,
        44783,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                            The regex [...] set has not been properly terminated by ']'.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \``,
    yylloc: {
      first_line: 809,
      first_column: 58,
      last_line: 814,
      last_column: 41,
      range: [
        44783,
        45071,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 814,
      first_column: 41,
      last_line: 814,
      last_column: 43,
      range: [
        45071,
        45073,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 814,
      first_column: 43,
      last_line: 815,
      last_column: 40,
      range: [
        45073,
        45114,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 815,
      first_column: 40,
      last_line: 815,
      last_column: 47,
      range: [
        45114,
        45121,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'UNTERMINATED_REGEX_SET'",
    yylloc: {
      first_line: 815,
      first_column: 47,
      last_line: 815,
      last_column: 71,
      range: [
        45121,
        45145,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 815,
      first_column: 71,
      last_line: 815,
      last_column: 72,
      range: [
        45145,
        45146,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 815,
      first_column: 72,
      last_line: 815,
      last_column: 72,
      range: [
        45146,
        45146,
      ],
    },
  },
  {
    id: 5,
    token: '"}"',
    yytext: '}',
    yylloc: {
      first_line: 817,
      first_column: 0,
      last_line: 817,
      last_column: 1,
      range: [
        45148,
        45149,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 823,
      first_column: 0,
      last_line: 823,
      last_column: 1,
      range: [
        45427,
        45428,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'code',
    yylloc: {
      first_line: 823,
      first_column: 1,
      last_line: 823,
      last_column: 5,
      range: [
        45428,
        45432,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 823,
      first_column: 5,
      last_line: 823,
      last_column: 5,
      range: [
        45432,
        45432,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 823,
      first_column: 5,
      last_line: 823,
      last_column: 6,
      range: [
        45432,
        45433,
      ],
    },
  },
  {
    id: 43,
    token: '"SPECIAL_GROUP"',
    yytext: '(?:',
    yylloc: {
      first_line: 823,
      first_column: 6,
      last_line: 823,
      last_column: 9,
      range: [
        45433,
        45436,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 823,
      first_column: 9,
      last_line: 823,
      last_column: 10,
      range: [
        45436,
        45437,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^%',
    yylloc: {
      first_line: 823,
      first_column: 10,
      last_line: 823,
      last_column: 12,
      range: [
        45437,
        45439,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 823,
      first_column: 12,
      last_line: 823,
      last_column: 16,
      range: [
        45439,
        45443,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 823,
      first_column: 16,
      last_line: 823,
      last_column: 17,
      range: [
        45443,
        45444,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 823,
      first_column: 17,
      last_line: 823,
      last_column: 18,
      range: [
        45444,
        45445,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^',
    yylloc: {
      first_line: 823,
      first_column: 18,
      last_line: 823,
      last_column: 19,
      range: [
        45445,
        45446,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 823,
      first_column: 19,
      last_line: 823,
      last_column: 23,
      range: [
        45446,
        45450,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 823,
      first_column: 23,
      last_line: 823,
      last_column: 24,
      range: [
        45450,
        45451,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 823,
      first_column: 24,
      last_line: 823,
      last_column: 25,
      range: [
        45451,
        45452,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 823,
      first_column: 25,
      last_line: 823,
      last_column: 29,
      range: [
        45452,
        45456,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 823,
      first_column: 29,
      last_line: 823,
      last_column: 30,
      range: [
        45456,
        45457,
      ],
    },
  },
  {
    id: 9,
    token: '")"',
    yytext: ')',
    yylloc: {
      first_line: 823,
      first_column: 30,
      last_line: 823,
      last_column: 31,
      range: [
        45457,
        45458,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 823,
      first_column: 31,
      last_line: 823,
      last_column: 32,
      range: [
        45458,
        45459,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '        ',
    yylloc: {
      first_line: 823,
      first_column: 32,
      last_line: 823,
      last_column: 40,
      range: [
        45459,
        45467,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 823,
      first_column: 40,
      last_line: 823,
      last_column: 47,
      range: [
        45467,
        45474,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'TRAILING_CODE_CHUNK'",
    yylloc: {
      first_line: 823,
      first_column: 47,
      last_line: 823,
      last_column: 68,
      range: [
        45474,
        45495,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';      ',
    yylloc: {
      first_line: 823,
      first_column: 68,
      last_line: 823,
      last_column: 75,
      range: [
        45495,
        45502,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "// shortcut to grab a large bite at once when we're sure not to encounter any `%include` in there at start-of-line.",
    yylloc: {
      first_line: 823,
      first_column: 75,
      last_line: 823,
      last_column: 190,
      range: [
        45502,
        45617,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 823,
      first_column: 190,
      last_line: 823,
      last_column: 190,
      range: [
        45617,
        45617,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 824,
      first_column: 0,
      last_line: 824,
      last_column: 1,
      range: [
        45618,
        45619,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'code',
    yylloc: {
      first_line: 824,
      first_column: 1,
      last_line: 824,
      last_column: 5,
      range: [
        45619,
        45623,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 824,
      first_column: 5,
      last_line: 824,
      last_column: 5,
      range: [
        45623,
        45623,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 824,
      first_column: 5,
      last_line: 824,
      last_column: 6,
      range: [
        45623,
        45624,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 824,
      first_column: 6,
      last_line: 824,
      last_column: 7,
      range: [
        45624,
        45625,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^',
    yylloc: {
      first_line: 824,
      first_column: 7,
      last_line: 824,
      last_column: 8,
      range: [
        45625,
        45626,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 824,
      first_column: 8,
      last_line: 824,
      last_column: 12,
      range: [
        45626,
        45630,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 824,
      first_column: 12,
      last_line: 824,
      last_column: 13,
      range: [
        45630,
        45631,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 824,
      first_column: 13,
      last_line: 824,
      last_column: 14,
      range: [
        45631,
        45632,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 824,
      first_column: 14,
      last_line: 824,
      last_column: 18,
      range: [
        45632,
        45636,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 824,
      first_column: 18,
      last_line: 824,
      last_column: 19,
      range: [
        45636,
        45637,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                     ',
    yylloc: {
      first_line: 824,
      first_column: 19,
      last_line: 824,
      last_column: 40,
      range: [
        45637,
        45658,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 824,
      first_column: 40,
      last_line: 824,
      last_column: 47,
      range: [
        45658,
        45665,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'TRAILING_CODE_CHUNK'",
    yylloc: {
      first_line: 824,
      first_column: 47,
      last_line: 824,
      last_column: 68,
      range: [
        45665,
        45686,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 824,
      first_column: 68,
      last_line: 824,
      last_column: 69,
      range: [
        45686,
        45687,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 824,
      first_column: 69,
      last_line: 824,
      last_column: 69,
      range: [
        45687,
        45687,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 825,
      first_column: 0,
      last_line: 825,
      last_column: 1,
      range: [
        45688,
        45689,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'code',
    yylloc: {
      first_line: 825,
      first_column: 1,
      last_line: 825,
      last_column: 5,
      range: [
        45689,
        45693,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 825,
      first_column: 5,
      last_line: 825,
      last_column: 5,
      range: [
        45693,
        45693,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 825,
      first_column: 5,
      last_line: 825,
      last_column: 6,
      range: [
        45693,
        45694,
      ],
    },
  },
  {
    id: 48,
    token: '"REGEX_SET_START"',
    yytext: '[',
    yylloc: {
      first_line: 825,
      first_column: 6,
      last_line: 825,
      last_column: 7,
      range: [
        45694,
        45695,
      ],
    },
  },
  {
    id: 51,
    token: '"REGEX_SET"',
    yytext: '^',
    yylloc: {
      first_line: 825,
      first_column: 7,
      last_line: 825,
      last_column: 8,
      range: [
        45695,
        45696,
      ],
    },
  },
  {
    id: 47,
    token: "macro name in '{...}' curly braces",
    yytext: '{BR}',
    yylloc: {
      first_line: 825,
      first_column: 8,
      last_line: 825,
      last_column: 12,
      range: [
        45696,
        45700,
      ],
    },
  },
  {
    id: 49,
    token: '"REGEX_SET_END"',
    yytext: ']',
    yylloc: {
      first_line: 825,
      first_column: 12,
      last_line: 825,
      last_column: 13,
      range: [
        45700,
        45701,
      ],
    },
  },
  {
    id: 10,
    token: '"+"',
    yytext: '+',
    yylloc: {
      first_line: 825,
      first_column: 13,
      last_line: 825,
      last_column: 14,
      range: [
        45701,
        45702,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                          ',
    yylloc: {
      first_line: 825,
      first_column: 14,
      last_line: 825,
      last_column: 40,
      range: [
        45702,
        45728,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 825,
      first_column: 40,
      last_line: 825,
      last_column: 47,
      range: [
        45728,
        45735,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'TRAILING_CODE_CHUNK'",
    yylloc: {
      first_line: 825,
      first_column: 47,
      last_line: 825,
      last_column: 68,
      range: [
        45735,
        45756,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';      ',
    yylloc: {
      first_line: 825,
      first_column: 68,
      last_line: 825,
      last_column: 75,
      range: [
        45756,
        45763,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '// the bit of CODE just before EOF...',
    yylloc: {
      first_line: 825,
      first_column: 75,
      last_line: 825,
      last_column: 112,
      range: [
        45763,
        45800,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 825,
      first_column: 112,
      last_line: 825,
      last_column: 112,
      range: [
        45800,
        45800,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 832,
      first_column: 0,
      last_line: 832,
      last_column: 1,
      range: [
        46007,
        46008,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'action',
    yylloc: {
      first_line: 832,
      first_column: 1,
      last_line: 832,
      last_column: 7,
      range: [
        46008,
        46014,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 832,
      first_column: 7,
      last_line: 832,
      last_column: 7,
      range: [
        46014,
        46014,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 832,
      first_column: 7,
      last_line: 832,
      last_column: 8,
      range: [
        46014,
        46015,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '"',
    yylloc: {
      first_line: 832,
      first_column: 8,
      last_line: 832,
      last_column: 10,
      range: [
        46015,
        46017,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                              ',
    yylloc: {
      first_line: 832,
      first_column: 10,
      last_line: 832,
      last_column: 40,
      range: [
        46017,
        46047,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 832,
      first_column: 40,
      last_line: 832,
      last_column: 58,
      range: [
        46047,
        46065,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                            unterminated string constant in lexer rule action block.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \``,
    yylloc: {
      first_line: 832,
      first_column: 58,
      last_line: 837,
      last_column: 41,
      range: [
        46065,
        46349,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 837,
      first_column: 41,
      last_line: 837,
      last_column: 43,
      range: [
        46349,
        46351,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 837,
      first_column: 43,
      last_line: 838,
      last_column: 40,
      range: [
        46351,
        46392,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 838,
      first_column: 40,
      last_line: 838,
      last_column: 47,
      range: [
        46392,
        46399,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'UNTERMINATED_STRING_ERROR'",
    yylloc: {
      first_line: 838,
      first_column: 47,
      last_line: 838,
      last_column: 74,
      range: [
        46399,
        46426,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 838,
      first_column: 74,
      last_line: 838,
      last_column: 75,
      range: [
        46426,
        46427,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 838,
      first_column: 75,
      last_line: 838,
      last_column: 75,
      range: [
        46427,
        46427,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 839,
      first_column: 0,
      last_line: 839,
      last_column: 1,
      range: [
        46428,
        46429,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'action',
    yylloc: {
      first_line: 839,
      first_column: 1,
      last_line: 839,
      last_column: 7,
      range: [
        46429,
        46435,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 839,
      first_column: 7,
      last_line: 839,
      last_column: 7,
      range: [
        46435,
        46435,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 839,
      first_column: 7,
      last_line: 839,
      last_column: 8,
      range: [
        46435,
        46436,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: "'",
    yylloc: {
      first_line: 839,
      first_column: 8,
      last_line: 839,
      last_column: 10,
      range: [
        46436,
        46438,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                              ',
    yylloc: {
      first_line: 839,
      first_column: 10,
      last_line: 839,
      last_column: 40,
      range: [
        46438,
        46468,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 839,
      first_column: 40,
      last_line: 839,
      last_column: 58,
      range: [
        46468,
        46486,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                            unterminated string constant in lexer rule action block.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \``,
    yylloc: {
      first_line: 839,
      first_column: 58,
      last_line: 844,
      last_column: 41,
      range: [
        46486,
        46770,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 844,
      first_column: 41,
      last_line: 844,
      last_column: 43,
      range: [
        46770,
        46772,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 844,
      first_column: 43,
      last_line: 845,
      last_column: 40,
      range: [
        46772,
        46813,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 845,
      first_column: 40,
      last_line: 845,
      last_column: 47,
      range: [
        46813,
        46820,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'UNTERMINATED_STRING_ERROR'",
    yylloc: {
      first_line: 845,
      first_column: 47,
      last_line: 845,
      last_column: 74,
      range: [
        46820,
        46847,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 845,
      first_column: 74,
      last_line: 845,
      last_column: 75,
      range: [
        46847,
        46848,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 845,
      first_column: 75,
      last_line: 845,
      last_column: 75,
      range: [
        46848,
        46848,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 846,
      first_column: 0,
      last_line: 846,
      last_column: 1,
      range: [
        46849,
        46850,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'action',
    yylloc: {
      first_line: 846,
      first_column: 1,
      last_line: 846,
      last_column: 7,
      range: [
        46850,
        46856,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 846,
      first_column: 7,
      last_line: 846,
      last_column: 7,
      range: [
        46856,
        46856,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 846,
      first_column: 7,
      last_line: 846,
      last_column: 8,
      range: [
        46856,
        46857,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '`',
    yylloc: {
      first_line: 846,
      first_column: 8,
      last_line: 846,
      last_column: 10,
      range: [
        46857,
        46859,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                              ',
    yylloc: {
      first_line: 846,
      first_column: 10,
      last_line: 846,
      last_column: 40,
      range: [
        46859,
        46889,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 846,
      first_column: 40,
      last_line: 846,
      last_column: 58,
      range: [
        46889,
        46907,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                            unterminated string constant in lexer rule action block.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \``,
    yylloc: {
      first_line: 846,
      first_column: 58,
      last_line: 851,
      last_column: 41,
      range: [
        46907,
        47191,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 851,
      first_column: 41,
      last_line: 851,
      last_column: 43,
      range: [
        47191,
        47193,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 851,
      first_column: 43,
      last_line: 852,
      last_column: 40,
      range: [
        47193,
        47234,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 852,
      first_column: 40,
      last_line: 852,
      last_column: 47,
      range: [
        47234,
        47241,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'UNTERMINATED_STRING_ERROR'",
    yylloc: {
      first_line: 852,
      first_column: 47,
      last_line: 852,
      last_column: 74,
      range: [
        47241,
        47268,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 852,
      first_column: 74,
      last_line: 852,
      last_column: 75,
      range: [
        47268,
        47269,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 852,
      first_column: 75,
      last_line: 852,
      last_column: 75,
      range: [
        47269,
        47269,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 854,
      first_column: 0,
      last_line: 854,
      last_column: 1,
      range: [
        47271,
        47272,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'options',
    yylloc: {
      first_line: 854,
      first_column: 1,
      last_line: 854,
      last_column: 8,
      range: [
        47272,
        47279,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 854,
      first_column: 8,
      last_line: 854,
      last_column: 8,
      range: [
        47279,
        47279,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 854,
      first_column: 8,
      last_line: 854,
      last_column: 9,
      range: [
        47279,
        47280,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '"',
    yylloc: {
      first_line: 854,
      first_column: 9,
      last_line: 854,
      last_column: 11,
      range: [
        47280,
        47282,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                             ',
    yylloc: {
      first_line: 854,
      first_column: 11,
      last_line: 854,
      last_column: 40,
      range: [
        47282,
        47311,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 854,
      first_column: 40,
      last_line: 854,
      last_column: 58,
      range: [
        47311,
        47329,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                            unterminated string constant in %options entry.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \``,
    yylloc: {
      first_line: 854,
      first_column: 58,
      last_line: 859,
      last_column: 41,
      range: [
        47329,
        47604,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 859,
      first_column: 41,
      last_line: 859,
      last_column: 43,
      range: [
        47604,
        47606,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 859,
      first_column: 43,
      last_line: 860,
      last_column: 40,
      range: [
        47606,
        47647,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 860,
      first_column: 40,
      last_line: 860,
      last_column: 47,
      range: [
        47647,
        47654,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'UNTERMINATED_STRING_ERROR'",
    yylloc: {
      first_line: 860,
      first_column: 47,
      last_line: 860,
      last_column: 74,
      range: [
        47654,
        47681,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 860,
      first_column: 74,
      last_line: 860,
      last_column: 75,
      range: [
        47681,
        47682,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 860,
      first_column: 75,
      last_line: 860,
      last_column: 75,
      range: [
        47682,
        47682,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 861,
      first_column: 0,
      last_line: 861,
      last_column: 1,
      range: [
        47683,
        47684,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'options',
    yylloc: {
      first_line: 861,
      first_column: 1,
      last_line: 861,
      last_column: 8,
      range: [
        47684,
        47691,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 861,
      first_column: 8,
      last_line: 861,
      last_column: 8,
      range: [
        47691,
        47691,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 861,
      first_column: 8,
      last_line: 861,
      last_column: 9,
      range: [
        47691,
        47692,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: "'",
    yylloc: {
      first_line: 861,
      first_column: 9,
      last_line: 861,
      last_column: 11,
      range: [
        47692,
        47694,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                             ',
    yylloc: {
      first_line: 861,
      first_column: 11,
      last_line: 861,
      last_column: 40,
      range: [
        47694,
        47723,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 861,
      first_column: 40,
      last_line: 861,
      last_column: 58,
      range: [
        47723,
        47741,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                            unterminated string constant in %options entry.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \``,
    yylloc: {
      first_line: 861,
      first_column: 58,
      last_line: 866,
      last_column: 41,
      range: [
        47741,
        48016,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 866,
      first_column: 41,
      last_line: 866,
      last_column: 43,
      range: [
        48016,
        48018,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 866,
      first_column: 43,
      last_line: 867,
      last_column: 40,
      range: [
        48018,
        48059,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 867,
      first_column: 40,
      last_line: 867,
      last_column: 47,
      range: [
        48059,
        48066,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'UNTERMINATED_STRING_ERROR'",
    yylloc: {
      first_line: 867,
      first_column: 47,
      last_line: 867,
      last_column: 74,
      range: [
        48066,
        48093,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 867,
      first_column: 74,
      last_line: 867,
      last_column: 75,
      range: [
        48093,
        48094,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 867,
      first_column: 75,
      last_line: 867,
      last_column: 75,
      range: [
        48094,
        48094,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 868,
      first_column: 0,
      last_line: 868,
      last_column: 1,
      range: [
        48095,
        48096,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'options',
    yylloc: {
      first_line: 868,
      first_column: 1,
      last_line: 868,
      last_column: 8,
      range: [
        48096,
        48103,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 868,
      first_column: 8,
      last_line: 868,
      last_column: 8,
      range: [
        48103,
        48103,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 868,
      first_column: 8,
      last_line: 868,
      last_column: 9,
      range: [
        48103,
        48104,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '`',
    yylloc: {
      first_line: 868,
      first_column: 9,
      last_line: 868,
      last_column: 11,
      range: [
        48104,
        48106,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                             ',
    yylloc: {
      first_line: 868,
      first_column: 11,
      last_line: 868,
      last_column: 40,
      range: [
        48106,
        48135,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 868,
      first_column: 40,
      last_line: 868,
      last_column: 58,
      range: [
        48135,
        48153,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                            unterminated string constant in %options entry.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \``,
    yylloc: {
      first_line: 868,
      first_column: 58,
      last_line: 873,
      last_column: 41,
      range: [
        48153,
        48428,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 873,
      first_column: 41,
      last_line: 873,
      last_column: 43,
      range: [
        48428,
        48430,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 873,
      first_column: 43,
      last_line: 874,
      last_column: 40,
      range: [
        48430,
        48471,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 874,
      first_column: 40,
      last_line: 874,
      last_column: 47,
      range: [
        48471,
        48478,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'UNTERMINATED_STRING_ERROR'",
    yylloc: {
      first_line: 874,
      first_column: 47,
      last_line: 874,
      last_column: 74,
      range: [
        48478,
        48505,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 874,
      first_column: 74,
      last_line: 874,
      last_column: 75,
      range: [
        48505,
        48506,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 874,
      first_column: 75,
      last_line: 874,
      last_column: 75,
      range: [
        48506,
        48506,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 876,
      first_column: 0,
      last_line: 876,
      last_column: 1,
      range: [
        48508,
        48509,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 876,
      first_column: 1,
      last_line: 876,
      last_column: 2,
      range: [
        48509,
        48510,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 876,
      first_column: 2,
      last_line: 876,
      last_column: 2,
      range: [
        48510,
        48510,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 876,
      first_column: 2,
      last_line: 876,
      last_column: 3,
      range: [
        48510,
        48511,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '"',
    yylloc: {
      first_line: 876,
      first_column: 3,
      last_line: 876,
      last_column: 5,
      range: [
        48511,
        48513,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                   ',
    yylloc: {
      first_line: 876,
      first_column: 5,
      last_line: 876,
      last_column: 40,
      range: [
        48513,
        48548,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'let rules = (this.topState() === ',
    yylloc: {
      first_line: 876,
      first_column: 40,
      last_line: 876,
      last_column: 73,
      range: [
        48548,
        48581,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'macro'",
    yylloc: {
      first_line: 876,
      first_column: 73,
      last_line: 876,
      last_column: 80,
      range: [
        48581,
        48588,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ' ? ',
    yylloc: {
      first_line: 876,
      first_column: 80,
      last_line: 876,
      last_column: 83,
      range: [
        48588,
        48591,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `'macro\\'s'`,
    yylloc: {
      first_line: 876,
      first_column: 83,
      last_line: 876,
      last_column: 93,
      range: [
        48591,
        48601,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ' : this.topState());',
    yylloc: {
      first_line: 876,
      first_column: 93,
      last_line: 876,
      last_column: 113,
      range: [
        48601,
        48621,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 876,
      first_column: 113,
      last_line: 877,
      last_column: 40,
      range: [
        48621,
        48662,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 877,
      first_column: 40,
      last_line: 877,
      last_column: 58,
      range: [
        48662,
        48680,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                            unterminated string constant encountered while lexing
                                            ${rules}.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \``,
    yylloc: {
      first_line: 877,
      first_column: 58,
      last_line: 883,
      last_column: 41,
      range: [
        48680,
        49015,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 883,
      first_column: 41,
      last_line: 883,
      last_column: 43,
      range: [
        49015,
        49017,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 883,
      first_column: 43,
      last_line: 884,
      last_column: 40,
      range: [
        49017,
        49058,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 884,
      first_column: 40,
      last_line: 884,
      last_column: 47,
      range: [
        49058,
        49065,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'UNTERMINATED_STRING_ERROR'",
    yylloc: {
      first_line: 884,
      first_column: 47,
      last_line: 884,
      last_column: 74,
      range: [
        49065,
        49092,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 884,
      first_column: 74,
      last_line: 884,
      last_column: 75,
      range: [
        49092,
        49093,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 884,
      first_column: 75,
      last_line: 884,
      last_column: 75,
      range: [
        49093,
        49093,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 885,
      first_column: 0,
      last_line: 885,
      last_column: 1,
      range: [
        49094,
        49095,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 885,
      first_column: 1,
      last_line: 885,
      last_column: 2,
      range: [
        49095,
        49096,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 885,
      first_column: 2,
      last_line: 885,
      last_column: 2,
      range: [
        49096,
        49096,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 885,
      first_column: 2,
      last_line: 885,
      last_column: 3,
      range: [
        49096,
        49097,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: "'",
    yylloc: {
      first_line: 885,
      first_column: 3,
      last_line: 885,
      last_column: 5,
      range: [
        49097,
        49099,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                   ',
    yylloc: {
      first_line: 885,
      first_column: 5,
      last_line: 885,
      last_column: 40,
      range: [
        49099,
        49134,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'let rules = (this.topState() === ',
    yylloc: {
      first_line: 885,
      first_column: 40,
      last_line: 885,
      last_column: 73,
      range: [
        49134,
        49167,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'macro'",
    yylloc: {
      first_line: 885,
      first_column: 73,
      last_line: 885,
      last_column: 80,
      range: [
        49167,
        49174,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ' ? ',
    yylloc: {
      first_line: 885,
      first_column: 80,
      last_line: 885,
      last_column: 83,
      range: [
        49174,
        49177,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `'macro\\'s'`,
    yylloc: {
      first_line: 885,
      first_column: 83,
      last_line: 885,
      last_column: 93,
      range: [
        49177,
        49187,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ' : this.topState());',
    yylloc: {
      first_line: 885,
      first_column: 93,
      last_line: 885,
      last_column: 113,
      range: [
        49187,
        49207,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 885,
      first_column: 113,
      last_line: 886,
      last_column: 40,
      range: [
        49207,
        49248,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 886,
      first_column: 40,
      last_line: 886,
      last_column: 58,
      range: [
        49248,
        49266,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                            unterminated string constant encountered while lexing
                                            ${rules}.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \``,
    yylloc: {
      first_line: 886,
      first_column: 58,
      last_line: 892,
      last_column: 41,
      range: [
        49266,
        49601,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 892,
      first_column: 41,
      last_line: 892,
      last_column: 43,
      range: [
        49601,
        49603,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 892,
      first_column: 43,
      last_line: 893,
      last_column: 40,
      range: [
        49603,
        49644,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 893,
      first_column: 40,
      last_line: 893,
      last_column: 47,
      range: [
        49644,
        49651,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'UNTERMINATED_STRING_ERROR'",
    yylloc: {
      first_line: 893,
      first_column: 47,
      last_line: 893,
      last_column: 74,
      range: [
        49651,
        49678,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 893,
      first_column: 74,
      last_line: 893,
      last_column: 75,
      range: [
        49678,
        49679,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 893,
      first_column: 75,
      last_line: 893,
      last_column: 75,
      range: [
        49679,
        49679,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 894,
      first_column: 0,
      last_line: 894,
      last_column: 1,
      range: [
        49680,
        49681,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 894,
      first_column: 1,
      last_line: 894,
      last_column: 2,
      range: [
        49681,
        49682,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 894,
      first_column: 2,
      last_line: 894,
      last_column: 2,
      range: [
        49682,
        49682,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 894,
      first_column: 2,
      last_line: 894,
      last_column: 3,
      range: [
        49682,
        49683,
      ],
    },
  },
  {
    id: 54,
    token: '"CHARACTER_LIT"',
    yytext: '`',
    yylloc: {
      first_line: 894,
      first_column: 3,
      last_line: 894,
      last_column: 5,
      range: [
        49683,
        49685,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                                   ',
    yylloc: {
      first_line: 894,
      first_column: 5,
      last_line: 894,
      last_column: 40,
      range: [
        49685,
        49720,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'let rules = (this.topState() === ',
    yylloc: {
      first_line: 894,
      first_column: 40,
      last_line: 894,
      last_column: 73,
      range: [
        49720,
        49753,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'macro'",
    yylloc: {
      first_line: 894,
      first_column: 73,
      last_line: 894,
      last_column: 80,
      range: [
        49753,
        49760,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ' ? ',
    yylloc: {
      first_line: 894,
      first_column: 80,
      last_line: 894,
      last_column: 83,
      range: [
        49760,
        49763,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `'macro\\'s'`,
    yylloc: {
      first_line: 894,
      first_column: 83,
      last_line: 894,
      last_column: 93,
      range: [
        49763,
        49773,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ' : this.topState());',
    yylloc: {
      first_line: 894,
      first_column: 93,
      last_line: 894,
      last_column: 113,
      range: [
        49773,
        49793,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 894,
      first_column: 113,
      last_line: 895,
      last_column: 40,
      range: [
        49793,
        49834,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 895,
      first_column: 40,
      last_line: 895,
      last_column: 58,
      range: [
        49834,
        49852,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                            unterminated string constant encountered while lexing
                                            ${rules}.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \``,
    yylloc: {
      first_line: 895,
      first_column: 58,
      last_line: 901,
      last_column: 41,
      range: [
        49852,
        50187,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 901,
      first_column: 41,
      last_line: 901,
      last_column: 43,
      range: [
        50187,
        50189,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 901,
      first_column: 43,
      last_line: 902,
      last_column: 40,
      range: [
        50189,
        50230,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 902,
      first_column: 40,
      last_line: 902,
      last_column: 47,
      range: [
        50230,
        50237,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'UNTERMINATED_STRING_ERROR'",
    yylloc: {
      first_line: 902,
      first_column: 47,
      last_line: 902,
      last_column: 74,
      range: [
        50237,
        50264,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 902,
      first_column: 74,
      last_line: 902,
      last_column: 75,
      range: [
        50264,
        50265,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 902,
      first_column: 75,
      last_line: 902,
      last_column: 75,
      range: [
        50265,
        50265,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 905,
      first_column: 0,
      last_line: 905,
      last_column: 1,
      range: [
        50268,
        50269,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'macro',
    yylloc: {
      first_line: 905,
      first_column: 1,
      last_line: 905,
      last_column: 6,
      range: [
        50269,
        50274,
      ],
    },
  },
  {
    id: 14,
    token: '","',
    yytext: ',',
    yylloc: {
      first_line: 905,
      first_column: 6,
      last_line: 905,
      last_column: 7,
      range: [
        50274,
        50275,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'rules',
    yylloc: {
      first_line: 905,
      first_column: 7,
      last_line: 905,
      last_column: 12,
      range: [
        50275,
        50280,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 905,
      first_column: 12,
      last_line: 905,
      last_column: 12,
      range: [
        50280,
        50280,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 905,
      first_column: 12,
      last_line: 905,
      last_column: 13,
      range: [
        50280,
        50281,
      ],
    },
  },
  {
    id: 15,
    token: '"."',
    yytext: '.',
    yylloc: {
      first_line: 905,
      first_column: 13,
      last_line: 905,
      last_column: 14,
      range: [
        50281,
        50282,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                          ',
    yylloc: {
      first_line: 905,
      first_column: 14,
      last_line: 905,
      last_column: 40,
      range: [
        50282,
        50308,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '/* b0rk on bad characters */',
    yylloc: {
      first_line: 905,
      first_column: 40,
      last_line: 905,
      last_column: 68,
      range: [
        50308,
        50336,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 905,
      first_column: 68,
      last_line: 906,
      last_column: 40,
      range: [
        50336,
        50377,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'let rules = (this.topState() === ',
    yylloc: {
      first_line: 906,
      first_column: 40,
      last_line: 906,
      last_column: 73,
      range: [
        50377,
        50410,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'macro'",
    yylloc: {
      first_line: 906,
      first_column: 73,
      last_line: 906,
      last_column: 80,
      range: [
        50410,
        50417,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ' ? ',
    yylloc: {
      first_line: 906,
      first_column: 80,
      last_line: 906,
      last_column: 83,
      range: [
        50417,
        50420,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `'macro\\'s'`,
    yylloc: {
      first_line: 906,
      first_column: 83,
      last_line: 906,
      last_column: 93,
      range: [
        50420,
        50430,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ' : this.topState());',
    yylloc: {
      first_line: 906,
      first_column: 93,
      last_line: 906,
      last_column: 113,
      range: [
        50430,
        50450,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 906,
      first_column: 113,
      last_line: 907,
      last_column: 40,
      range: [
        50450,
        50491,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 907,
      first_column: 40,
      last_line: 907,
      last_column: 58,
      range: [
        50491,
        50509,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                            unsupported lexer input encountered while lexing
                                            ${rules} (i.e. jison lex regexes) in ${dquote(this.topState())} state.

                                            NOTE: When you want this input to be interpreted as a LITERAL part
                                                  of a lex rule regex, you MUST enclose it in double or
                                                  single quotes.

                                                  If not, then know that this input is not accepted as a valid
                                                  regex expression here in jison-lex ${rules}.

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \``,
    yylloc: {
      first_line: 907,
      first_column: 58,
      last_line: 920,
      last_column: 41,
      range: [
        50509,
        51388,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 920,
      first_column: 41,
      last_line: 920,
      last_column: 43,
      range: [
        51388,
        51390,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 920,
      first_column: 43,
      last_line: 921,
      last_column: 40,
      range: [
        51390,
        51431,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 921,
      first_column: 40,
      last_line: 921,
      last_column: 47,
      range: [
        51431,
        51438,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'error'",
    yylloc: {
      first_line: 921,
      first_column: 47,
      last_line: 921,
      last_column: 54,
      range: [
        51438,
        51445,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 921,
      first_column: 54,
      last_line: 921,
      last_column: 55,
      range: [
        51445,
        51446,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 921,
      first_column: 55,
      last_line: 921,
      last_column: 55,
      range: [
        51446,
        51446,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 923,
      first_column: 0,
      last_line: 923,
      last_column: 1,
      range: [
        51448,
        51449,
      ],
    },
  },
  {
    id: 56,
    token: '"OPTION_VALUE"',
    yytext: 'options',
    yylloc: {
      first_line: 923,
      first_column: 1,
      last_line: 923,
      last_column: 8,
      range: [
        51449,
        51456,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 923,
      first_column: 8,
      last_line: 923,
      last_column: 8,
      range: [
        51456,
        51456,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 923,
      first_column: 8,
      last_line: 923,
      last_column: 9,
      range: [
        51456,
        51457,
      ],
    },
  },
  {
    id: 15,
    token: '"."',
    yytext: '.',
    yylloc: {
      first_line: 923,
      first_column: 9,
      last_line: 923,
      last_column: 10,
      range: [
        51457,
        51458,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                              ',
    yylloc: {
      first_line: 923,
      first_column: 10,
      last_line: 923,
      last_column: 40,
      range: [
        51458,
        51488,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'yyerror(rmCommonWS',
    yylloc: {
      first_line: 923,
      first_column: 40,
      last_line: 923,
      last_column: 58,
      range: [
        51488,
        51506,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: `\`
                                            unsupported lexer input: ${dquote(yytext)}
                                            while lexing in ${dquote(this.topState())} state.

                                            If this input was intentional, you might want to put quotes around
                                            it; any JavaScript string quoting style is accepted (single quotes,
                                            double quotes *or* backtick quotes a la ES6 string templates).

                                              Erroneous area:
                                            ${this.prettyPrintRange(yylloc)}
                                        \``,
    yylloc: {
      first_line: 923,
      first_column: 58,
      last_line: 933,
      last_column: 41,
      range: [
        51506,
        52201,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ');',
    yylloc: {
      first_line: 933,
      first_column: 41,
      last_line: 933,
      last_column: 43,
      range: [
        52201,
        52203,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: '\n                                        ',
    yylloc: {
      first_line: 933,
      first_column: 43,
      last_line: 934,
      last_column: 40,
      range: [
        52203,
        52244,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 934,
      first_column: 40,
      last_line: 934,
      last_column: 47,
      range: [
        52244,
        52251,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'error'",
    yylloc: {
      first_line: 934,
      first_column: 47,
      last_line: 934,
      last_column: 54,
      range: [
        52251,
        52258,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 934,
      first_column: 54,
      last_line: 934,
      last_column: 55,
      range: [
        52258,
        52259,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 934,
      first_column: 55,
      last_line: 934,
      last_column: 55,
      range: [
        52259,
        52259,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 936,
      first_column: 0,
      last_line: 936,
      last_column: 1,
      range: [
        52261,
        52262,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 936,
      first_column: 1,
      last_line: 936,
      last_column: 2,
      range: [
        52262,
        52263,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 936,
      first_column: 2,
      last_line: 936,
      last_column: 2,
      range: [
        52263,
        52263,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 936,
      first_column: 2,
      last_line: 936,
      last_column: 3,
      range: [
        52263,
        52264,
      ],
    },
  },
  {
    id: 15,
    token: '"."',
    yytext: '.',
    yylloc: {
      first_line: 936,
      first_column: 3,
      last_line: 936,
      last_column: 4,
      range: [
        52264,
        52265,
      ],
    },
  },
  {
    id: 37,
    token: '"ENTIRE_ACTION"',
    yytext: {
      srcCode: `
                                            /* b0rk on bad characters */
                                            yyerror(rmCommonWS\`
                                                unsupported lexer input: ${dquote(yytext)}
                                                while lexing in ${dquote(this.topState())} state.

                                                  Erroneous area:
                                                ${this.prettyPrintRange(yylloc)}
                                            \`);
                                            return 'error';
                                        `,
      shiftCount: 625,
      action_start_marker: '%{',
      action_end_marker: '%}',
    },
    yylloc: {
      first_line: 936,
      first_column: 40,
      last_line: 946,
      last_column: 42,
      range: [
        52301,
        52928,
      ],
    },
  },
  {
    id: 3,
    token: '"<"',
    yytext: '<',
    yylloc: {
      first_line: 948,
      first_column: 0,
      last_line: 948,
      last_column: 1,
      range: [
        52930,
        52931,
      ],
    },
  },
  {
    id: 11,
    token: '"*"',
    yytext: '*',
    yylloc: {
      first_line: 948,
      first_column: 1,
      last_line: 948,
      last_column: 2,
      range: [
        52931,
        52932,
      ],
    },
  },
  {
    id: 22,
    token: '"OPTIONS_END"',
    yytext: '',
    yylloc: {
      first_line: 948,
      first_column: 2,
      last_line: 948,
      last_column: 2,
      range: [
        52932,
        52932,
      ],
    },
  },
  {
    id: 6,
    token: '">"',
    yytext: '>',
    yylloc: {
      first_line: 948,
      first_column: 2,
      last_line: 948,
      last_column: 3,
      range: [
        52932,
        52933,
      ],
    },
  },
  {
    id: 17,
    token: '"$"',
    yytext: '<<EOF>>',
    yylloc: {
      first_line: 948,
      first_column: 3,
      last_line: 948,
      last_column: 10,
      range: [
        52933,
        52940,
      ],
    },
  },
  {
    id: 25,
    token: '"ACTION_START"',
    yytext: '                              ',
    yylloc: {
      first_line: 948,
      first_column: 10,
      last_line: 948,
      last_column: 40,
      range: [
        52940,
        52970,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: 'return ',
    yylloc: {
      first_line: 948,
      first_column: 40,
      last_line: 948,
      last_column: 47,
      range: [
        52970,
        52977,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: "'EOF'",
    yylloc: {
      first_line: 948,
      first_column: 47,
      last_line: 948,
      last_column: 52,
      range: [
        52977,
        52982,
      ],
    },
  },
  {
    id: 38,
    token: '"ACTION_BODY"',
    yytext: ';',
    yylloc: {
      first_line: 948,
      first_column: 52,
      last_line: 948,
      last_column: 53,
      range: [
        52982,
        52983,
      ],
    },
  },
  {
    id: 35,
    token: '"ACTION_END"',
    yytext: '',
    yylloc: {
      first_line: 948,
      first_column: 53,
      last_line: 948,
      last_column: 53,
      range: [
        52983,
        52983,
      ],
    },
  },
  {
    id: 33,
    token: '"%%"',
    yytext: '%%',
    yylloc: {
      first_line: 950,
      first_column: 0,
      last_line: 950,
      last_column: 2,
      range: [
        52985,
        52987,
      ],
    },
  },
  {
    id: 58,
    token: '"TRAILING_CODE_CHUNK"',
    yytext: `


`,
    yylloc: {
      first_line: 950,
      first_column: 2,
      last_line: 953,
      last_column: 0,
      range: [
        52987,
        52990,
      ],
    },
  },
  {
    id: 58,
    token: '"TRAILING_CODE_CHUNK"',
    yytext: `const rmCommonWS = helpers.rmCommonWS;
const dquote     = helpers.dquote;
const scanRegExp = helpers.scanRegExp;










lexer.warn = function l_warn() {
    if (this.yy && this.yy.parser && typeof this.yy.parser.warn === 'function') {
        return this.yy.parser.warn.apply(this, arguments);
    } else {
        console.warn.apply(console, arguments);
    }
};

lexer.log = function l_log() {
    if (this.yy && this.yy.parser && typeof this.yy.parser.log === 'function') {
        return this.yy.parser.log.apply(this, arguments);
    } else {
        console.log.apply(console, arguments);
    }
};
`,
    yylloc: {
      first_line: 953,
      first_column: 0,
      last_line: 981,
      last_column: 0,
      range: [
        52990,
        53597,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 981,
      first_column: 0,
      last_line: 981,
      last_column: 0,
      range: [
        53597,
        53597,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 981,
      first_column: 0,
      last_line: 981,
      last_column: 0,
      range: [
        53597,
        53597,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 981,
      first_column: 0,
      last_line: 981,
      last_column: 0,
      range: [
        53597,
        53597,
      ],
    },
  },
  {
    id: 1,
    token: 'end of input',
    yytext: '',
    yylloc: {
      first_line: 981,
      first_column: 0,
      last_line: 981,
      last_column: 0,
      range: [
        53597,
        53597,
      ],
    },
  },
  {
    id: -2,
    token: null,
    summary: {
      totalTokenCount: 1601,
      EOFTokenCount: 4,
      ERRORTokenCount: 0,
      ParseErrorCallCount: 1,
      DetectedParseErrorCallCount: 0,
      fatalExceptionCount: 0,
    },
  },
]