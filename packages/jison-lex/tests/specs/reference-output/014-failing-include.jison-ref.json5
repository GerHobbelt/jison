/* 
 * grammar spec generated by @gerhobbelt/jison-lex for input file:
 *     :/014-failing-include.jison
 */

[
  {
    id: -1,
    token: null,
    fail: 1,
    err: {
      name: 'JisonLexerError',
      hash: {
        errStr: `Lexical error on line 13: 
unsupported lexer input: “.”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
10: [A-Z]           -> 'A'
11: 
12: %%
13: %include bugger-it-millenium-hands-and-shrimp.js
^^...............................................^
`,
        recoverable: false,
        text: '.',
        token: null,
        line: 12,
        isLexerError: true,
        yyErrorInvoked: true,
        isLexerBacktrackingNotSupportedError: false,
        isLexerInternalError: false,
        extra_error_attributes: null,
        lexerHasAlreadyForwardedCursorBy1: false,
      },
      message: `Lexical error on line 13: 
unsupported lexer input: “.”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
10: [A-Z]           -> 'A'
11: 
12: %%
13: %include bugger-it-millenium-hands-and-shrimp.js
^^...............................................^
`,
      stack: `JisonLexerError: Lexical error on line 13: 
unsupported lexer input: “.”
while lexing in “options” state.

If this input was intentional, you might want to put quotes around
it; any JavaScript string quoting style is accepted (single quotes,
double quotes *or* backtick quotes a la ES6 string templates).

  Erroneous area:
10: [A-Z]           -> 'A'
11: 
12: %%
13: %include bugger-it-millenium-hands-and-shrimp.js
^^...............................................^

    at Object.parseError (/regexp-lexer-cjs.js:7935:15)
    at Object.lexer_parseError [as parseError] (/regexp-lexer-cjs.js:10078:50)
    at Object.yyError [as yyerror] (/regexp-lexer-cjs.js:10105:22)
    at Object.lexer__performAction [as performAction] (/regexp-lexer-cjs.js:12170:6)
    at Object.lexer_test_match [as test_match] (/regexp-lexer-cjs.js:11039:40)
    at Object.lexer_next [as next] (/regexp-lexer-cjs.js:11139:34)
    at Object.lexer_lex [as lex] (/regexp-lexer-cjs.js:11254:22)
    at stdLex (/regexp-lexer-cjs.js:8502:27)
    at Object.parse (/regexp-lexer-cjs.js:8699:30)
    at Object.yyparse [as parse] (/regexp-lexer-cjs.js:12991:25)
    at autodetectAndConvertToJSONformat (/regexp-lexer-cjs.js:14231:35)
    at processGrammar (/regexp-lexer-cjs.js:17582:12)
    at test_me (/regexp-lexer-cjs.js:15320:23)
    at new RegExpLexer (/regexp-lexer-cjs.js:15461:17)
    at Context.testEachLexerExample (/regexplexer.js:3707:25)
    at callFn (/runnable.js:364:21)
    at Test.Runnable.run (/runnable.js:352:5)
    at Runner.runTest (/runner.js:677:10)
    at /runner.js:801:12
    at next (/runner.js:594:14)
    at /runner.js:604:7
    at next (/runner.js:486:14)
    at cbHookRun (/runner.js:551:7)
    at done (/runnable.js:308:5)
    at callFn (/runnable.js:387:7)
    at Hook.Runnable.run (/runnable.js:352:5)
    at next (/runner.js:510:10)
    at Immediate._onImmediate (/runner.js:572:5)
    at processImmediate (/timers.js:456:21)`,
    },
  },
  {
    id: -2,
    token: null,
    summary: {
      totalTokenCount: 1,
      EOFTokenCount: 0,
      ERRORTokenCount: 0,
      ParseErrorCallCount: 0,
      DetectedParseErrorCallCount: 0,
      fatalExceptionCount: 1,
    },
  },
]