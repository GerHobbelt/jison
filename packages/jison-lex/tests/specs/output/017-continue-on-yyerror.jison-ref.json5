/* 
 * grammar spec generated by @gerhobbelt/jison-lex for input file:
 *     :/017-continue-on-yyerror.jison
 */

[
  {
    id: -42,
    token: -42,
    yytext: {
      errStr: `Lexical error on line 1: 'a' (97): illegal character at line 0.

  Erroneous area:
1: a b c
^..^`,
      recoverable: false,
      text: 'a',
      token: null,
      line: 0,
      loc: {
        first_line: 1,
        first_column: 0,
        last_line: 1,
        last_column: 1,
        range: [
          0,
          1,
        ],
      },
      yy: {},
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 4,
        yytext: 'a',
        yyleng: 1,
        matches: [
          'a',
        ],
        activeCondition: 'INITIAL',
        conditionStackDepth: 1,
      },
    },
    yylloc: {
      first_line: 1,
      first_column: 0,
      last_line: 1,
      last_column: 1,
      range: [
        0,
        1,
      ],
    },
  },
  {
    id: -42,
    token: -42,
    yytext: {
      errStr: `Lexical error on line 1: ' ' (32): illegal character at line 0.

  Erroneous area:
1: a b c
^...^`,
      recoverable: false,
      text: ' ',
      token: null,
      line: 0,
      loc: {
        first_line: 1,
        first_column: 1,
        last_line: 1,
        last_column: 2,
        range: [
          1,
          2,
        ],
      },
      yy: {},
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 3,
        yytext: ' ',
        yyleng: 1,
        matches: [
          ' ',
        ],
        activeCondition: 'INITIAL',
        conditionStackDepth: 1,
      },
    },
    yylloc: {
      first_line: 1,
      first_column: 1,
      last_line: 1,
      last_column: 2,
      range: [
        1,
        2,
      ],
    },
  },
  {
    id: -42,
    token: -42,
    yytext: {
      errStr: `Lexical error on line 1: 'b' (98): illegal character at line 0.

  Erroneous area:
1: a b c
^....^`,
      recoverable: false,
      text: 'b',
      token: null,
      line: 0,
      loc: {
        first_line: 1,
        first_column: 2,
        last_line: 1,
        last_column: 3,
        range: [
          2,
          3,
        ],
      },
      yy: {},
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 2,
        yytext: 'b',
        yyleng: 1,
        matches: [
          'b',
        ],
        activeCondition: 'INITIAL',
        conditionStackDepth: 1,
      },
    },
    yylloc: {
      first_line: 1,
      first_column: 2,
      last_line: 1,
      last_column: 3,
      range: [
        2,
        3,
      ],
    },
  },
  {
    id: -42,
    token: -42,
    yytext: {
      errStr: `Lexical error on line 1: ' ' (32): illegal character at line 0.

  Erroneous area:
1: a b c
^.....^`,
      recoverable: false,
      text: ' ',
      token: null,
      line: 0,
      loc: {
        first_line: 1,
        first_column: 3,
        last_line: 1,
        last_column: 4,
        range: [
          3,
          4,
        ],
      },
      yy: {},
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: 1,
        yytext: ' ',
        yyleng: 1,
        matches: [
          ' ',
        ],
        activeCondition: 'INITIAL',
        conditionStackDepth: 1,
      },
    },
    yylloc: {
      first_line: 1,
      first_column: 3,
      last_line: 1,
      last_column: 4,
      range: [
        3,
        4,
      ],
    },
  },
  {
    id: -42,
    token: -42,
    yytext: {
      errStr: `Lexical error on line 1: 'c' (99): illegal character at line 0.

  Erroneous area:
1: a b c
^......^`,
      recoverable: false,
      text: 'c',
      token: null,
      line: 0,
      loc: {
        first_line: 1,
        first_column: 4,
        last_line: 1,
        last_column: 5,
        range: [
          4,
          5,
        ],
      },
      yy: {},
      isLexerError: true,
      yyErrorInvoked: true,
      isLexerBacktrackingNotSupportedError: false,
      isLexerInternalError: false,
      extra_error_attributes: null,
      lexerHasAlreadyForwardedCursorBy1: false,
      errorDiag: {
        inputPos: -1,
        yytext: 'c',
        yyleng: 1,
        matches: [
          'c',
        ],
        activeCondition: 'INITIAL',
        conditionStackDepth: 1,
      },
    },
    yylloc: {
      first_line: 1,
      first_column: 4,
      last_line: 1,
      last_column: 5,
      range: [
        4,
        5,
      ],
    },
  },
  {
    id: 1,
    token: 'EOF',
    yytext: '',
    yylloc: {
      first_line: 1,
      first_column: 5,
      last_line: 1,
      last_column: 5,
      range: [
        5,
        5,
      ],
    },
  },
  {
    id: 1,
    token: 'EOF',
    yytext: '',
    yylloc: {
      first_line: 1,
      first_column: 5,
      last_line: 1,
      last_column: 5,
      range: [
        5,
        5,
      ],
    },
  },
  {
    id: 1,
    token: 'EOF',
    yytext: '',
    yylloc: {
      first_line: 1,
      first_column: 5,
      last_line: 1,
      last_column: 5,
      range: [
        5,
        5,
      ],
    },
  },
  {
    id: 1,
    token: 'EOF',
    yytext: '',
    yylloc: {
      first_line: 1,
      first_column: 5,
      last_line: 1,
      last_column: 5,
      range: [
        5,
        5,
      ],
    },
  },
  {
    id: -2,
    token: null,
    summary: {
      totalTokenCount: 9,
      EOFTokenCount: 4,
      ERRORTokenCount: 0,
      ParseErrorCallCount: 5,
      DetectedParseErrorCallCount: 5,
      fatalExceptionCount: 0,
    },
  },
]