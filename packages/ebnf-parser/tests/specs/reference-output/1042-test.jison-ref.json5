/* 
 * grammar spec generated by @gerhobbelt/ebnf-parser for input file:
 *     :/1042-test.jison
 */

{
  options: {
    ebnf: true,
    defaultActionMode: 'skip',
  },
  ebnf: {
    top: {
      id: 'top',
      productions: [
        {
          handle: [
            {
              type: 3,
              symbol: 'word',
              alias: 'alpha',
            },
            {
              type: 2,
              symbol: [
                [
                  {
                    type: 3,
                    symbol: 'word',
                    alias: 'alex',
                  },
                  {
                    type: 2,
                    symbol: [
                      [
                        {
                          type: 3,
                          symbol: 'word',
                          alias: 'bob',
                        },
                        {
                          type: 3,
                          symbol: 'word',
                          alias: 'carol',
                        },
                        {
                          type: 4,
                          symbol: "','",
                        },
                      ],
                    ],
                    suffix: '+',
                    alias: 'david',
                  },
                  {
                    type: 3,
                    symbol: 'word',
                  },
                  {
                    type: 4,
                    symbol: "','",
                  },
                ],
              ],
              suffix: '*',
              alias: 'enoch',
            },
            {
              type: 3,
              symbol: 'EOF',
            },
          ],
          prec: null,
        },
      ],
    },
  },
  bnf: {
    top: {
      id: 'top',
      productions: [
        {
          handle: [
            {
              type: 3,
              symbol: 'word',
              alias: 'alpha',
            },
            'enoch',
            {
              type: 3,
              symbol: 'EOF',
            },
          ],
          prec: null,
        },
      ],
    },
    enoch: [
      {
        handle: [
          null,
        ],
        action: '$$ = [];',
      },
      {
        handle: [
          'enoch',
          [
            [
              {
                type: 3,
                symbol: 'word',
                alias: 'alex',
              },
              {
                type: 2,
                symbol: [
                  [
                    {
                      type: 3,
                      symbol: 'word',
                      alias: 'bob',
                    },
                    {
                      type: 3,
                      symbol: 'word',
                      alias: 'carol',
                    },
                    {
                      type: 4,
                      symbol: "','",
                    },
                  ],
                ],
                suffix: '+',
                alias: 'david',
              },
              {
                type: 3,
                symbol: 'word',
              },
              {
                type: 4,
                symbol: "','",
              },
            ],
          ],
        ],
        action: '$1.push($2);\n$$ = $1;',
      },
    ],
  },
  __original_input__: `//
// title: "test named complex expression (()) with %option default-action-mode=skip"
// input: "one two three four, five,"
//
// ...
//

%ebnf
%option default-action-mode=skip
%%
top : word[alpha] (word[alex] (word[bob] word[carol] ',')+[david] word ',')*[enoch] EOF;

`,
}