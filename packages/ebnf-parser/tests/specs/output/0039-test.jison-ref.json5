{
  fail: 1,
  spec: '%% foo: bar { return true; };',
  err: {
    hash: {
      errStr: `
rule production declaration error: did you terminate the rule production set with a semicolon?
    
  Erroneous area:
1: %% foo: bar { return true; };
^..............^
    
  Technical error report:
Parse error on line 1:
%% foo: bar { return t...
------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
      exception: null,
      text: '}',
      value: '}',
      token: '"error"',
      token_id: 2,
      line: 0,
      loc: {
        first_line: 1,
        first_column: 27,
        last_line: 1,
        last_column: 28,
        range: [
          27,
          28,
        ],
      },
      expected: [
        'end of input',
        '";"',
        '"%%"',
        '"ID"',
      ],
      recoverable: false,
      state: 127,
      action: 2,
      new_state: 74,
      symbol_stack: [],
      state_stack: [],
      value_stack: [],
      location_stack: [],
      stack_pointer: 7,
      yy: {
        options: {},
        __options_flags__: 0,
        __options_category_description__: 'the grammar productions definition section',
        ebnf: false,
        depth: 0,
        include_command_allowed: false,
      },
      lexer: {
        yy: {},
        _input: '',
        _clear_state: -1,
        _signaled_error_token: false,
        done: false,
        yylineno: 0,
        matched: '',
        conditionStack: [
          'INITIAL',
        ],
        yylloc: {
          first_line: 1,
          first_column: 0,
          last_line: 1,
          last_column: 0,
          range: [
            0,
            0,
          ],
        },
        offset: 0,
        base_position: 0,
        yytext: '',
        yyleng: 0,
        match: '',
        matches: false,
        _more: false,
        _backtrack: false,
      },
      parser: {
        yy: {},
        options: {
          type: 'lalr',
          hasPartialLrUpgradeOnConflict: true,
          errorRecoveryTokenDiscardCount: 3,
          ebnf: true,
        },
        symbols_: {
          $accept: 0,
          $end: 1,
          '%%': 34,
          '(': 6,
          ')': 7,
          '*': 8,
          '+': 10,
          ',': 13,
          ':': 4,
          ';': 3,
          '=': 14,
          '?': 9,
          ACTION: 49,
          ACTION_BODY: 50,
          ACTION_END: 21,
          ACTION_START: 23,
          ACTION_START_AT_SOL: 20,
          ALIAS: 46,
          ARROW_ACTION: 43,
          DEBUG: 25,
          EBNF: 26,
          EOF: 1,
          EOF_ID: 48,
          EPSILON: 44,
          FLEX_ARRAY_MODE: 18,
          FLEX_POINTER_MODE: 17,
          ID: 47,
          IMPORT: 29,
          INCLUDE: 31,
          INIT_CODE: 30,
          INTEGER: 41,
          LEFT: 37,
          LEX_BLOCK: 16,
          NONASSOC: 39,
          ON_ERROR_RECOVERY_REDUCE: 33,
          ON_ERROR_RECOVERY_SHIFT: 32,
          OPTIONS: 28,
          OPTIONS_END: 24,
          OPTION_STRING: 51,
          OPTION_VALUE: 52,
          PARSER_TYPE: 36,
          PARSE_PARAM: 35,
          PREC: 45,
          RIGHT: 38,
          START: 15,
          STRING_LIT: 42,
          TOKEN: 19,
          TOKEN_TYPE: 40,
          TRAILING_CODE_CHUNK: 53,
          UNKNOWN_DECL: 27,
          UNTERMINATED_ACTION_BLOCK: 22,
          action: 92,
          action_body: 93,
          action_comments_body: 94,
          action_ne: 91,
          associativity: 68,
          declaration: 57,
          declaration_list: 56,
          epilogue: 99,
          epilogue_chunk: 102,
          epilogue_chunks: 101,
          err: 104,
          error: 2,
          expression: 86,
          full_token_definitions: 70,
          grammar: 76,
          handle: 83,
          handle_action: 82,
          handle_list: 81,
          handle_sublist: 84,
          id: 90,
          id_list: 75,
          import_keyword: 59,
          include_keyword: 61,
          include_macro_code: 103,
          init: 55,
          init_code_keyword: 60,
          on_error_recovery_keyword: 62,
          one_full_token: 71,
          operator: 67,
          option: 96,
          option_keyword: 58,
          option_list: 95,
          option_name: 97,
          option_value: 98,
          optional_action_header_block: 100,
          optional_production_description: 80,
          optional_token_type: 72,
          parse_params: 65,
          parser_type: 66,
          prec: 88,
          production: 78,
          production_id: 79,
          production_list: 77,
          spec: 54,
          start_epilogue_marker: 64,
          start_productions_marker: 63,
          suffix: 87,
          suffixed_expression: 85,
          symbol: 89,
          token_description: 74,
          token_list: 69,
          token_value: 73,
          '{': 11,
          '|': 5,
          '}': 12,
        },
        terminals_: {
          '1': 'EOF',
          '2': 'error',
          '3': ';',
          '4': ':',
          '5': '|',
          '6': '(',
          '7': ')',
          '8': '*',
          '9': '?',
          '10': '+',
          '11': '{',
          '12': '}',
          '13': ',',
          '14': '=',
          '15': 'START',
          '16': 'LEX_BLOCK',
          '17': 'FLEX_POINTER_MODE',
          '18': 'FLEX_ARRAY_MODE',
          '19': 'TOKEN',
          '20': 'ACTION_START_AT_SOL',
          '21': 'ACTION_END',
          '22': 'UNTERMINATED_ACTION_BLOCK',
          '23': 'ACTION_START',
          '24': 'OPTIONS_END',
          '25': 'DEBUG',
          '26': 'EBNF',
          '27': 'UNKNOWN_DECL',
          '28': 'OPTIONS',
          '29': 'IMPORT',
          '30': 'INIT_CODE',
          '31': 'INCLUDE',
          '32': 'ON_ERROR_RECOVERY_SHIFT',
          '33': 'ON_ERROR_RECOVERY_REDUCE',
          '34': '%%',
          '35': 'PARSE_PARAM',
          '36': 'PARSER_TYPE',
          '37': 'LEFT',
          '38': 'RIGHT',
          '39': 'NONASSOC',
          '40': 'TOKEN_TYPE',
          '41': 'INTEGER',
          '42': 'STRING_LIT',
          '43': 'ARROW_ACTION',
          '44': 'EPSILON',
          '45': 'PREC',
          '46': 'ALIAS',
          '47': 'ID',
          '48': 'EOF_ID',
          '49': 'ACTION',
          '50': 'ACTION_BODY',
          '51': 'OPTION_STRING',
          '52': 'OPTION_VALUE',
          '53': 'TRAILING_CODE_CHUNK',
        },
        TERROR: 2,
        EOF: 1,
        __reentrant_call_depth: 0,
        __error_infos: [
          {
            errStr: `Parse error on line 1:
%% test: foo bar {action} |...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: '{',
            value: '{',
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 0,
            recoverable: true,
            state: 184,
            action: 0,
            new_state: 207,
            stack_pointer: 9,
          },
          {
            errStr: `
rule production declaration error: did you terminate the rule production set with a semicolon?
    
  Erroneous area:
1: %% test: foo bar {action} | baz ; hello: world %prec UMINUS ;extra: foo %prec '-' {action} ;
^...................^
2: 
3: 
    
  Technical error report:
Parse error on line 1:
%% test: foo bar {action} |...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: '}',
            value: '}',
            token: '"error"',
            token_id: 2,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 24,
              last_line: 1,
              last_column: 25,
              range: [
                24,
                25,
              ],
            },
            expected: [
              'end of input',
              '";"',
              '"%%"',
              '"ID"',
            ],
            recoverable: false,
            state: 127,
            action: 2,
            new_state: 74,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 7,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[0].value_stack.[13].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 1:
%% test: foo bar | {action}; ...
-------------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: '{',
            value: '{',
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 0,
            recoverable: true,
            state: 131,
            action: 0,
            new_state: 207,
            stack_pointer: 9,
          },
          {
            errStr: `
rule alternative production declaration error?
    
  Erroneous area:
1: %% test: foo bar | {action}; hello: world ;
^.....................^
2: 
3: 
    
  Technical error report:
Parse error on line 1:
%% test: foo bar | {action}; ...
-------------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: '{',
            value: '{',
            token: '"$accept"',
            token_id: 0,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 19,
              last_line: 1,
              last_column: 20,
              range: [
                19,
                20,
              ],
            },
            expected: [
              '";"',
              '":"',
              '"|"',
            ],
            recoverable: false,
            state: 182,
            action: 2,
            new_state: 82,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 9,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[2].value_stack.[11].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 1:
%% test: foo bar | %{action={...
-------------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: '%{action={}%}',
            value: 'action={}',
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 0,
            recoverable: true,
            state: 131,
            action: 0,
            new_state: 207,
            stack_pointer: 9,
          },
          {
            errStr: `
rule alternative production declaration error?
    
  Erroneous area:
1: %% test: foo bar | %{action={}%}; hello: world ;
^.....................^^^^^^^^^^^^^
2: 
3: 
    
  Technical error report:
Parse error on line 1:
%% test: foo bar | %{action={...
-------------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: '%{action={}%}',
            value: 'action={}',
            token: '"$accept"',
            token_id: 0,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 19,
              last_line: 1,
              last_column: 32,
              range: [
                19,
                32,
              ],
            },
            expected: [
              '";"',
              '":"',
              '"|"',
            ],
            recoverable: false,
            state: 182,
            action: 2,
            new_state: 82,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 9,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[4].value_stack.[11].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 1:
%% test: foo bar | {{action={...
-------------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: '{{action={};}}',
            value: 'action={};',
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 0,
            recoverable: true,
            state: 131,
            action: 0,
            new_state: 207,
            stack_pointer: 9,
          },
          {
            errStr: `
rule alternative production declaration error?
    
  Erroneous area:
1: %% test: foo bar | {{action={};}}; hello: world ;
^.....................^^^^^^^^^^^^^^
2: 
3: 
    
  Technical error report:
Parse error on line 1:
%% test: foo bar | {{action={...
-------------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: '{{action={};}}',
            value: 'action={};',
            token: '"$accept"',
            token_id: 0,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 19,
              last_line: 1,
              last_column: 33,
              range: [
                19,
                33,
              ],
            },
            expected: [
              '";"',
              '":"',
              '"|"',
            ],
            recoverable: false,
            state: 182,
            action: 2,
            new_state: 82,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 9,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[6].value_stack.[11].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 1:
%% test: foo bar {{ node({}...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: '{{ node({}, node({})); }}',
            value: ' node({}, node({})); ',
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 0,
            recoverable: true,
            state: 184,
            action: 0,
            new_state: 207,
            stack_pointer: 9,
          },
          {
            errStr: `
rule production declaration error: did you terminate the rule production set with a semicolon?
    
  Erroneous area:
1: %% test: foo bar {{ node({}, node({})); }}; hello: world ;
^...................^^^^^^^^^^^^^^^^^^^^^^^^^
2: 
3: 
    
  Technical error report:
Parse error on line 1:
%% test: foo bar {{ node({}...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: ';',
            value: ';',
            token: '"error"',
            token_id: 2,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 42,
              last_line: 1,
              last_column: 43,
              range: [
                42,
                43,
              ],
            },
            expected: [
              'end of input',
              '";"',
              '"%%"',
              '"ID"',
            ],
            recoverable: false,
            state: 127,
            action: 2,
            new_state: 74,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 7,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[8].value_stack.[13].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 1:
%% test: foo bar { node({},...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: '{',
            value: '{',
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 0,
            recoverable: true,
            state: 184,
            action: 0,
            new_state: 207,
            stack_pointer: 9,
          },
          {
            errStr: `
rule production declaration error: did you terminate the rule production set with a semicolon?
    
  Erroneous area:
1: %% test: foo bar { node({}, node({foo:'bar'})); }; hello: world ;
^...................^
2: 
3: 
    
  Technical error report:
Parse error on line 1:
%% test: foo bar { node({},...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: '{',
            value: '{',
            token: '"error"',
            token_id: 2,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 24,
              last_line: 1,
              last_column: 25,
              range: [
                24,
                25,
              ],
            },
            expected: [
              'end of input',
              '";"',
              '"%%"',
              '"ID"',
            ],
            recoverable: false,
            state: 127,
            action: 2,
            new_state: 74,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 7,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[10].value_stack.[13].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 1:
%% test: foo bar { node({},...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: '{',
            value: '{',
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 0,
            recoverable: true,
            state: 184,
            action: 0,
            new_state: 207,
            stack_pointer: 9,
          },
          {
            errStr: `
rule production declaration error: did you terminate the rule production set with a semicolon?
    
  Erroneous area:
1: %% test: foo bar { node({}, 3 / 4); /* { */ }; hello: world ;
^...................^
2: 
3: 
    
  Technical error report:
Parse error on line 1:
%% test: foo bar { node({},...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: '{',
            value: '{',
            token: '"error"',
            token_id: 2,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 24,
              last_line: 1,
              last_column: 25,
              range: [
                24,
                25,
              ],
            },
            expected: [
              'end of input',
              '";"',
              '"%%"',
              '"ID"',
            ],
            recoverable: false,
            state: 127,
            action: 2,
            new_state: 74,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 7,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[12].value_stack.[13].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 1:
%% test: foo bar { node({})...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: '{',
            value: '{',
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 0,
            recoverable: true,
            state: 184,
            action: 0,
            new_state: 207,
            stack_pointer: 9,
          },
          {
            errStr: `
rule production declaration error: did you terminate the rule production set with a semicolon?
    
  Erroneous area:
1: %% test: foo bar { node({}); // {
^...................^
2:  }; hello: world ;
3: 
    
  Technical error report:
Parse error on line 1:
%% test: foo bar { node({})...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: '{',
            value: '{',
            token: '"error"',
            token_id: 2,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 24,
              last_line: 1,
              last_column: 25,
              range: [
                24,
                25,
              ],
            },
            expected: [
              'end of input',
              '";"',
              '"%%"',
              '"ID"',
            ],
            recoverable: false,
            state: 127,
            action: 2,
            new_state: 74,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 7,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[14].value_stack.[13].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 1:
%% test: foo bar { node({},...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: '{',
            value: '{',
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 0,
            recoverable: true,
            state: 184,
            action: 0,
            new_state: 207,
            stack_pointer: 9,
          },
          {
            errStr: `
rule production declaration error: did you terminate the rule production set with a semicolon?
    
  Erroneous area:
1: %% test: foo bar { node({}, 3 / 4, '{'); /* { */ }; hello: world ;
^...................^
2: 
3: 
    
  Technical error report:
Parse error on line 1:
%% test: foo bar { node({},...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: '{',
            value: '{',
            token: '"error"',
            token_id: 2,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 24,
              last_line: 1,
              last_column: 25,
              range: [
                24,
                25,
              ],
            },
            expected: [
              'end of input',
              '";"',
              '"%%"',
              '"ID"',
            ],
            recoverable: false,
            state: 127,
            action: 2,
            new_state: 74,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 7,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[16].value_stack.[13].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 1:
%% test: foo bar { node({},...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: '{',
            value: '{',
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 0,
            recoverable: true,
            state: 184,
            action: 0,
            new_state: 207,
            stack_pointer: 9,
          },
          {
            errStr: `
rule production declaration error: did you terminate the rule production set with a semicolon?
    
  Erroneous area:
1: %% test: foo bar { node({}, 3 / 4, "{"); /* { */ }; hello: world ;
^...................^
2: 
3: 
    
  Technical error report:
Parse error on line 1:
%% test: foo bar { node({},...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: '{',
            value: '{',
            token: '"error"',
            token_id: 2,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 24,
              last_line: 1,
              last_column: 25,
              range: [
                24,
                25,
              ],
            },
            expected: [
              'end of input',
              '";"',
              '"%%"',
              '"ID"',
            ],
            recoverable: false,
            state: 127,
            action: 2,
            new_state: 74,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 7,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[18].value_stack.[13].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 1:
%% test: foo bar { node({},...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: '{',
            value: '{',
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 0,
            recoverable: true,
            state: 184,
            action: 0,
            new_state: 207,
            stack_pointer: 9,
          },
          {
            errStr: `
rule production declaration error: did you terminate the rule production set with a semicolon?
    
  Erroneous area:
1: %% test: foo bar { node({}, 3 / 4, "{"); /{'"/g; 1 / 2; }; hello: world { blah / bah };
^...................^
2: 
3: 
    
  Technical error report:
Parse error on line 1:
%% test: foo bar { node({},...
-----------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: '{',
            value: '{',
            token: '"error"',
            token_id: 2,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 24,
              last_line: 1,
              last_column: 25,
              range: [
                24,
                25,
              ],
            },
            expected: [
              'end of input',
              '";"',
              '"%%"',
              '"ID"',
            ],
            recoverable: false,
            state: 127,
            action: 2,
            new_state: 74,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 7,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[20].value_stack.[13].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 1:
%{var foo ...
^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: "%{var foo = 'bar';%}",
            value: "var foo = 'bar';",
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 0,
            recoverable: true,
            state: 14,
            action: 0,
            new_state: 207,
            stack_pointer: 4,
          },
          {
            errStr: `
There's very probably a problem with this '%{...%}' parser setup action code section.
    
  Erroneous area:
1: %{var foo = 'bar';%}
^..^
2: %%hello: world;
3: 
    
  Technical error report:
Parse error on line 1:
%{var foo ...
^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: "%{var foo = 'bar';%}",
            value: "var foo = 'bar';",
            token: '"$accept"',
            token_id: 0,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 0,
              last_line: 1,
              last_column: 20,
              range: [
                0,
                20,
              ],
            },
            expected: [
              '"START"',
              '"LEX_BLOCK"',
              '"FLEX_POINTER_MODE"',
              '"FLEX_ARRAY_MODE"',
              '"TOKEN"',
              '"ACTION_START_AT_SOL"',
              '"UNTERMINATED_ACTION_BLOCK"',
              '"ACTION_START"',
              '"DEBUG"',
              '"EBNF"',
              '"UNKNOWN_DECL"',
              '"OPTIONS"',
              '"IMPORT"',
              '"INIT_CODE"',
              '"ON_ERROR_RECOVERY_SHIFT"',
              '"ON_ERROR_RECOVERY_REDUCE"',
              '"%%"',
              '"PARSE_PARAM"',
              '"PARSER_TYPE"',
              '"LEFT"',
              '"RIGHT"',
              '"NONASSOC"',
            ],
            recoverable: false,
            state: 49,
            action: 2,
            new_state: 18,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 5,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[22].value_stack.[5].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 1:
%{test;%}
^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: '%{test;%}',
            value: 'test;',
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 0,
            recoverable: true,
            state: 14,
            action: 0,
            new_state: 207,
            stack_pointer: 4,
          },
          {
            errStr: `
There's very probably a problem with this '%{...%}' parser setup action code section.
    
  Erroneous area:
1: %{test;%}
^..^
2: %%hello: world;%%var foo = 'bar';
3: 
    
  Technical error report:
Parse error on line 1:
%{test;%}
^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: '%{test;%}',
            value: 'test;',
            token: '"$accept"',
            token_id: 0,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 0,
              last_line: 1,
              last_column: 9,
              range: [
                0,
                9,
              ],
            },
            expected: [
              '"START"',
              '"LEX_BLOCK"',
              '"FLEX_POINTER_MODE"',
              '"FLEX_ARRAY_MODE"',
              '"TOKEN"',
              '"ACTION_START_AT_SOL"',
              '"UNTERMINATED_ACTION_BLOCK"',
              '"ACTION_START"',
              '"DEBUG"',
              '"EBNF"',
              '"UNKNOWN_DECL"',
              '"OPTIONS"',
              '"IMPORT"',
              '"INIT_CODE"',
              '"ON_ERROR_RECOVERY_SHIFT"',
              '"ON_ERROR_RECOVERY_REDUCE"',
              '"%%"',
              '"PARSE_PARAM"',
              '"PARSER_TYPE"',
              '"LEFT"',
              '"RIGHT"',
              '"NONASSOC"',
            ],
            recoverable: false,
            state: 49,
            action: 2,
            new_state: 18,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 5,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[24].value_stack.[5].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 1:
%% test: foo bar -> $foo
-----------------^
Expecting ";", ":", "|", "(", ")", "*", "?", "+", "ACTION_START", "STRING_LIT", "PREC", "ALIAS", "ID", "EOF_ID", "suffix", got unexpected ARROW_ACTION_START`,
            exception: null,
            text: '->',
            value: '->',
            token: 'ARROW_ACTION_START',
            token_id: 'ARROW_ACTION_START',
            line: 0,
            recoverable: true,
            state: 163,
            action: 0,
            new_state: 207,
            stack_pointer: 8,
          },
          {
            errStr: `
rule production declaration error: did you terminate the rule production set with a semicolon?
    
  Erroneous area:
1: %% test: foo bar -> $foo
^...................^^^^^^^
2: ;
3: 
    
  Technical error report:
Parse error on line 1:
%% test: foo bar -> $foo
-----------------^
Expecting ";", ":", "|", "(", ")", "*", "?", "+", "ACTION_START", "STRING_LIT", "PREC", "ALIAS", "ID", "EOF_ID", "suffix", got unexpected ARROW_ACTION_START
`,
            exception: null,
            text: ';',
            value: ';',
            token: '"error"',
            token_id: 2,
            line: 1,
            loc: {
              first_line: 2,
              first_column: 0,
              last_line: 2,
              last_column: 1,
              range: [
                25,
                26,
              ],
            },
            expected: [
              'end of input',
              '";"',
              '"%%"',
              '"ID"',
            ],
            recoverable: false,
            state: 127,
            action: 2,
            new_state: 74,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 7,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[26].value_stack.[10].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 2:
%{baz 
^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: `%{baz 
%}`,
            value: `baz 
`,
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 1,
            recoverable: true,
            state: 14,
            action: 0,
            new_state: 207,
            stack_pointer: 4,
          },
          {
            errStr: `
There's very probably a problem with this '%{...%}' parser setup action code section.
    
  Erroneous area:
1: %{baz 
^..^
2: %}%% test: foo bar | { 
3: action; 
    
  Technical error report:
Parse error on line 2:
%{baz 
^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: `%{baz 
%}`,
            value: `baz 
`,
            token: '"$accept"',
            token_id: 0,
            line: 1,
            loc: {
              first_line: 1,
              first_column: 0,
              last_line: 2,
              last_column: 2,
              range: [
                0,
                10,
              ],
            },
            expected: [
              '"START"',
              '"LEX_BLOCK"',
              '"FLEX_POINTER_MODE"',
              '"FLEX_ARRAY_MODE"',
              '"TOKEN"',
              '"ACTION_START_AT_SOL"',
              '"UNTERMINATED_ACTION_BLOCK"',
              '"ACTION_START"',
              '"DEBUG"',
              '"EBNF"',
              '"UNKNOWN_DECL"',
              '"OPTIONS"',
              '"IMPORT"',
              '"INIT_CODE"',
              '"ON_ERROR_RECOVERY_SHIFT"',
              '"ON_ERROR_RECOVERY_REDUCE"',
              '"%%"',
              '"PARSE_PARAM"',
              '"PARSER_TYPE"',
              '"LEFT"',
              '"RIGHT"',
              '"NONASSOC"',
            ],
            recoverable: false,
            state: 49,
            action: 2,
            new_state: 18,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 5,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[28].value_stack.[5].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: 'Parsing aborted due to exception.',
            exception: {
              message: 'mkIdentifier is not defined',
              name: 'ReferenceError',
              stack: `ReferenceError: mkIdentifier is not defined
    at Object.parser__PerformAction (/ebnf-parser-cjs.js:8688:26)
    at Object.parse (/ebnf-parser-cjs.js:12175:24)
    at Object.parse (/ebnf-parser-cjs.js:25567:23)
    at Context.testEachParserExample (/bnf_parse.js:359:27)
    at callFn (/runnable.js:364:21)
    at Test.Runnable.run (/runnable.js:352:5)
    at Runner.runTest (/runner.js:677:10)
    at /runner.js:801:12
    at next (/runner.js:594:14)
    at /runner.js:604:7
    at next (/runner.js:486:14)
    at cbHookRun (/runner.js:551:7)
    at done (/runnable.js:308:5)
    at callFn (/runnable.js:387:7)
    at Hook.Runnable.run (/runnable.js:352:5)
    at next (/runner.js:510:10)
    at Immediate._onImmediate (/runner.js:572:5)
    at processImmediate (/timers.js:456:21)`,
            },
            text: 'one',
            value: 'one',
            token: '"$accept"',
            token_id: 0,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 9,
              last_line: 1,
              last_column: 12,
              range: [
                9,
                12,
              ],
            },
            expected: null,
            recoverable: false,
            state: 64,
            action: 2,
            new_state: 135,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 5,
            yy: {
              options: {},
              __options_flags__: 2,
              __options_category_description__: '%options',
              ebnf: false,
            },
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: 'Parsing aborted due to exception.',
            exception: {
              message: 'mkIdentifier is not defined',
              name: 'ReferenceError',
              stack: `ReferenceError: mkIdentifier is not defined
    at Object.parser__PerformAction (/ebnf-parser-cjs.js:8688:26)
    at Object.parse (/ebnf-parser-cjs.js:12175:24)
    at Object.parse (/ebnf-parser-cjs.js:25567:23)
    at Context.testEachParserExample (/bnf_parse.js:359:27)
    at callFn (/runnable.js:364:21)
    at Test.Runnable.run (/runnable.js:352:5)
    at Runner.runTest (/runner.js:677:10)
    at /runner.js:801:12
    at next (/runner.js:594:14)
    at /runner.js:604:7
    at next (/runner.js:486:14)
    at cbHookRun (/runner.js:551:7)
    at done (/runnable.js:308:5)
    at callFn (/runnable.js:387:7)
    at Hook.Runnable.run (/runnable.js:352:5)
    at next (/runner.js:510:10)
    at Immediate._onImmediate (/runner.js:572:5)
    at processImmediate (/timers.js:456:21)`,
            },
            text: 'bug-a-boo',
            value: 'bug-a-boo',
            token: '"$accept"',
            token_id: 0,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 9,
              last_line: 1,
              last_column: 18,
              range: [
                9,
                18,
              ],
            },
            expected: null,
            recoverable: false,
            state: 64,
            action: 2,
            new_state: 135,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 5,
            yy: {
              options: {},
              __options_flags__: 2,
              __options_category_description__: '%options',
              ebnf: false,
            },
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: 'Parsing aborted due to exception.',
            exception: {
              message: 'mkIdentifier is not defined',
              name: 'ReferenceError',
              stack: `ReferenceError: mkIdentifier is not defined
    at Object.parser__PerformAction (/ebnf-parser-cjs.js:8688:26)
    at Object.parse (/ebnf-parser-cjs.js:12175:24)
    at Object.parse (/ebnf-parser-cjs.js:25567:23)
    at Context.testEachParserExample (/bnf_parse.js:359:27)
    at callFn (/runnable.js:364:21)
    at Test.Runnable.run (/runnable.js:352:5)
    at Runner.runTest (/runner.js:677:10)
    at /runner.js:801:12
    at next (/runner.js:594:14)
    at /runner.js:604:7
    at next (/runner.js:486:14)
    at cbHookRun (/runner.js:551:7)
    at done (/runnable.js:308:5)
    at callFn (/runnable.js:387:7)
    at Hook.Runnable.run (/runnable.js:352:5)
    at next (/runner.js:510:10)
    at Immediate._onImmediate (/runner.js:572:5)
    at processImmediate (/timers.js:456:21)`,
            },
            text: 'ping',
            value: 'ping',
            token: '"$accept"',
            token_id: 0,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 9,
              last_line: 1,
              last_column: 13,
              range: [
                9,
                13,
              ],
            },
            expected: null,
            recoverable: false,
            state: 64,
            action: 2,
            new_state: 135,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 5,
            yy: {
              options: {},
              __options_flags__: 2,
              __options_category_description__: '%options',
              ebnf: false,
            },
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: 'Parsing aborted due to exception.',
            exception: {
              message: 'mkIdentifier is not defined',
              name: 'ReferenceError',
              stack: `ReferenceError: mkIdentifier is not defined
    at Object.parser__PerformAction (/ebnf-parser-cjs.js:8688:26)
    at Object.parse (/ebnf-parser-cjs.js:12175:24)
    at Object.parse (/ebnf-parser-cjs.js:25567:23)
    at Context.testEachParserExample (/bnf_parse.js:359:27)
    at callFn (/runnable.js:364:21)
    at Test.Runnable.run (/runnable.js:352:5)
    at Runner.runTest (/runner.js:677:10)
    at /runner.js:801:12
    at next (/runner.js:594:14)
    at /runner.js:604:7
    at next (/runner.js:486:14)
    at cbHookRun (/runner.js:551:7)
    at done (/runnable.js:308:5)
    at callFn (/runnable.js:387:7)
    at Hook.Runnable.run (/runnable.js:352:5)
    at next (/runner.js:510:10)
    at Immediate._onImmediate (/runner.js:572:5)
    at processImmediate (/timers.js:456:21)`,
            },
            text: 'ping',
            value: 'ping',
            token: '"$accept"',
            token_id: 0,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 9,
              last_line: 1,
              last_column: 13,
              range: [
                9,
                13,
              ],
            },
            expected: null,
            recoverable: false,
            state: 64,
            action: 2,
            new_state: 135,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 5,
            yy: {
              options: {},
              __options_flags__: 2,
              __options_category_description__: '%options',
              ebnf: false,
            },
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: 'Parsing aborted due to exception.',
            exception: {
              message: 'mkIdentifier is not defined',
              name: 'ReferenceError',
              stack: `ReferenceError: mkIdentifier is not defined
    at Object.parser__PerformAction (/ebnf-parser-cjs.js:8688:26)
    at Object.parse (/ebnf-parser-cjs.js:12175:24)
    at Object.parse (/ebnf-parser-cjs.js:25567:23)
    at Context.testEachParserExample (/bnf_parse.js:359:27)
    at callFn (/runnable.js:364:21)
    at Test.Runnable.run (/runnable.js:352:5)
    at Runner.runTest (/runner.js:677:10)
    at /runner.js:801:12
    at next (/runner.js:594:14)
    at /runner.js:604:7
    at next (/runner.js:486:14)
    at cbHookRun (/runner.js:551:7)
    at done (/runnable.js:308:5)
    at callFn (/runnable.js:387:7)
    at Hook.Runnable.run (/runnable.js:352:5)
    at next (/runner.js:510:10)
    at Immediate._onImmediate (/runner.js:572:5)
    at processImmediate (/timers.js:456:21)`,
            },
            text: 's1',
            value: 's1',
            token: '"$accept"',
            token_id: 0,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 9,
              last_line: 1,
              last_column: 11,
              range: [
                9,
                11,
              ],
            },
            expected: null,
            recoverable: false,
            state: 64,
            action: 2,
            new_state: 135,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 5,
            yy: {
              options: {},
              __options_flags__: 2,
              __options_category_description__: '%options',
              ebnf: false,
            },
            lexer: '[lexer]',
            parser: '[parser]',
          },
          {
            errStr: `Parse error on line 1:
%% foo: bar { return t...
------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"`,
            exception: null,
            text: '{',
            value: '{',
            token: '"ACTION_BODY"',
            token_id: 50,
            line: 0,
            recoverable: true,
            state: 184,
            action: 0,
            new_state: 207,
            stack_pointer: 9,
          },
          {
            errStr: `
rule production declaration error: did you terminate the rule production set with a semicolon?
    
  Erroneous area:
1: %% foo: bar { return true; };
^..............^
    
  Technical error report:
Parse error on line 1:
%% foo: bar { return t...
------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
            exception: null,
            text: '}',
            value: '}',
            token: '"error"',
            token_id: 2,
            line: 0,
            loc: {
              first_line: 1,
              first_column: 27,
              last_line: 1,
              last_column: 28,
              range: [
                27,
                28,
              ],
            },
            expected: [
              'end of input',
              '";"',
              '"%%"',
              '"ID"',
            ],
            recoverable: false,
            state: 127,
            action: 2,
            new_state: 74,
            symbol_stack: [],
            state_stack: [],
            value_stack: [],
            location_stack: [],
            stack_pointer: 7,
            yy: '[reference to sibling --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos.[30].value_stack.[13].yy]',
            lexer: '[lexer]',
            parser: '[parser]',
          },
        ],
        __error_recovery_infos: '[reference to sibling array --> *.err.hash.parser.__error_infos.[1].parser.__error_recovery_infos, length = 32]',
        lexer: {
          EOF: 1,
          ERROR: 2,
          __error_infos: '[reference to sibling array --> *.err.hash.parser.__error_infos.[1].parser.lexer.__error_infos, length = 0]',
          __decompressed: true,
          done: true,
          _backtrack: false,
          _input: '',
          _more: false,
          _signaled_error_token: false,
          _clear_state: 0,
          conditionStack: [
            'INITIAL',
            'code',
          ],
          match: '',
          matched: '%% foo: bar { return true; };',
          matches: false,
          yytext: '',
          offset: 29,
          base_position: 0,
          yyleng: 0,
          yylineno: 0,
          yylloc: {
            first_line: 1,
            first_column: 29,
            last_line: 1,
            last_column: 29,
            range: [
              29,
              29,
            ],
          },
          CRLF_Re: {
            re: '/\\r\\n?|\\n/',
            source: '\\r\\n?|\\n',
            flags: '',
          },
          options: {
            xregexp: true,
            ranges: true,
            trackPosition: true,
            easy_keyword_rules: true,
          },
          yy: {
            depth: 0,
            include_command_allowed: false,
          },
          __original_input__: '%% foo: bar { return true; };',
        },
        __lexer__: {
          yy: {},
          _input: '',
          _clear_state: -1,
          _signaled_error_token: false,
          done: false,
          yylineno: 0,
          matched: '',
          conditionStack: [
            'INITIAL',
          ],
          __currentRuleSet__: null,
          yylloc: {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0,
            range: [
              0,
              0,
            ],
          },
          offset: 0,
          base_position: 0,
          yytext: '',
          yyleng: 0,
          match: '',
          matches: false,
          _more: false,
          _backtrack: false,
        },
      },
    },
    message: `
rule production declaration error: did you terminate the rule production set with a semicolon?
    
  Erroneous area:
1: %% foo: bar { return true; };
^..............^
    
  Technical error report:
Parse error on line 1:
%% foo: bar { return t...
------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"
`,
    name: 'JisonParserError',
    stack: `JisonParserError: 
rule production declaration error: did you terminate the rule production set with a semicolon?
    
  Erroneous area:
1: %% foo: bar { return true; };
^..............^
    
  Technical error report:
Parse error on line 1:
%% foo: bar { return t...
------------^
Expecting "{", "ACTION_END", "INCLUDE", "ARROW_ACTION", "ACTION", "include_keyword", "action_ne", "action", "include_macro_code", got unexpected "ACTION_BODY"

    at Object.parseError (/ebnf-parser-cjs.js:10725:15)
    at Object.yyError (/ebnf-parser-cjs.js:10908:25)
    at Object.parser__PerformAction (/ebnf-parser-cjs.js:7837:14)
    at Object.parse (/ebnf-parser-cjs.js:11972:24)
    at Object.parse (/ebnf-parser-cjs.js:25567:23)
    at Context.testEachParserExample (/bnf_parse.js:359:27)
    at callFn (/runnable.js:364:21)
    at Test.Runnable.run (/runnable.js:352:5)
    at Runner.runTest (/runner.js:677:10)
    at /runner.js:801:12
    at next (/runner.js:594:14)
    at /runner.js:604:7
    at next (/runner.js:486:14)
    at cbHookRun (/runner.js:551:7)
    at done (/runnable.js:308:5)
    at callFn (/runnable.js:387:7)
    at Hook.Runnable.run (/runnable.js:352:5)
    at next (/runner.js:510:10)
    at Immediate._onImmediate (/runner.js:572:5)
    at processImmediate (/timers.js:456:21)`,
  },
}